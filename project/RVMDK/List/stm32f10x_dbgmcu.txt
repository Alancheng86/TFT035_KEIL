; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_dbgmcu.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32f10x_dbgmcu.d --cpu=Cortex-M3 --apcs=interwork -Otime --diag_suppress=9931 -I..\..\project -I..\..\library\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=517 -DVECT_TAB_FLASH --omf_browse=.\obj\stm32f10x_dbgmcu.crf ..\..\library\src\stm32f10x_dbgmcu.c]
                          THUMB

                          AREA ||i.DBGMCU_Config||, CODE, READONLY, ALIGN=2

                  DBGMCU_Config PROC
;;;80     *******************************************************************************/
;;;81     void DBGMCU_Config(u32 DBGMCU_Periph, FunctionalState NewState)
000000  4a04              LDR      r2,|L1.20|
;;;82     {
;;;83       /* Check the parameters */
;;;84       assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;85       assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;86     
;;;87       if (NewState != DISABLE)
000002  2900              CMP      r1,#0
;;;88       {
;;;89         DBGMCU->CR |= DBGMCU_Periph;
;;;90       }
;;;91       else
;;;92       {
;;;93         DBGMCU->CR &= ~DBGMCU_Periph;
000004  6851              LDR      r1,[r2,#4]
000006  bf14              ITE      NE                    ;89
000008  4308              ORRNE    r0,r0,r1              ;89
00000a  ea210000          BICEQ    r0,r1,r0
00000e  6050              STR      r0,[r2,#4]            ;89
;;;94       }
;;;95     }
000010  4770              BX       lr
;;;96     
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetDEVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetDEVID PROC
;;;46     *******************************************************************************/
;;;47     u32 DBGMCU_GetDEVID(void)
000000  4802              LDR      r0,|L2.12|
;;;48     {
;;;49        return(DBGMCU->IDCODE & IDCODE_DEVID_Mask);
000002  6800              LDR      r0,[r0,#0]
000004  f3c0000b          UBFX     r0,r0,#0,#12
;;;50     }
000008  4770              BX       lr
;;;51     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetREVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;34     *******************************************************************************/
;;;35     u32 DBGMCU_GetREVID(void)
000000  4801              LDR      r0,|L3.8|
;;;36     {
;;;37        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;38     }
000006  4770              BX       lr
;;;39     
                          ENDP

                  |L3.8|
                          DCD      0xe0042000
