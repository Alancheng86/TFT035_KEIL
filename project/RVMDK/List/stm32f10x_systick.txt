; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_systick.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32f10x_systick.d --cpu=Cortex-M3 --apcs=interwork -Otime --diag_suppress=9931 -I..\..\project -I..\..\library\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 -DVECT_TAB_FLASH --omf_browse=.\obj\stm32f10x_systick.crf ..\..\library\src\stm32f10x_systick.c]
                          THUMB

                          AREA ||i.SysTick_CLKSourceConfig||, CODE, READONLY, ALIGN=1

                  SysTick_CLKSourceConfig PROC
;;;42     *******************************************************************************/
;;;43     void SysTick_CLKSourceConfig(u32 SysTick_CLKSource)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;44     {
;;;45       /* Check the parameters */
;;;46       assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;47     
;;;48       if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000004  2804              CMP      r0,#4
;;;49       {
;;;50         SysTick->CTRL |= SysTick_CLKSource_HCLK;
;;;51       }
;;;52       else
;;;53       {
;;;54         SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000006  6908              LDR      r0,[r1,#0x10]
000008  bf0c              ITE      EQ                    ;50
00000a  f0400004          ORREQ    r0,r0,#4              ;50
00000e  f0200004          BICNE    r0,r0,#4
000012  6108              STR      r0,[r1,#0x10]         ;50
;;;55       }
;;;56     }
000014  4770              BX       lr
;;;57     
                          ENDP


                          AREA ||i.SysTick_CounterCmd||, CODE, READONLY, ALIGN=1

                  SysTick_CounterCmd PROC
;;;84     *******************************************************************************/
;;;85     void SysTick_CounterCmd(u32 SysTick_Counter)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;86     {
;;;87       /* Check the parameters */
;;;88       assert_param(IS_SYSTICK_COUNTER(SysTick_Counter));
;;;89     
;;;90       if (SysTick_Counter == SysTick_Counter_Enable)
000004  2801              CMP      r0,#1
;;;91       {
;;;92         SysTick->CTRL |= SysTick_Counter_Enable;
000006  bf04              ITT      EQ
000008  6908              LDREQ    r0,[r1,#0x10]
00000a  f0400001          ORREQ    r0,r0,#1
00000e  d009              BEQ      |L2.36|
000010  f1100f02          CMN      r0,#2                 ;86
;;;93       }
;;;94       else if (SysTick_Counter == SysTick_Counter_Disable) 
;;;95       {
;;;96         SysTick->CTRL &= SysTick_Counter_Disable;
000014  bf07              ITTEE    EQ
000016  6908              LDREQ    r0,[r1,#0x10]
000018  f0200001          BICEQ    r0,r0,#1
;;;97       }
;;;98       else /* SysTick_Counter == SysTick_Counter_Clear */
;;;99       {
;;;100        SysTick->VAL = SysTick_Counter_Clear;
00001c  2000              MOVNE    r0,#0
00001e  6188              STRNE    r0,[r1,#0x18]
;;;101      }    
;;;102    }
000020  bf18              IT       NE
000022  4770              BXNE     lr
                  |L2.36|
000024  6108              STR      r0,[r1,#0x10]         ;92
000026  4770              BX       lr
;;;103    
                          ENDP


                          AREA ||i.SysTick_GetCounter||, CODE, READONLY, ALIGN=1

                  SysTick_GetCounter PROC
;;;133    *******************************************************************************/
;;;134    u32 SysTick_GetCounter(void)
000000  f04f20e0          MOV      r0,#0xe000e000
;;;135    {
;;;136      return(SysTick->VAL);
000004  6980              LDR      r0,[r0,#0x18]
;;;137    }
000006  4770              BX       lr
;;;138    
                          ENDP


                          AREA ||i.SysTick_GetFlagStatus||, CODE, READONLY, ALIGN=1

                  SysTick_GetFlagStatus PROC
;;;149    *******************************************************************************/
;;;150    FlagStatus SysTick_GetFlagStatus(u8 SysTick_FLAG)
000000  2200              MOVS     r2,#0
;;;151    {
;;;152      u32 statusreg = 0, tmp = 0 ;
;;;153      FlagStatus bitstatus = RESET;
;;;154    
;;;155      /* Check the parameters */
;;;156      assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));
;;;157    
;;;158      /* Get the SysTick register index */
;;;159      tmp = SysTick_FLAG >> 3;
000002  08c1              LSRS     r1,r0,#3
;;;160    
;;;161      if (tmp == 2) /* The flag to check is in CTRL register */
;;;162      {
;;;163        statusreg = SysTick->CTRL;
000004  f04f23e0          MOV      r3,#0xe000e000
000008  2902              CMP      r1,#2                 ;161
00000a  bf0c              ITE      EQ
00000c  6919              LDREQ    r1,[r3,#0x10]
;;;164      }
;;;165      else          /* The flag to check is in CALIB register */
;;;166      {
;;;167        statusreg = SysTick->CALIB;
00000e  69d9              LDRNE    r1,[r3,#0x1c]
;;;168      }
;;;169    
;;;170      if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
000010  2301              MOVS     r3,#1
000012  fa03f000          LSL      r0,r3,r0
000016  4208              TST      r0,r1
;;;171      {
;;;172        bitstatus = SET;
000018  bf18              IT       NE
00001a  2201              MOVNE    r2,#1
;;;173      }
;;;174      else
;;;175      {
;;;176        bitstatus = RESET;
;;;177      }
;;;178      return bitstatus;
00001c  4610              MOV      r0,r2
;;;179    }
00001e  4770              BX       lr
;;;180    
                          ENDP


                          AREA ||i.SysTick_ITConfig||, CODE, READONLY, ALIGN=1

                  SysTick_ITConfig PROC
;;;111    *******************************************************************************/
;;;112    void SysTick_ITConfig(FunctionalState NewState)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;113    {
;;;114      /* Check the parameters */
;;;115      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;116    
;;;117      if (NewState != DISABLE)
000004  2800              CMP      r0,#0
;;;118      {
;;;119        SysTick->CTRL |= CTRL_TICKINT_Set;
;;;120      }
;;;121      else
;;;122      {
;;;123        SysTick->CTRL &= CTRL_TICKINT_Reset;
000006  6908              LDR      r0,[r1,#0x10]
000008  bf14              ITE      NE                    ;119
00000a  f0400002          ORRNE    r0,r0,#2              ;119
00000e  f0200002          BICEQ    r0,r0,#2
000012  6108              STR      r0,[r1,#0x10]         ;119
;;;124      }
;;;125    }
000014  4770              BX       lr
;;;126    
                          ENDP


                          AREA ||i.SysTick_SetReload||, CODE, READONLY, ALIGN=1

                  SysTick_SetReload PROC
;;;65     *******************************************************************************/
;;;66     void SysTick_SetReload(u32 Reload)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;67     {
;;;68       /* Check the parameters */
;;;69       assert_param(IS_SYSTICK_RELOAD(Reload));
;;;70     
;;;71       SysTick->LOAD = Reload;
000004  6148              STR      r0,[r1,#0x14]
;;;72     }
000006  4770              BX       lr
;;;73     
                          ENDP

