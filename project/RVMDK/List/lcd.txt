; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lcd.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\lcd.d --cpu=Cortex-M3 --apcs=interwork -Otime --diag_suppress=9931 -I..\..\project -I..\..\library\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 -DVECT_TAB_FLASH --omf_browse=.\obj\lcd.crf ..\LCD.c]
                          THUMB

                          AREA ||i.All_Color||, CODE, READONLY, ALIGN=2

                  All_Color PROC
;;;2866   
;;;2867   void All_Color(u8 corr,u8 corg,u8 corb)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;2868   {
;;;2869     vu32 index =0 ;
000004  f04f0800          MOV      r8,#0
000008  4615              MOV      r5,r2                 ;2868
00000a  460e              MOV      r6,r1                 ;2868
00000c  4607              MOV      r7,r0                 ;2868
;;;2870     LCD_SetDisplayWindow(0,(XDP-1),0,(YDP-1));
00000e  23ef              MOVS     r3,#0xef
000010  4642              MOV      r2,r8
000012  f24011df          MOV      r1,#0x1df
000016  4640              MOV      r0,r8
000018  f8cd8000          STR      r8,[sp,#0]
00001c  f7fffffe          BL       LCD_SetDisplayWindow
000020  202c              MOVS     r0,#0x2c
000022  f7fffffe          BL       SSD1963Command_8
;;;2871     LCD_WriteRAM_Prepare();
;;;2872    
;;;2873     LCD_RS(1);
000026  4c10              LDR      r4,|L1.104|
000028  6820              LDR      r0,[r4,#0]
00002a  f0400008          ORR      r0,r0,#8
00002e  6020              STR      r0,[r4,#0]
;;;2874               SSD1963_CS(0);//asm("NOP");asm("NOP");
000030  6820              LDR      r0,[r4,#0]
000032  f0200004          BIC      r0,r0,#4
000036  6020              STR      r0,[r4,#0]
;;;2875   
;;;2876     for(index = 0; index < (YDP*XDP); index++)
000038  f8cd8000          STR      r8,[sp,#0]
                  |L1.60|
;;;2877     {
;;;2878   	 SSD1963Data_8tt(corr);SSD1963Data_8tt(corg);SSD1963Data_8tt(corb);
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       SSD1963Data_8tt
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       SSD1963Data_8tt
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       SSD1963Data_8tt
00004e  9800              LDR      r0,[sp,#0]            ;2876
000050  1c40              ADDS     r0,r0,#1              ;2876
000052  9000              STR      r0,[sp,#0]            ;2876
000054  f5b03fe1          CMP      r0,#0x1c200           ;2876
000058  d3f0              BCC      |L1.60|
;;;2879     }
;;;2880      SSD1963_CS(1);
00005a  6820              LDR      r0,[r4,#0]
00005c  f0400004          ORR      r0,r0,#4
000060  6020              STR      r0,[r4,#0]
;;;2881   }
000062  e8bd83f8          POP      {r3-r9,pc}
;;;2882   void LCD_Clear(void)
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      0x4001080c

                          AREA ||i.Backward_scan||, CODE, READONLY, ALIGN=2

                  Backward_scan PROC
;;;2632   
;;;2633   void Backward_scan(void)
000000  4901              LDR      r1,|L2.8|
;;;2634   {
;;;2635   	SEND_MIPI_DATA(2,SC7789_A_CC_B);	
000002  2002              MOVS     r0,#2
000004  f7ffbffe          B.W      SEND_MIPI_DATA
;;;2636   }
;;;2637   
                          ENDP

                  |L2.8|
                          DCD      ||.data||+0x1e

                          AREA ||i.CT||, CODE, READONLY, ALIGN=1

                  ||CT|| PROC
;;;2839   
;;;2840   void CT(void)
000000  b570              PUSH     {r4-r6,lr}
;;;2841   {
;;;2842   	u16 m,n;
;;;2843   
;;;2844   	LCD_SetDisplayWindow(0,(XDP-1),0,(YDP-1));
000002  2200              MOVS     r2,#0
000004  23ef              MOVS     r3,#0xef
000006  f24011df          MOV      r1,#0x1df
00000a  4610              MOV      r0,r2
00000c  f7fffffe          BL       LCD_SetDisplayWindow
000010  202c              MOVS     r0,#0x2c
000012  f7fffffe          BL       SSD1963Command_8
;;;2845   	LCD_WriteRAM_Prepare();
;;;2846   
;;;2847   	for(m = 0; m <(YDP); m++)
000016  2500              MOVS     r5,#0
                  |L3.24|
;;;2848   	{
;;;2849   		
;;;2850     	  for(n = 0; n <XDP; n++)
000018  2400              MOVS     r4,#0
                  |L3.26|
;;;2851     	     {
;;;2852   	         
;;;2853   			 if((270<m<530)&&(160<n<320))
;;;2854   			{
;;;2855   				SSD1963Data_8(0x00);SSD1963Data_8(0x00);SSD1963Data_8(0x00);	
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       SSD1963Data_8
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       SSD1963Data_8
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       SSD1963Data_8
00002c  1c60              ADDS     r0,r4,#1              ;2850
00002e  b284              UXTH     r4,r0                 ;2850
000030  f5b47ff0          CMP      r4,#0x1e0             ;2850
000034  d3f1              BCC      |L3.26|
000036  1c68              ADDS     r0,r5,#1              ;2847
000038  b285              UXTH     r5,r0                 ;2847
00003a  2df0              CMP      r5,#0xf0              ;2847
00003c  d3ec              BCC      |L3.24|
;;;2856   			}
;;;2857   			else
;;;2858   			{
;;;2859   				SSD1963Data_8(0x80);SSD1963Data_8(0x80);SSD1963Data_8(0x80);	
;;;2860   			}
;;;2861   	     }
;;;2862   	
;;;2863   		 
;;;2864   	}	
;;;2865   }
00003e  bd70              POP      {r4-r6,pc}
;;;2866   
                          ENDP


                          AREA ||i.ENTER_LP_mode||, CODE, READONLY, ALIGN=1

                  ENTER_LP_mode PROC
;;;1062   *******************************************************************************/
;;;1063   void ENTER_LP_mode(void)
000000  b510              PUSH     {r4,lr}
;;;1064   {
;;;1065   	
;;;1066   //	SSD1963Command_8(0xb9); //PLL disable 
;;;1067   //	SSD1963GPIOOUTDATA_16(0x0000);
;;;1068   //	SSD1963GPIOOUTDATA_18(0xba); //PLL setting 
;;;1069   //	SSD1963GPIOOUTDATA_16(0x400a);
;;;1070   //	SSD1963GPIOOUTDATA_18(0xbb); //LP clock divider 
;;;1071   //	SSD1963GPIOOUTDATA_16(0x0005);
;;;1072   //	SSD1963GPIOOUTDATA_18(0xb9); //PLL enable 
;;;1073   //	SSD1963GPIOOUTDATA_16(0x4001); //4·ÖÆµ£¬SYS_CLKÊä³ö24/4=6MHZ
;;;1074   //	Delay(1);
;;;1075   	SSD1963GPIOOUTCOM(0xb7); //DCS mode, LP mode
000002  20b7              MOVS     r0,#0xb7
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1076   	SSD1963GPIOOUTDATA_16(0x0752); //short packet 
000008  f2407052          MOV      r0,#0x752
00000c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1077   	Delay(1);
000010  e8bd4010          POP      {r4,lr}
000014  2001              MOVS     r0,#1
000016  f7ffbffe          B.W      Delay
;;;1078   }
;;;1079   
                          ENDP


                          AREA ||i.ENTER_READ_mode||, CODE, READONLY, ALIGN=1

                  ENTER_READ_mode PROC
;;;1086   *******************************************************************************/
;;;1087   void ENTER_READ_mode(void)
000000  b510              PUSH     {r4,lr}
;;;1088   {
;;;1089   	SSD1963GPIOOUTCOM(0xb7);
000002  20b7              MOVS     r0,#0xb7
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1090   	SSD1963GPIOOUTDATA_16(0x03c2); //////enter read mode      for generic read					 Õ{Ô‡OK£¬2013-10-24£¬£¬±ØíšÔOÖÃžé0X03C2..
000008  e8bd4010          POP      {r4,lr}
00000c  f24030c2          MOV      r0,#0x3c2
000010  f7ffbffe          B.W      SSD1963GPIOOUTDATA_16
;;;1091   //	SSD1963GPIOOUTDATA_16(0x0382);
;;;1092   }
;;;1093   
                          ENDP


                          AREA ||i.ENTER_hs_mode||, CODE, READONLY, ALIGN=1

                  ENTER_hs_mode PROC
;;;1093   
;;;1094   void ENTER_hs_mode(void)
000000  b510              PUSH     {r4,lr}
;;;1095   {
;;;1096   //		SSD1963GPIOOUTCOM(0xb9);		//PLL disable 
;;;1097   //		SSD1963GPIOOUTDATA_16(0x0000);
;;;1098   //		Delay(1);
;;;1099   //			
;;;1100   //			SSD1963GPIOOUTCOM(0xba);		//PLL setting 
;;;1101   //		SSD1963GPIOOUTDATA_16(0x8016);			
;;;1102   //
;;;1103   //			SSD1963GPIOOUTCOM(0xbb);		//LP clock divider 
;;;1104   //		SSD1963GPIOOUTDATA_16(0x0007);			
;;;1105   //
;;;1106   //			SSD1963GPIOOUTCOM(0xb9);		//PLL enable 
;;;1107   //		SSD1963GPIOOUTDATA_16(0x4001);
;;;1108   //		Delay(1);
;;;1109   
;;;1110   	SSD1963GPIOOUTCOM(0xb7);		//Generic mode, HS video mode 
000002  20b7              MOVS     r0,#0xb7
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1111   	SSD1963GPIOOUTDATA_16(0x070b);	
000008  e8bd4010          POP      {r4,lr}
00000c  f240700b          MOV      r0,#0x70b
000010  f7ffbffe          B.W      SSD1963GPIOOUTDATA_16
;;;1112   }
;;;1113   
                          ENDP


                          AREA ||i.Flicker_COLUMN||, CODE, READONLY, ALIGN=1

                  Flicker_COLUMN PROC
;;;2771   
;;;2772   void Flicker_COLUMN(void)
000000  b570              PUSH     {r4-r6,lr}
;;;2773   {
;;;2774   	u16 m,n;
;;;2775     
;;;2776     LCD_SetDisplayWindow(0, XDP-1, 0, YDP-1);
000002  2200              MOVS     r2,#0
000004  23ef              MOVS     r3,#0xef
000006  f24011df          MOV      r1,#0x1df
00000a  4610              MOV      r0,r2
00000c  f7fffffe          BL       LCD_SetDisplayWindow
000010  202c              MOVS     r0,#0x2c
000012  f7fffffe          BL       SSD1963Command_8
;;;2777     LCD_WriteRAM_Prepare();
;;;2778    
;;;2779   	for(m = 0; m <(YDP/2); m++)
000016  2500              MOVS     r5,#0
                  |L7.24|
;;;2780   	{
;;;2781   		for(n = 0; n <(XDP); n++)
000018  2400              MOVS     r4,#0
                  |L7.26|
;;;2782   		{
;;;2783   	         SSD1963Data_8(0X80);SSD1963Data_8(0X80);SSD1963Data_8(0X80);
00001a  2080              MOVS     r0,#0x80
00001c  f7fffffe          BL       SSD1963Data_8
000020  2080              MOVS     r0,#0x80
000022  f7fffffe          BL       SSD1963Data_8
000026  2080              MOVS     r0,#0x80
000028  f7fffffe          BL       SSD1963Data_8
00002c  1c60              ADDS     r0,r4,#1              ;2781
00002e  b284              UXTH     r4,r0                 ;2781
000030  f5b47ff0          CMP      r4,#0x1e0             ;2781
000034  d3f1              BCC      |L7.26|
;;;2784   		}
;;;2785   		for(n = 0; n <(XDP); n++)
000036  2400              MOVS     r4,#0
                  |L7.56|
;;;2786   		{
;;;2787   	         
;;;2788   			 SSD1963Data_8(0X00);SSD1963Data_8(0X00);SSD1963Data_8(0X00);
000038  2000              MOVS     r0,#0
00003a  f7fffffe          BL       SSD1963Data_8
00003e  2000              MOVS     r0,#0
000040  f7fffffe          BL       SSD1963Data_8
000044  2000              MOVS     r0,#0
000046  f7fffffe          BL       SSD1963Data_8
00004a  1c60              ADDS     r0,r4,#1              ;2785
00004c  b284              UXTH     r4,r0                 ;2785
00004e  f5b47ff0          CMP      r4,#0x1e0             ;2785
000052  d3f1              BCC      |L7.56|
000054  1c68              ADDS     r0,r5,#1              ;2779
000056  b285              UXTH     r5,r0                 ;2779
000058  2d78              CMP      r5,#0x78              ;2779
00005a  d3dd              BCC      |L7.24|
;;;2789   		}
;;;2790   	}
;;;2791   }
00005c  bd70              POP      {r4-r6,pc}
;;;2792   
                          ENDP


                          AREA ||i.Flicker_PIXEL||, CODE, READONLY, ALIGN=2

                  Flicker_PIXEL PROC
;;;2747   
;;;2748   void Flicker_PIXEL(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;2749   {
;;;2750   	u16 m,n;
;;;2751     
;;;2752     LCD_SetDisplayWindow(0, XDP-1, 0, YDP-1);
000004  2200              MOVS     r2,#0
000006  23ef              MOVS     r3,#0xef
000008  f24011df          MOV      r1,#0x1df
00000c  4610              MOV      r0,r2
00000e  f7fffffe          BL       LCD_SetDisplayWindow
000012  202c              MOVS     r0,#0x2c
000014  f7fffffe          BL       SSD1963Command_8
;;;2753     LCD_WriteRAM_Prepare();
;;;2754    
;;;2755   	LCD_RS(1);
000018  f8dfa098          LDR      r10,|L8.180|
00001c  f8da0000          LDR      r0,[r10,#0]
000020  f0400008          ORR      r0,r0,#8
000024  f8ca0000          STR      r0,[r10,#0]
;;;2756               SSD1963_CS(0);
000028  f8da0000          LDR      r0,[r10,#0]
00002c  f0200004          BIC      r0,r0,#4
000030  f8ca0000          STR      r0,[r10,#0]
000034  2420              MOVS     r4,#0x20
000036  f10a0604          ADD      r6,r10,#4
00003a  f8df907c          LDR      r9,|L8.184|
;;;2757   
;;;2758   	for(m = 0; m <(YDP); m++)
00003e  f04f0800          MOV      r8,#0
000042  1d37              ADDS     r7,r6,#4
                  |L8.68|
;;;2759   	{
;;;2760   		for(n = 0; n <(XDP/2); n++)
000044  2500              MOVS     r5,#0
                  |L8.70|
;;;2761   		{
;;;2762   	         SSD1963Data_8tt(0X80);	 SSD1963Data_8tt(0X80);  SSD1963Data_8tt(0X80);
000046  2180              MOVS     r1,#0x80
000048  6034              STR      r4,[r6,#0]
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       GPIO_Write
000050  603c              STR      r4,[r7,#0]
000052  2180              MOVS     r1,#0x80
000054  6034              STR      r4,[r6,#0]
000056  4648              MOV      r0,r9
000058  f7fffffe          BL       GPIO_Write
00005c  603c              STR      r4,[r7,#0]
00005e  2180              MOVS     r1,#0x80
000060  6034              STR      r4,[r6,#0]
000062  4648              MOV      r0,r9
000064  f7fffffe          BL       GPIO_Write
000068  603c              STR      r4,[r7,#0]
;;;2763   			 SSD1963Data_8tt(0X00);	 SSD1963Data_8tt(0X00);  SSD1963Data_8tt(0X00);
00006a  2100              MOVS     r1,#0
00006c  6034              STR      r4,[r6,#0]
00006e  4648              MOV      r0,r9
000070  f7fffffe          BL       GPIO_Write
000074  603c              STR      r4,[r7,#0]
000076  2100              MOVS     r1,#0
000078  6034              STR      r4,[r6,#0]
00007a  4648              MOV      r0,r9
00007c  f7fffffe          BL       GPIO_Write
000080  603c              STR      r4,[r7,#0]
000082  2100              MOVS     r1,#0
000084  6034              STR      r4,[r6,#0]
000086  4648              MOV      r0,r9
000088  f7fffffe          BL       GPIO_Write
00008c  603c              STR      r4,[r7,#0]
00008e  1c68              ADDS     r0,r5,#1              ;2760
000090  b285              UXTH     r5,r0                 ;2760
000092  2df0              CMP      r5,#0xf0              ;2760
000094  d3d7              BCC      |L8.70|
000096  f1080001          ADD      r0,r8,#1              ;2758
00009a  fa1ff880          UXTH     r8,r0                 ;2758
00009e  f1b80ff0          CMP      r8,#0xf0              ;2758
0000a2  d3cf              BCC      |L8.68|
;;;2764   //			 SSD1963Data_8(0X7f);SSD1963Data_8(0X7f);SSD1963Data_8(0X7f);
;;;2765   //			 SSD1963Data_8(0X00);SSD1963Data_8(0X00);SSD1963Data_8(0X00);
;;;2766   		}
;;;2767   		
;;;2768   	}
;;;2769   	SSD1963_CS(1);
0000a4  f8da0000          LDR      r0,[r10,#0]
0000a8  f0400004          ORR      r0,r0,#4
0000ac  f8ca0000          STR      r0,[r10,#0]
;;;2770   }
0000b0  e8bd87f0          POP      {r4-r10,pc}
;;;2771   
                          ENDP

                  |L8.180|
                          DCD      0x4001080c
                  |L8.184|
                          DCD      0x40010c00

                          AREA ||i.Flicker_sub_pixel||, CODE, READONLY, ALIGN=2

                  Flicker_sub_pixel PROC
;;;2723   
;;;2724   void Flicker_sub_pixel(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;2725   {
;;;2726   	u16 m,n;
;;;2727     
;;;2728     LCD_SetDisplayWindow(0, XDP-1, 0, YDP-1);
000004  2200              MOVS     r2,#0
000006  23ef              MOVS     r3,#0xef
000008  f24011df          MOV      r1,#0x1df
00000c  4610              MOV      r0,r2
00000e  f7fffffe          BL       LCD_SetDisplayWindow
000012  202c              MOVS     r0,#0x2c
000014  f7fffffe          BL       SSD1963Command_8
;;;2729     LCD_WriteRAM_Prepare();
;;;2730   
;;;2731   	LCD_RS(1);
000018  f8dfa098          LDR      r10,|L9.180|
00001c  f8da0000          LDR      r0,[r10,#0]
000020  f0400008          ORR      r0,r0,#8
000024  f8ca0000          STR      r0,[r10,#0]
;;;2732   	SSD1963_CS(0);
000028  f8da0000          LDR      r0,[r10,#0]
00002c  f0200004          BIC      r0,r0,#4
000030  f8ca0000          STR      r0,[r10,#0]
000034  2420              MOVS     r4,#0x20
000036  f10a0604          ADD      r6,r10,#4
00003a  f8df907c          LDR      r9,|L9.184|
;;;2733   
;;;2734   	for(m = 0; m <(YDP); m++)
00003e  f04f0800          MOV      r8,#0
000042  1d37              ADDS     r7,r6,#4
                  |L9.68|
;;;2735   	{
;;;2736   		for(n = 0; n <(XDP/2); n++)
000044  2500              MOVS     r5,#0
                  |L9.70|
;;;2737   		{
;;;2738   	         SSD1963Data_8tt(0X80);	 SSD1963Data_8tt(0X00);	  SSD1963Data_8tt(0X80);	
000046  2180              MOVS     r1,#0x80
000048  6034              STR      r4,[r6,#0]
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       GPIO_Write
000050  603c              STR      r4,[r7,#0]
000052  2100              MOVS     r1,#0
000054  6034              STR      r4,[r6,#0]
000056  4648              MOV      r0,r9
000058  f7fffffe          BL       GPIO_Write
00005c  603c              STR      r4,[r7,#0]
00005e  2180              MOVS     r1,#0x80
000060  6034              STR      r4,[r6,#0]
000062  4648              MOV      r0,r9
000064  f7fffffe          BL       GPIO_Write
000068  603c              STR      r4,[r7,#0]
;;;2739   			 SSD1963Data_8tt(0X00);	 SSD1963Data_8tt(0X80);	  SSD1963Data_8tt(0X00);
00006a  2100              MOVS     r1,#0
00006c  6034              STR      r4,[r6,#0]
00006e  4648              MOV      r0,r9
000070  f7fffffe          BL       GPIO_Write
000074  603c              STR      r4,[r7,#0]
000076  2180              MOVS     r1,#0x80
000078  6034              STR      r4,[r6,#0]
00007a  4648              MOV      r0,r9
00007c  f7fffffe          BL       GPIO_Write
000080  603c              STR      r4,[r7,#0]
000082  2100              MOVS     r1,#0
000084  6034              STR      r4,[r6,#0]
000086  4648              MOV      r0,r9
000088  f7fffffe          BL       GPIO_Write
00008c  603c              STR      r4,[r7,#0]
00008e  1c68              ADDS     r0,r5,#1              ;2736
000090  b285              UXTH     r5,r0                 ;2736
000092  2df0              CMP      r5,#0xf0              ;2736
000094  d3d7              BCC      |L9.70|
000096  f1080001          ADD      r0,r8,#1              ;2734
00009a  fa1ff880          UXTH     r8,r0                 ;2734
00009e  f1b80ff0          CMP      r8,#0xf0              ;2734
0000a2  d3cf              BCC      |L9.68|
;;;2740   //			 SSD1963Data_8(0X80);SSD1963Data_8(0X00);SSD1963Data_8(0X80);
;;;2741   //			 SSD1963Data_8(0X00);SSD1963Data_8(0X80);SSD1963Data_8(0X00);
;;;2742   		}
;;;2743   		
;;;2744   	}
;;;2745   	SSD1963_CS(1);	
0000a4  f8da0000          LDR      r0,[r10,#0]
0000a8  f0400004          ORR      r0,r0,#4
0000ac  f8ca0000          STR      r0,[r10,#0]
;;;2746   }
0000b0  e8bd87f0          POP      {r4-r10,pc}
;;;2747   
                          ENDP

                  |L9.180|
                          DCD      0x4001080c
                  |L9.184|
                          DCD      0x40010c00

                          AREA ||i.Forward_scan||, CODE, READONLY, ALIGN=2

                  Forward_scan PROC
;;;2627   
;;;2628   void Forward_scan(void)
000000  4901              LDR      r1,|L10.8|
;;;2629   {
;;;2630   	SEND_MIPI_DATA(2,SC7789_A_CC_F);
000002  2002              MOVS     r0,#2
000004  f7ffbffe          B.W      SEND_MIPI_DATA
;;;2631   }
;;;2632   
                          ENDP

                  |L10.8|
                          DCD      ||.data||+0x20

                          AREA ||i.HX8369_cmd_4||, CODE, READONLY, ALIGN=1

                  HX8369_cmd_4 PROC
;;;1886   
;;;1887   void HX8369_cmd_4(u8 cmd,u8 num,u8 data,u8 data2)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1888   {
000004  4607              MOV      r7,r0
000006  461c              MOV      r4,r3
000008  4615              MOV      r5,r2
00000a  460e              MOV      r6,r1
;;;1889   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00000c  20bc              MOVS     r0,#0xbc
00000e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1890   	SSD1963GPIOOUTDATA_16(0x0004);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000012  2004              MOVS     r0,#4
000014  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1891   			SSD1963GPIOOUTCOM(0xbf);
000018  20bf              MOVS     r0,#0xbf
00001a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1892   	SSD1963GPIOOUTDATA_18(cmd);
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1893   	SSD1963GPIOOUTDATA_18(num);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1894   	SSD1963GPIOOUTDATA_18(data);	  //
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1895   	SSD1963GPIOOUTDATA_18(data2);
000030  4620              MOV      r0,r4
000032  e8bd41f0          POP      {r4-r8,lr}
000036  f7ffbffe          B.W      SSD1963GPIOOUTDATA_18
;;;1896   }
;;;1897   
                          ENDP


                          AREA ||i.INITIALOTM8018B||, CODE, READONLY, ALIGN=1

                  INITIALOTM8018B PROC
;;;1541   /////////////GPI009A0  USE///    before  OTP   //
;;;1542   void INITIALOTM8018B(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;1543   {
000004  b0a2              SUB      sp,sp,#0x88
;;;1544   		MIPI_SPI_Write(0x05,0x39,0xB9, 0xFF,0x83,0x69);//-----Enable extension command
000006  2169              MOVS     r1,#0x69
000008  2083              MOVS     r0,#0x83
00000a  e9cd0100          STRD     r0,r1,[sp,#0]
00000e  23ff              MOVS     r3,#0xff
000010  22b9              MOVS     r2,#0xb9
000012  2139              MOVS     r1,#0x39
000014  2005              MOVS     r0,#5
000016  f7fffffe          BL       MIPI_SPI_Write
;;;1545   		Delay(5);
00001a  2005              MOVS     r0,#5
00001c  f7fffffe          BL       Delay
;;;1546   
;;;1547   		MIPI_SPI_Write(0x0E,0x39,0xBA, 0x00,0xA0,0xC6,0x00,0x0A,0x00,0x10,0x30,0x6C,0x02,0x11,0x18,0x40);//2 lane mode
000020  2211              MOVS     r2,#0x11
000022  2102              MOVS     r1,#2
000024  2040              MOVS     r0,#0x40
000026  2618              MOVS     r6,#0x18
000028  e9cd1208          STRD     r1,r2,[sp,#0x20]
00002c  e9cd600a          STRD     r6,r0,[sp,#0x28]
000030  206c              MOVS     r0,#0x6c
000032  2130              MOVS     r1,#0x30
000034  e9cd1006          STRD     r1,r0,[sp,#0x18]
000038  2400              MOVS     r4,#0
00003a  2510              MOVS     r5,#0x10
00003c  21c6              MOVS     r1,#0xc6
00003e  22a0              MOVS     r2,#0xa0
000040  e9cd4504          STRD     r4,r5,[sp,#0x10]
000044  200a              MOVS     r0,#0xa
000046  e9cd2100          STRD     r2,r1,[sp,#0]
00004a  e9cd4002          STRD     r4,r0,[sp,#8]
00004e  4623              MOV      r3,r4
000050  22ba              MOVS     r2,#0xba
000052  2139              MOVS     r1,#0x39
000054  200e              MOVS     r0,#0xe
000056  f7fffffe          BL       MIPI_SPI_Write
;;;1548   //		Delay(10);
;;;1549     
;;;1550   		MIPI_SPI_Write(0x17,0x39,0xB1, 0x01,0x00,0x14,0x06,0x00,0x11,0x11,0x32,0x3A,0x23,0x23,0x07,0x23,0x07,0x23,0x01,0xE6,0xE6,0xE6,0xE6,0xE6);//-----Set Power
00005a  23e6              MOVS     r3,#0xe6
00005c  af10              ADD      r7,sp,#0x40
00005e  461a              MOV      r2,r3
000060  4619              MOV      r1,r3
000062  4618              MOV      r0,r3
000064  e887000f          STM      r7,{r0-r3}
000068  af0c              ADD      r7,sp,#0x30
00006a  2201              MOVS     r2,#1
00006c  2123              MOVS     r1,#0x23
00006e  2007              MOVS     r0,#7
000070  e887000f          STM      r7,{r0-r3}
000074  4602              MOV      r2,r0
000076  af08              ADD      r7,sp,#0x20
000078  460b              MOV      r3,r1
00007a  4608              MOV      r0,r1
00007c  e887000f          STM      r7,{r0-r3}
000080  2111              MOVS     r1,#0x11
000082  f10d0810          ADD      r8,sp,#0x10
000086  233a              MOVS     r3,#0x3a
000088  2232              MOVS     r2,#0x32
00008a  4608              MOV      r0,r1
00008c  e888000f          STM      r8,{r0-r3}
000090  2014              MOVS     r0,#0x14
000092  2706              MOVS     r7,#6
000094  e9cd4000          STRD     r4,r0,[sp,#0]
000098  e9cd7402          STRD     r7,r4,[sp,#8]
00009c  2301              MOVS     r3,#1
00009e  22b1              MOVS     r2,#0xb1
0000a0  2139              MOVS     r1,#0x39
0000a2  2017              MOVS     r0,#0x17
0000a4  f7fffffe          BL       MIPI_SPI_Write
;;;1551   //		Delay(5);
;;;1552   			
;;;1553   //		MIPI_SPI_Write(0x0F,0x39,0xB2, 0x00,0x20,0x03,0x03,0x70,0x00,0xFF,0x00,0x00,0x00,0x03,0x03,0x00,0x01);//DSI CMD MODE
;;;1554   //		Delay(5);
;;;1555   
;;;1556   		MIPI_SPI_Write(0x11,0x39,0xB2, 0x00,0x23,0x0A,0x0A,0x70,0x00,0xFF,0x00,0x00,0x00,0x00,0X03,0x03,0x00,0x01);//DSI Video MODE
0000a8  2001              MOVS     r0,#1
0000aa  e9cd400c          STRD     r4,r0,[sp,#0x30]
0000ae  2103              MOVS     r1,#3
0000b0  9406              STR      r4,[sp,#0x18]
0000b2  e9cd110a          STRD     r1,r1,[sp,#0x28]
0000b6  20ff              MOVS     r0,#0xff
0000b8  9409              STR      r4,[sp,#0x24]
0000ba  210a              MOVS     r1,#0xa
0000bc  9407              STR      r4,[sp,#0x1c]
0000be  9408              STR      r4,[sp,#0x20]
0000c0  f04f0870          MOV      r8,#0x70
0000c4  e9cd4004          STRD     r4,r0,[sp,#0x10]
0000c8  e9cd1802          STRD     r1,r8,[sp,#8]
0000cc  4608              MOV      r0,r1
0000ce  2123              MOVS     r1,#0x23
0000d0  e9cd1000          STRD     r1,r0,[sp,#0]
0000d4  2300              MOVS     r3,#0
0000d6  22b2              MOVS     r2,#0xb2
0000d8  2139              MOVS     r1,#0x39
0000da  2011              MOVS     r0,#0x11
0000dc  f7fffffe          BL       MIPI_SPI_Write
;;;1557   ////		Delay(5);
;;;1558   //	    MIPI_SPI_Write(0x11,0x39,0xB2, 0x00,0x23,0x20,0x20,0x70,0x00,0xFF,0x00,0x00,0x00,0x00,0X03,0x03,0x00,0x01);//DSI Video MODE
;;;1559   ////		Delay(5);
;;;1560   
;;;1561   		MIPI_SPI_Write(0x07,0x39,0xB4, 0x00,0x1C,0x84,0x06,0x02);//set CYC
0000e0  2184              MOVS     r1,#0x84
0000e2  221c              MOVS     r2,#0x1c
0000e4  2002              MOVS     r0,#2
0000e6  e9cd2100          STRD     r2,r1,[sp,#0]
0000ea  e9cd7002          STRD     r7,r0,[sp,#8]
0000ee  2300              MOVS     r3,#0
0000f0  22b4              MOVS     r2,#0xb4
0000f2  2139              MOVS     r1,#0x39
0000f4  2007              MOVS     r0,#7
0000f6  f7fffffe          BL       MIPI_SPI_Write
;;;1562   
;;;1563   //		MIPI_SPI_Write(0x03,0x39,0xB6,0x28,0x28);//Set VCOM----------0x01
;;;1564   //		Delay(5);
;;;1565   	
;;;1566   		MIPI_SPI_Write(0x1C,0x39,0xD5, 0x00,0x00,0x03,0x35,0x01,0x01,0x10,0x70,0x17,0x27,0x20,0x31,0x64,0xA8,0x75,0xB9,0x31,0x20,0x9B,0x57,0x8A,0x46,0x07,0x0F,0x02,0x82);//Set GIP
0000fa  af15              ADD      r7,sp,#0x54
0000fc  2382              MOVS     r3,#0x82
0000fe  2202              MOVS     r2,#2
000100  210f              MOVS     r1,#0xf
000102  2007              MOVS     r0,#7
000104  e887000f          STM      r7,{r0-r3}
000108  af11              ADD      r7,sp,#0x44
00010a  2346              MOVS     r3,#0x46
00010c  228a              MOVS     r2,#0x8a
00010e  2157              MOVS     r1,#0x57
000110  209b              MOVS     r0,#0x9b
000112  e887000f          STM      r7,{r0-r3}
000116  2131              MOVS     r1,#0x31
000118  22b9              MOVS     r2,#0xb9
00011a  e9cd210e          STRD     r2,r1,[sp,#0x38]
00011e  2375              MOVS     r3,#0x75
000120  2020              MOVS     r0,#0x20
000122  930d              STR      r3,[sp,#0x34]
000124  9010              STR      r0,[sp,#0x40]
000126  e9cd0109          STRD     r0,r1,[sp,#0x24]
00012a  2027              MOVS     r0,#0x27
00012c  2117              MOVS     r1,#0x17
00012e  e9cd1007          STRD     r1,r0,[sp,#0x1c]
000132  22a8              MOVS     r2,#0xa8
000134  2364              MOVS     r3,#0x64
000136  e9cd320b          STRD     r3,r2,[sp,#0x2c]
00013a  2235              MOVS     r2,#0x35
00013c  2303              MOVS     r3,#3
00013e  9400              STR      r4,[sp,#0]
000140  e9cd3201          STRD     r3,r2,[sp,#4]
000144  2001              MOVS     r0,#1
000146  e9cd0003          STRD     r0,r0,[sp,#0xc]
00014a  e9cd5805          STRD     r5,r8,[sp,#0x14]
00014e  2300              MOVS     r3,#0
000150  22d5              MOVS     r2,#0xd5
000152  2139              MOVS     r1,#0x39
000154  201c              MOVS     r0,#0x1c
000156  f7fffffe          BL       MIPI_SPI_Write
;;;1567   		
;;;1568   //		//--------------Panel setting---------------------//
;;;1569   		MIPI_SPI_Write(0x24,0x39,0xE0, 0x00,0x08,0x08,0x3C,0x3C,0x3F,0x28,0x49,0x0F,0x0F,0x0C,0x10,0x12,0x12,0x13,0x18,0x1E,0x00,0x08,0x08,0x3C,0x3C,0x3F,0x28,0x49,0x0F,0x0F,0x0C,0x10,0x12,0x12,0x13,0x18,0x1E);
00015a  f04f0c13          MOV      r12,#0x13
00015e  2012              MOVS     r0,#0x12
000160  e9cd0c1d          STRD     r0,r12,[sp,#0x74]
000164  270c              MOVS     r7,#0xc
000166  210f              MOVS     r1,#0xf
000168  e9cd1719          STRD     r1,r7,[sp,#0x64]
00016c  f04f0849          MOV      r8,#0x49
000170  e9cd8117          STRD     r8,r1,[sp,#0x5c]
000174  213c              MOVS     r1,#0x3c
000176  2208              MOVS     r2,#8
000178  e9cd2112          STRD     r2,r1,[sp,#0x48]
00017c  231e              MOVS     r3,#0x1e
00017e  9211              STR      r2,[sp,#0x44]
000180  9114              STR      r1,[sp,#0x50]
000182  e9cd631f          STRD     r6,r3,[sp,#0x7c]
000186  9709              STR      r7,[sp,#0x24]
000188  960e              STR      r6,[sp,#0x38]
00018a  e9cd501b          STRD     r5,r0,[sp,#0x6c]
00018e  e9cd500a          STRD     r5,r0,[sp,#0x28]
000192  e9cd0c0c          STRD     r0,r12,[sp,#0x30]
000196  e9cd340f          STRD     r3,r4,[sp,#0x3c]
00019a  f04f0928          MOV      r9,#0x28
00019e  f04f0a3f          MOV      r10,#0x3f
0001a2  e9cda915          STRD     r10,r9,[sp,#0x54]
0001a6  e9cd2101          STRD     r2,r1,[sp,#4]
0001aa  9200              STR      r2,[sp,#0]
0001ac  200f              MOVS     r0,#0xf
0001ae  e9cd0007          STRD     r0,r0,[sp,#0x1c]
0001b2  e9cd1a03          STRD     r1,r10,[sp,#0xc]
0001b6  e9cd9805          STRD     r9,r8,[sp,#0x14]
0001ba  2300              MOVS     r3,#0
0001bc  22e0              MOVS     r2,#0xe0
0001be  2139              MOVS     r1,#0x39
0001c0  2024              MOVS     r0,#0x24
0001c2  f7fffffe          BL       MIPI_SPI_Write
;;;1570   		Delay(5);//Set Gamma
0001c6  2005              MOVS     r0,#5
0001c8  f7fffffe          BL       Delay
;;;1571   
;;;1572   //		MIPI_SPI_Write(0x15,0x39,0xCC, 0x02);//Set Panel   02
;;;1573   //		Delay(5);
;;;1574   
;;;1575   //		MIPI_SPI_Write(0x03,0x39,0xB6, 0x23);//-----­Y­n¿N¤JVcom­È, ³o¬qInitial Code­nMark±¼ 
;;;1576   //		Delay(10);
;;;1577   
;;;1578   		
;;;1579   //		MIPI_SPI_Write(0x03,0x39,0x3A, 0x77);//Set Pixel format
;;;1580   		Delay(10);
0001cc  200a              MOVS     r0,#0xa
0001ce  f7fffffe          BL       Delay
;;;1581   		
;;;1582   		MIPI_SPI_Write(0x03,0x39,0x5E, 0x7F);//CABC  read  test  Alan
0001d2  237f              MOVS     r3,#0x7f
0001d4  225e              MOVS     r2,#0x5e
0001d6  2139              MOVS     r1,#0x39
0001d8  2003              MOVS     r0,#3
0001da  f7fffffe          BL       MIPI_SPI_Write
;;;1583   		Delay(5);
0001de  2005              MOVS     r0,#5
0001e0  f7fffffe          BL       Delay
;;;1584   		
;;;1585   		MIPI_SPI_Write(0x03,0x39,0x36, 0x00);//Set Pixel format
0001e4  2300              MOVS     r3,#0
0001e6  2236              MOVS     r2,#0x36
0001e8  2139              MOVS     r1,#0x39
0001ea  2003              MOVS     r0,#3
0001ec  f7fffffe          BL       MIPI_SPI_Write
;;;1586   		Delay(5);
0001f0  2005              MOVS     r0,#5
0001f2  f7fffffe          BL       Delay
;;;1587   
;;;1588   
;;;1589   		MIPI_SPI_Write(0x02,0x05,0x11);//sleep out
0001f6  2211              MOVS     r2,#0x11
0001f8  2105              MOVS     r1,#5
0001fa  2002              MOVS     r0,#2
0001fc  f7fffffe          BL       MIPI_SPI_Write
;;;1590   		Delay(15);
000200  200f              MOVS     r0,#0xf
000202  f7fffffe          BL       Delay
;;;1591   
;;;1592           MIPI_SPI_Write(0x02,0x05,0x29);//Display on					   
000206  2229              MOVS     r2,#0x29
000208  2105              MOVS     r1,#5
00020a  2002              MOVS     r0,#2
00020c  f7fffffe          BL       MIPI_SPI_Write
;;;1593   		Delay(1);
000210  b022              ADD      sp,sp,#0x88
000212  2001              MOVS     r0,#1
000214  e8bd47f0          POP      {r4-r10,lr}
000218  f7ffbffe          B.W      Delay
;;;1594   }
;;;1595   
                          ENDP


                          AREA ||i.INITIALOTM8018B_QC||, CODE, READONLY, ALIGN=1

                  INITIALOTM8018B_QC PROC
;;;1596   /////////////GPI009A0  USE///    after  OTP   //
;;;1597   void INITIALOTM8018B_QC(void)
000000  b500              PUSH     {lr}
;;;1598   {
000002  b08d              SUB      sp,sp,#0x34
;;;1599   
;;;1600   	{     ///////OTPºóµÄ³õÊ¼»¯code
;;;1601    		MIPI_SPI_Write(0x05,0x39, 0xB9,0xFF,0x83,0x69);//EXTC Command Set enable register
000004  2169              MOVS     r1,#0x69
000006  2083              MOVS     r0,#0x83
000008  e9cd0100          STRD     r0,r1,[sp,#0]
00000c  23ff              MOVS     r3,#0xff
00000e  22b9              MOVS     r2,#0xb9
000010  2139              MOVS     r1,#0x39
000012  2005              MOVS     r0,#5
000014  f7fffffe          BL       MIPI_SPI_Write
;;;1602   		MIPI_SPI_Write(0x0E,0x39,0xBA, 0x00,0xA0,0xC6,0x00,0x0A,0x00,0x10,0x30,0x6C,0x02,0x11,0x18,0x40);//2 lane mode
000018  f10d0c20          ADD      r12,sp,#0x20
00001c  2340              MOVS     r3,#0x40
00001e  2218              MOVS     r2,#0x18
000020  2111              MOVS     r1,#0x11
000022  2002              MOVS     r0,#2
000024  e88c000f          STM      r12,{r0-r3}
000028  216c              MOVS     r1,#0x6c
00002a  2230              MOVS     r2,#0x30
00002c  2000              MOVS     r0,#0
00002e  e9cd2106          STRD     r2,r1,[sp,#0x18]
000032  2310              MOVS     r3,#0x10
000034  e9cd0304          STRD     r0,r3,[sp,#0x10]
000038  22c6              MOVS     r2,#0xc6
00003a  23a0              MOVS     r3,#0xa0
00003c  e9cd3200          STRD     r3,r2,[sp,#0]
000040  210a              MOVS     r1,#0xa
000042  e9cd0102          STRD     r0,r1,[sp,#8]
000046  4603              MOV      r3,r0
000048  22ba              MOVS     r2,#0xba
00004a  2139              MOVS     r1,#0x39
00004c  200e              MOVS     r0,#0xe
00004e  f7fffffe          BL       MIPI_SPI_Write
;;;1603   	}
;;;1604   		
;;;1605   		Delay(1);
000052  2001              MOVS     r0,#1
000054  f7fffffe          BL       Delay
;;;1606   		MIPI_SPI_Write(0x02,0x05,0x11);//sleep out
000058  2211              MOVS     r2,#0x11
00005a  2105              MOVS     r1,#5
00005c  2002              MOVS     r0,#2
00005e  f7fffffe          BL       MIPI_SPI_Write
;;;1607   		Delay(15);
000062  200f              MOVS     r0,#0xf
000064  f7fffffe          BL       Delay
;;;1608   
;;;1609           MIPI_SPI_Write(0x02,0x05,0x29);//Display on					   
000068  2229              MOVS     r2,#0x29
00006a  2105              MOVS     r1,#5
00006c  2002              MOVS     r0,#2
00006e  f7fffffe          BL       MIPI_SPI_Write
;;;1610   		Delay(1);
000072  b00d              ADD      sp,sp,#0x34
000074  2001              MOVS     r0,#1
000076  f85deb04          POP      {lr}
00007a  f7ffbffe          B.W      Delay
;;;1611   }
;;;1612   
                          ENDP


                          AREA ||i.LCD2353INITTION||, CODE, READONLY, ALIGN=1

                  LCD2353INITTION PROC
;;;2587   
;;;2588   void LCD2353INITTION(void)
000000  b510              PUSH     {r4,lr}
;;;2589   {
;;;2590   //    LCDSPI_InitCMD(0x2d);LCDSPI_InitDAT(0x3F44);//////add   shut
;;;2591       
;;;2592       LCDSPI_InitCMD(0x02);LCDSPI_InitDAT(0x0c02);
000002  2002              MOVS     r0,#2
000004  f7fffffe          BL       LCDSPI_InitCMD
000008  f6404002          MOV      r0,#0xc02
00000c  f7fffffe          BL       LCDSPI_InitDAT
;;;2593       LCDSPI_InitCMD(0x01);LCDSPI_InitDAT(0x2B0f);////0x630F
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       LCDSPI_InitCMD
000016  f642300f          MOV      r0,#0x2b0f
00001a  f7fffffe          BL       LCDSPI_InitDAT
;;;2594       LCDSPI_InitCMD(0x0f);LCDSPI_InitDAT(0x0000);
00001e  200f              MOVS     r0,#0xf
000020  f7fffffe          BL       LCDSPI_InitCMD
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       LCDSPI_InitDAT
;;;2595       LCDSPI_InitCMD(0x03);LCDSPI_InitDAT(0x4144);
00002a  2003              MOVS     r0,#3
00002c  f7fffffe          BL       LCDSPI_InitCMD
000030  f2441044          MOV      r0,#0x4144
000034  f7fffffe          BL       LCDSPI_InitDAT
;;;2596       LCDSPI_InitCMD(0x05);LCDSPI_InitDAT(0x0557);
000038  2005              MOVS     r0,#5
00003a  f7fffffe          BL       LCDSPI_InitCMD
00003e  f2405057          MOV      r0,#0x557
000042  f7fffffe          BL       LCDSPI_InitDAT
;;;2597       LCDSPI_InitCMD(0x0c);LCDSPI_InitDAT(0x119c);
000046  200c              MOVS     r0,#0xc
000048  f7fffffe          BL       LCDSPI_InitCMD
00004c  f241109c          MOV      r0,#0x119c
000050  f7fffffe          BL       LCDSPI_InitDAT
;;;2598       LCDSPI_InitCMD(0x0d);LCDSPI_InitDAT(0x060b);
000054  200d              MOVS     r0,#0xd
000056  f7fffffe          BL       LCDSPI_InitCMD
00005a  f240600b          MOV      r0,#0x60b
00005e  f7fffffe          BL       LCDSPI_InitDAT
;;;2599       LCDSPI_InitCMD(0x0b);LCDSPI_InitDAT(0x8c05);
000062  200b              MOVS     r0,#0xb
000064  f7fffffe          BL       LCDSPI_InitCMD
000068  f6484005          MOV      r0,#0x8c05
00006c  f7fffffe          BL       LCDSPI_InitDAT
;;;2600       LCDSPI_InitCMD(0x15);LCDSPI_InitDAT(0x00D0);
000070  2015              MOVS     r0,#0x15
000072  f7fffffe          BL       LCDSPI_InitCMD
000076  20d0              MOVS     r0,#0xd0
000078  f7fffffe          BL       LCDSPI_InitDAT
;;;2601       
;;;2602       LCDSPI_InitCMD(0x16);LCDSPI_InitDAT(0xefa6);/////38-hbp
00007c  2016              MOVS     r0,#0x16
00007e  f7fffffe          BL       LCDSPI_InitCMD
000082  f64e70a6          MOV      r0,#0xefa6
000086  f7fffffe          BL       LCDSPI_InitDAT
;;;2603   //    LCDSPI_InitCMD(0x17);LCDSPI_InitDAT(0x0001);/////1-vbp
;;;2604       
;;;2605       LCDSPI_InitCMD(0x30);LCDSPI_InitDAT(0xa0a0);
00008a  2030              MOVS     r0,#0x30
00008c  f7fffffe          BL       LCDSPI_InitCMD
000090  f24a00a0          MOV      r0,#0xa0a0
000094  f7fffffe          BL       LCDSPI_InitDAT
;;;2606       LCDSPI_InitCMD(0x31);LCDSPI_InitDAT(0x7dd5);
000098  2031              MOVS     r0,#0x31
00009a  f7fffffe          BL       LCDSPI_InitCMD
00009e  f64750d5          MOV      r0,#0x7dd5
0000a2  f7fffffe          BL       LCDSPI_InitDAT
;;;2607       LCDSPI_InitCMD(0x32);LCDSPI_InitDAT(0x1205);
0000a6  2032              MOVS     r0,#0x32
0000a8  f7fffffe          BL       LCDSPI_InitCMD
0000ac  f2412005          MOV      r0,#0x1205
0000b0  f7fffffe          BL       LCDSPI_InitDAT
;;;2608       LCDSPI_InitCMD(0x33);LCDSPI_InitDAT(0x4188);
0000b4  2033              MOVS     r0,#0x33
0000b6  f7fffffe          BL       LCDSPI_InitCMD
0000ba  f2441088          MOV      r0,#0x4188
0000be  f7fffffe          BL       LCDSPI_InitDAT
;;;2609       LCDSPI_InitCMD(0x34);LCDSPI_InitDAT(0x65a5);
0000c2  2034              MOVS     r0,#0x34
0000c4  f7fffffe          BL       LCDSPI_InitCMD
0000c8  f24650a5          MOV      r0,#0x65a5
0000cc  f7fffffe          BL       LCDSPI_InitDAT
;;;2610       
;;;2611           LCDSPI_InitCMD(0x35);LCDSPI_InitDAT(0x8cc6);
0000d0  2035              MOVS     r0,#0x35
0000d2  f7fffffe          BL       LCDSPI_InitCMD
0000d6  f64840c6          MOV      r0,#0x8cc6
0000da  f7fffffe          BL       LCDSPI_InitDAT
;;;2612       LCDSPI_InitCMD(0x36);LCDSPI_InitDAT(0x1185);
0000de  2036              MOVS     r0,#0x36
0000e0  f7fffffe          BL       LCDSPI_InitCMD
0000e4  f2411085          MOV      r0,#0x1185
0000e8  f7fffffe          BL       LCDSPI_InitDAT
;;;2613       LCDSPI_InitCMD(0x37);LCDSPI_InitDAT(0x2872);
0000ec  2037              MOVS     r0,#0x37
0000ee  f7fffffe          BL       LCDSPI_InitCMD
0000f2  f6420072          MOV      r0,#0x2872
0000f6  f7fffffe          BL       LCDSPI_InitDAT
;;;2614       
;;;2615       LCDSPI_InitCMD(0x1e);LCDSPI_InitDAT(0x02aa);        ///VCOM
0000fa  201e              MOVS     r0,#0x1e
0000fc  f7fffffe          BL       LCDSPI_InitCMD
000100  f24020aa          MOV      r0,#0x2aa
000104  f7fffffe          BL       LCDSPI_InitDAT
;;;2616       
;;;2617       
;;;2618   //    GPIO_SetBits(GPIOA, GPIO_Pin_8);      ////////exit sleep
;;;2619   //    LCDSPI_InitCMD(0x2d);LCDSPI_InitDAT(0x3F46);//////add
;;;2620       Delay(10);
000108  e8bd4010          POP      {r4,lr}
00010c  200a              MOVS     r0,#0xa
00010e  f7ffbffe          B.W      Delay
;;;2621   //    LCDSPI_InitCMD(0x04);LCDSPI_InitDAT(0xE400);//////add
;;;2622   }
;;;2623   
                          ENDP


                          AREA ||i.LCDSPI_InitCMD||, CODE, READONLY, ALIGN=1

                  LCDSPI_InitCMD PROC
;;;2505   ////////////////////////////////////////////
;;;2506   void LCDSPI_InitCMD(char cmd)
000000  b570              PUSH     {r4-r6,lr}
;;;2507   {
000002  4605              MOV      r5,r0
;;;2508       u8 i=0;
000004  2400              MOVS     r4,#0
;;;2509       u32 instru_H=0;
;;;2510   	
;;;2511   	SSD1963Command_8(0xBa); 
000006  20ba              MOVS     r0,#0xba
000008  f7fffffe          BL       SSD1963Command_8
;;;2512   	SSD1963Data_8(0x07);   //CS=0
00000c  2007              MOVS     r0,#7
00000e  f7fffffe          BL       SSD1963Data_8
000012  f50505e0          ADD      r5,r5,#0x700000
                  |L15.22|
;;;2513   	
;;;2514       instru_H  = (cmd&0xFFFF) + ((0x70+(LCD_ID_SPI<<2)+(LCD_COM_SPI<<1)+(LCD_WRITE_SPI))<<16);
;;;2515   
;;;2516   	
;;;2517   	for (i=0;i<24;i++)     // 
;;;2518   	{ 
;;;2519   		if( !(instru_H & 0x00800000))
000016  f4150f00          TST      r5,#0x800000
;;;2520   		{ 
;;;2521   			SSD1963Command_8(0xBa); 
;;;2522   			SSD1963Data_8(0x05);    //SDI=0
;;;2523   			SSD1963Command_8(0xBa); 
;;;2524   			SSD1963Data_8(0x01);    //sck=0
;;;2525   			
;;;2526   			SSD1963Command_8(0xBa);  
;;;2527   			SSD1963Data_8(0x05);     //sck=1
;;;2528   		}
;;;2529   		else
;;;2530   		{ 
;;;2531   			SSD1963Command_8(0xBa); 
00001a  f04f00ba          MOV      r0,#0xba
00001e  d01d              BEQ      |L15.92|
000020  f7fffffe          BL       SSD1963Command_8
;;;2532   			SSD1963Data_8(0x07);    //SDI=1
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       SSD1963Data_8
;;;2533   			SSD1963Command_8(0xBa); 
00002a  20ba              MOVS     r0,#0xba
00002c  f7fffffe          BL       SSD1963Command_8
;;;2534   			SSD1963Data_8(0x03);    //sck=0
000030  2003              MOVS     r0,#3
000032  f7fffffe          BL       SSD1963Data_8
;;;2535   			
;;;2536   			SSD1963Command_8(0xBa);  
000036  20ba              MOVS     r0,#0xba
000038  f7fffffe          BL       SSD1963Command_8
;;;2537   			SSD1963Data_8(0x07);     //sck=1
00003c  2007              MOVS     r0,#7
                  |L15.62|
00003e  f7fffffe          BL       SSD1963Data_8
000042  1c60              ADDS     r0,r4,#1              ;2517
;;;2538   		}
;;;2539   
;;;2540   		instru_H=instru_H<<1;
000044  006d              LSLS     r5,r5,#1
000046  b2c4              UXTB     r4,r0                 ;2517
000048  2c18              CMP      r4,#0x18              ;2517
00004a  d3e4              BCC      |L15.22|
;;;2541   	} 
;;;2542   	
;;;2543   	SSD1963Command_8(0xBa); 
00004c  20ba              MOVS     r0,#0xba
00004e  f7fffffe          BL       SSD1963Command_8
;;;2544   	SSD1963Data_8(0x0F);
000052  e8bd4070          POP      {r4-r6,lr}
000056  200f              MOVS     r0,#0xf
000058  f7ffbffe          B.W      SSD1963Data_8
                  |L15.92|
00005c  f7fffffe          BL       SSD1963Command_8
000060  2005              MOVS     r0,#5                 ;2522
000062  f7fffffe          BL       SSD1963Data_8
000066  20ba              MOVS     r0,#0xba              ;2523
000068  f7fffffe          BL       SSD1963Command_8
00006c  2001              MOVS     r0,#1                 ;2524
00006e  f7fffffe          BL       SSD1963Data_8
000072  20ba              MOVS     r0,#0xba              ;2526
000074  f7fffffe          BL       SSD1963Command_8
000078  2005              MOVS     r0,#5                 ;2527
00007a  e7e0              B        |L15.62|
;;;2545   }
;;;2546       
                          ENDP


                          AREA ||i.LCDSPI_InitDAT||, CODE, READONLY, ALIGN=1

                  LCDSPI_InitDAT PROC
;;;2546       
;;;2547   void LCDSPI_InitDAT(int Data)
000000  b570              PUSH     {r4-r6,lr}
;;;2548   {
000002  4605              MOV      r5,r0
;;;2549       u8 i=0;
000004  2400              MOVS     r4,#0
;;;2550       u32 instru_H=0;
;;;2551   	
;;;2552   	SSD1963Command_8(0xBa); 
000006  20ba              MOVS     r0,#0xba
000008  f7fffffe          BL       SSD1963Command_8
;;;2553   	SSD1963Data_8(0x07);   //CS=0
00000c  2007              MOVS     r0,#7
00000e  f7fffffe          BL       SSD1963Data_8
;;;2554   	
;;;2555       instru_H  = (Data&0xFFFF) + ((0x70+(LCD_ID_SPI<<2)+(LCD_DATA_SPI<<1)+(LCD_WRITE_SPI))<<16);
000012  b2a8              UXTH     r0,r5
000014  f50005e4          ADD      r5,r0,#0x720000
                  |L16.24|
;;;2556   
;;;2557   	
;;;2558   	for (i=0;i<24;i++)     // 
;;;2559   	{ 
;;;2560   		if( !(instru_H & 0x00800000))
000018  f4150f00          TST      r5,#0x800000
;;;2561   		{ 
;;;2562   			SSD1963Command_8(0xBa); 
;;;2563   			SSD1963Data_8(0x05);    //SDI=0
;;;2564   			SSD1963Command_8(0xBa); 
;;;2565   			SSD1963Data_8(0x01);    //sck=0
;;;2566   			
;;;2567   			SSD1963Command_8(0xBa);  
;;;2568   			SSD1963Data_8(0x05);     //sck=1
;;;2569   		}
;;;2570   		else
;;;2571   		{ 
;;;2572   			SSD1963Command_8(0xBa); 
00001c  f04f00ba          MOV      r0,#0xba
000020  d01d              BEQ      |L16.94|
000022  f7fffffe          BL       SSD1963Command_8
;;;2573   			SSD1963Data_8(0x07);    //SDI=1
000026  2007              MOVS     r0,#7
000028  f7fffffe          BL       SSD1963Data_8
;;;2574   			SSD1963Command_8(0xBa); 
00002c  20ba              MOVS     r0,#0xba
00002e  f7fffffe          BL       SSD1963Command_8
;;;2575   			SSD1963Data_8(0x03);    //sck=0
000032  2003              MOVS     r0,#3
000034  f7fffffe          BL       SSD1963Data_8
;;;2576   			
;;;2577   			SSD1963Command_8(0xBa);  
000038  20ba              MOVS     r0,#0xba
00003a  f7fffffe          BL       SSD1963Command_8
;;;2578   			SSD1963Data_8(0x07);     //sck=1
00003e  2007              MOVS     r0,#7
                  |L16.64|
000040  f7fffffe          BL       SSD1963Data_8
000044  1c60              ADDS     r0,r4,#1              ;2558
;;;2579   		}
;;;2580   
;;;2581   		instru_H=instru_H<<1;
000046  006d              LSLS     r5,r5,#1
000048  b2c4              UXTB     r4,r0                 ;2558
00004a  2c18              CMP      r4,#0x18              ;2558
00004c  d3e4              BCC      |L16.24|
;;;2582   	} 
;;;2583   	
;;;2584   	SSD1963Command_8(0xBa); 
00004e  20ba              MOVS     r0,#0xba
000050  f7fffffe          BL       SSD1963Command_8
;;;2585   	SSD1963Data_8(0x0F);
000054  e8bd4070          POP      {r4-r6,lr}
000058  200f              MOVS     r0,#0xf
00005a  f7ffbffe          B.W      SSD1963Data_8
                  |L16.94|
00005e  f7fffffe          BL       SSD1963Command_8
000062  2005              MOVS     r0,#5                 ;2563
000064  f7fffffe          BL       SSD1963Data_8
000068  20ba              MOVS     r0,#0xba              ;2564
00006a  f7fffffe          BL       SSD1963Command_8
00006e  2001              MOVS     r0,#1                 ;2565
000070  f7fffffe          BL       SSD1963Data_8
000074  20ba              MOVS     r0,#0xba              ;2567
000076  f7fffffe          BL       SSD1963Command_8
00007a  2005              MOVS     r0,#5                 ;2568
00007c  e7e0              B        |L16.64|
;;;2586   }
;;;2587   
                          ENDP


                          AREA ||i.LCD_Clear||, CODE, READONLY, ALIGN=1

                  LCD_Clear PROC
;;;2881   }
;;;2882   void LCD_Clear(void)
000000  22ff              MOVS     r2,#0xff
;;;2883   {
;;;2884     All_Color(0,128,255);
000002  2180              MOVS     r1,#0x80
000004  2000              MOVS     r0,#0
000006  f7ffbffe          B.W      All_Color
;;;2885   }
;;;2886   /*******************************************************************************
                          ENDP


                          AREA ||i.LCD_CtrlLinesConfig||, CODE, READONLY, ALIGN=2

                  LCD_CtrlLinesConfig PROC
;;;3041   *******************************************************************************/
;;;3042   void LCD_CtrlLinesConfig(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;3043   {
;;;3044     GPIO_InitTypeDef GPIO_InitStructure;
;;;3045    
;;;3046    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA |RCC_APB2Periph_GPIOB | RCC_APB2Periph_GPIOC 
000002  2101              MOVS     r1,#1
000004  201d              MOVS     r0,#0x1d
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;3047                                                | RCC_APB2Periph_AFIO, ENABLE); 
;;;3048     GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//½ûÖ¹jtag£¬ÒÔ¿Õ³öPB3,PB4,PA15
00000a  2101              MOVS     r1,#1
00000c  4816              LDR      r0,|L18.104|
00000e  f7fffffe          BL       GPIO_PinRemapConfig
;;;3049    
;;;3050     
;;;3051     /*[°ÑGPIOBÅäÖÃ³ÉÊä³öÄ£Ê½] */
;;;3052     GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;
000012  f64f70ff          MOV      r0,#0xffff
000016  f8ad0000          STRH     r0,[sp,#0]
;;;3053     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00001a  2410              MOVS     r4,#0x10
00001c  f88d4003          STRB     r4,[sp,#3]
;;;3054     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//GPIO×î¸ßËÙ¶È50MHz
000020  2503              MOVS     r5,#3
000022  f88d5002          STRB     r5,[sp,#2]
;;;3055     GPIO_Init(GPIOB, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  4810              LDR      r0,|L18.108|
00002a  f7fffffe          BL       GPIO_Init
;;;3056     
;;;3057     /*[°ÑPA4678ÅäÖÃ³ÉÊä³öÄ£Ê½] */
;;;3058     GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_0|GPIO_Pin_1|GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5;
00002e  203f              MOVS     r0,#0x3f
000030  f8ad0000          STRH     r0,[sp,#0]
;;;3059     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
;;;3060     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//GPIO×î¸ßËÙ¶È50MHz
;;;3061     GPIO_Init(GPIOA, &GPIO_InitStructure);  
000034  4e0e              LDR      r6,|L18.112|
000036  f88d4003          STRB     r4,[sp,#3]            ;3059
00003a  f88d5002          STRB     r5,[sp,#2]            ;3060
00003e  4669              MOV      r1,sp
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       GPIO_Init
;;;3062       
;;;3063       /*[°ÑPA4678ÅäÖÃ³ÉÊä³öÄ£Ê½] */
;;;3064     GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_8;
000046  0121              LSLS     r1,r4,#4
000048  f8ad1000          STRH     r1,[sp,#0]
;;;3065     GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00004c  f88d4003          STRB     r4,[sp,#3]
;;;3066     GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;//GPIO×î¸ßËÙ¶È50MHz
000050  f88d5002          STRB     r5,[sp,#2]
;;;3067     GPIO_Init(GPIOA, &GPIO_InitStructure);  
000054  4669              MOV      r1,sp
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       GPIO_Init
;;;3068     
;;;3069     GPIO_ResetBits(GPIOA, GPIO_Pin_8);  /////shut down
00005c  0121              LSLS     r1,r4,#4
00005e  4630              MOV      r0,r6
000060  f7fffffe          BL       GPIO_ResetBits
;;;3070   //  GPIO_SetBits(GPIOA, GPIO_Pin_8);      ////////exit sleep
;;;3071   }
000064  bdf8              POP      {r3-r7,pc}
;;;3072   
                          ENDP

000066  0000              DCW      0x0000
                  |L18.104|
                          DCD      0x00300200
                  |L18.108|
                          DCD      0x40010c00
                  |L18.112|
                          DCD      0x40010800

                          AREA ||i.LCD_DisplayChinese||, CODE, READONLY, ALIGN=2

                  LCD_DisplayChinese PROC
;;;3123   
;;;3124   void LCD_DisplayChinese(u16 addx,u16 addy, u8 *number,u8 YY )
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;3125   {
000004  b085              SUB      sp,sp,#0x14
;;;3126       u8 tep,temp,aa;    
;;;3127       u8 *fp;		//Í¬unsigned char Ð§¹ûÒ»ÖÂ
;;;3128   	aa=addx;
000006  b2c1              UXTB     r1,r0
;;;3129   	  temp=*number;
000008  9104              STR      r1,[sp,#0x10]
00000a  9907              LDR      r1,[sp,#0x1c]
00000c  7809              LDRB     r1,[r1,#0]
00000e  2900              CMP      r1,#0                 ;3125
;;;3130         while(temp!='\0')
;;;3131   	  {
;;;3132   
;;;3133         tep=temp;
;;;3134         fp=&ASCII_Table1[tep * 48];  //µ¥¸öºº×ÖÕ¼ÓÃ48±ÈÌØ
;;;3135         LCD_PutChar1(addx,addy,fp,YY);    //////////
;;;3136   	  addx+=16*YY;   //////////
;;;3137   	  number++;
;;;3138   	  if(addx+16*YY>XDP)
;;;3139   	  {
;;;3140   	  addy+=24*YY;   ////////////
;;;3141   	  addx=aa;
;;;3142   	  }
;;;3143   	  temp=*number;
;;;3144   	  }
;;;3145       
;;;3146   }
000010  bf04              ITT      EQ
000012  b009              ADDEQ    sp,sp,#0x24
000014  e8bd8ff0          POPEQ    {r4-r11,pc}
000018  f8dfb104          LDR      r11,|L19.288|
00001c  9a08              LDR      r2,[sp,#0x20]
00001e  eb020242          ADD      r2,r2,r2,LSL #1
000022  9203              STR      r2,[sp,#0xc]
                  |L19.36|
000024  eb010241          ADD      r2,r1,r1,LSL #1       ;3134
000028  493e              LDR      r1,|L19.292|
00002a  9d08              LDR      r5,[sp,#0x20]         ;3134
00002c  eb011802          ADD      r8,r1,r2,LSL #4       ;3134
000030  9a06              LDR      r2,[sp,#0x18]         ;3134
000032  9903              LDR      r1,[sp,#0xc]          ;3134
000034  eb0201c1          ADD      r1,r2,r1,LSL #3       ;3134
000038  9102              STR      r1,[sp,#8]            ;3134
00003a  1e49              SUBS     r1,r1,#1              ;3134
00003c  b28b              UXTH     r3,r1                 ;3134
00003e  eb001105          ADD      r1,r0,r5,LSL #4       ;3134
000042  9101              STR      r1,[sp,#4]            ;3134
000044  1e49              SUBS     r1,r1,#1              ;3134
000046  b289              UXTH     r1,r1                 ;3134
000048  f7fffffe          BL       LCD_SetDisplayWindow
00004c  202c              MOVS     r0,#0x2c              ;3134
00004e  f7fffffe          BL       SSD1963Command_8
000052  2000              MOVS     r0,#0                 ;3134
000054  9000              STR      r0,[sp,#0]            ;3134
                  |L19.86|
000056  f04f0a00          MOV      r10,#0                ;3134
00005a  2d00              CMP      r5,#0                 ;3134
00005c  d941              BLS      |L19.226|
                  |L19.94|
00005e  f04f0900          MOV      r9,#0                 ;3134
                  |L19.98|
000062  f8986000          LDRB     r6,[r8,#0]            ;3134
000066  2700              MOVS     r7,#0                 ;3134
                  |L19.104|
000068  f0160f01          TST      r6,#1                 ;3134
00006c  f04f0400          MOV      r4,#0                 ;3134
000070  d012              BEQ      |L19.152|
000072  2d00              CMP      r5,#0                 ;3134
000074  d91f              BLS      |L19.182|
                  |L19.118|
000076  f89b0003          LDRB     r0,[r11,#3]           ;3134  ; FontR
00007a  f7fffffe          BL       SSD1963Data_8
00007e  f89b0004          LDRB     r0,[r11,#4]           ;3134  ; FontG
000082  f7fffffe          BL       SSD1963Data_8
000086  f89b0005          LDRB     r0,[r11,#5]           ;3134  ; FontB
00008a  f7fffffe          BL       SSD1963Data_8
00008e  1c60              ADDS     r0,r4,#1              ;3134
000090  b2c4              UXTB     r4,r0                 ;3134
000092  42a5              CMP      r5,r4                 ;3134
000094  d8ef              BHI      |L19.118|
000096  e00e              B        |L19.182|
                  |L19.152|
000098  2d00              CMP      r5,#0                 ;3134
00009a  d90c              BLS      |L19.182|
                  |L19.156|
00009c  20ff              MOVS     r0,#0xff              ;3134
00009e  f7fffffe          BL       SSD1963Data_8
0000a2  20ff              MOVS     r0,#0xff              ;3134
0000a4  f7fffffe          BL       SSD1963Data_8
0000a8  20ff              MOVS     r0,#0xff              ;3134
0000aa  f7fffffe          BL       SSD1963Data_8
0000ae  1c60              ADDS     r0,r4,#1              ;3134
0000b0  b2c4              UXTB     r4,r0                 ;3134
0000b2  42a5              CMP      r5,r4                 ;3134
0000b4  d8f2              BHI      |L19.156|
                  |L19.182|
0000b6  1c78              ADDS     r0,r7,#1              ;3134
0000b8  0876              LSRS     r6,r6,#1              ;3134
0000ba  b2c7              UXTB     r7,r0                 ;3134
0000bc  2f08              CMP      r7,#8                 ;3134
0000be  d3d3              BCC      |L19.104|
0000c0  f1090001          ADD      r0,r9,#1              ;3134
0000c4  f00009ff          AND      r9,r0,#0xff           ;3134
0000c8  f1080801          ADD      r8,r8,#1              ;3134
0000cc  f1b90f02          CMP      r9,#2                 ;3134
0000d0  d3c7              BCC      |L19.98|
0000d2  f10a0001          ADD      r0,r10,#1             ;3134
0000d6  f0000aff          AND      r10,r0,#0xff          ;3134
0000da  f1a80802          SUB      r8,r8,#2              ;3134
0000de  45aa              CMP      r10,r5                ;3134
0000e0  d3bd              BCC      |L19.94|
                  |L19.226|
0000e2  9800              LDR      r0,[sp,#0]            ;3134
0000e4  f1080802          ADD      r8,r8,#2              ;3134
0000e8  1c40              ADDS     r0,r0,#1              ;3134
0000ea  b2c0              UXTB     r0,r0                 ;3134
0000ec  9000              STR      r0,[sp,#0]            ;3134
0000ee  2818              CMP      r0,#0x18              ;3134
0000f0  d3b1              BCC      |L19.86|
0000f2  9907              LDR      r1,[sp,#0x1c]         ;3137
0000f4  9801              LDR      r0,[sp,#4]            ;3136
0000f6  1c49              ADDS     r1,r1,#1              ;3137
0000f8  9107              STR      r1,[sp,#0x1c]         ;3138
0000fa  9908              LDR      r1,[sp,#0x20]         ;3138
0000fc  b280              UXTH     r0,r0                 ;3136
0000fe  eb001101          ADD      r1,r0,r1,LSL #4       ;3138
000102  f5b17ff0          CMP      r1,#0x1e0             ;3138
000106  d903              BLS      |L19.272|
000108  9802              LDR      r0,[sp,#8]            ;3140
00010a  b280              UXTH     r0,r0                 ;3140
00010c  9006              STR      r0,[sp,#0x18]         ;3141
00010e  9804              LDR      r0,[sp,#0x10]         ;3141
                  |L19.272|
000110  9907              LDR      r1,[sp,#0x1c]         ;3143
000112  7809              LDRB     r1,[r1,#0]            ;3143
000114  2900              CMP      r1,#0                 ;3130
000116  d185              BNE      |L19.36|
000118  b009              ADD      sp,sp,#0x24
00011a  e8bd8ff0          POP      {r4-r11,pc}
;;;3147   
                          ENDP

00011e  0000              DCW      0x0000
                  |L19.288|
                          DCD      ||.data||
                  |L19.292|
                          DCD      ||.data||+0x47

                          AREA ||i.LCD_DisplayStringLine||, CODE, READONLY, ALIGN=2

                  LCD_DisplayStringLine PROC
;;;2958   ****************************************************************************/
;;;2959   void LCD_DisplayStringLine(u16 addx,u16 addy, unsigned char *p )
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;2960   {
000004  4682              MOV      r10,r0
;;;2961     unsigned char tep;    
;;;2962       const u16 *fp;
;;;2963       while(*p!='\0')
000006  7810              LDRB     r0,[r2,#0]
000008  4691              MOV      r9,r2                 ;2960
00000a  468b              MOV      r11,r1                ;2960
00000c  2800              CMP      r0,#0                 ;2960
;;;2964       {       
;;;2965         tep=*p;
;;;2966         tep-=32;
;;;2967         fp=&ASCII_Table[tep * 24];
;;;2968         LCD_PutChar(addx,addy,fp);
;;;2969           addx+=16;
;;;2970           p++;
;;;2971       }  
;;;2972   }
00000e  bf08              IT       EQ
000010  e8bd8ff8          POPEQ    {r3-r11,pc}
000014  f10b0017          ADD      r0,r11,#0x17
000018  4e22              LDR      r6,|L20.164|
00001a  9000              STR      r0,[sp,#0]
                  |L20.28|
00001c  f8990000          LDRB     r0,[r9,#0]            ;2965
000020  465a              MOV      r2,r11                ;2968
000022  3820              SUBS     r0,r0,#0x20           ;2965
000024  b2c0              UXTB     r0,r0                 ;2966
000026  eb000140          ADD      r1,r0,r0,LSL #1       ;2967
00002a  481f              LDR      r0,|L20.168|
00002c  eb001701          ADD      r7,r0,r1,LSL #4       ;2967
000030  9900              LDR      r1,[sp,#0]            ;2967
000032  4650              MOV      r0,r10                ;2968
000034  b28b              UXTH     r3,r1                 ;2968
000036  f10a010f          ADD      r1,r10,#0xf           ;2968
00003a  b289              UXTH     r1,r1                 ;2968
00003c  f7fffffe          BL       LCD_SetDisplayWindow
000040  202c              MOVS     r0,#0x2c              ;2968
000042  f7fffffe          BL       SSD1963Command_8
000046  f04f0800          MOV      r8,#0                 ;2968
                  |L20.74|
00004a  883c              LDRH     r4,[r7,#0]            ;2968
00004c  2500              MOVS     r5,#0                 ;2968
                  |L20.78|
00004e  f0140f01          TST      r4,#1                 ;2968
000052  d007              BEQ      |L20.100|
000054  78f0              LDRB     r0,[r6,#3]            ;2968  ; FontR
000056  f7fffffe          BL       SSD1963Data_8
00005a  7930              LDRB     r0,[r6,#4]            ;2968  ; FontG
00005c  f7fffffe          BL       SSD1963Data_8
000060  7970              LDRB     r0,[r6,#5]            ;2968  ; FontB
000062  e006              B        |L20.114|
                  |L20.100|
000064  20ff              MOVS     r0,#0xff              ;2968
000066  f7fffffe          BL       SSD1963Data_8
00006a  20ff              MOVS     r0,#0xff              ;2968
00006c  f7fffffe          BL       SSD1963Data_8
000070  20ff              MOVS     r0,#0xff              ;2968
                  |L20.114|
000072  f7fffffe          BL       SSD1963Data_8
000076  1c68              ADDS     r0,r5,#1              ;2968
000078  0864              LSRS     r4,r4,#1              ;2968
00007a  b2c5              UXTB     r5,r0                 ;2968
00007c  2d10              CMP      r5,#0x10              ;2968
00007e  d3e6              BCC      |L20.78|
000080  f1080001          ADD      r0,r8,#1              ;2968
000084  f00008ff          AND      r8,r0,#0xff           ;2968
000088  1cbf              ADDS     r7,r7,#2              ;2968
00008a  f1b80f18          CMP      r8,#0x18              ;2968
00008e  d3dc              BCC      |L20.74|
000090  f10a0010          ADD      r0,r10,#0x10          ;2969
000094  fa1ffa80          UXTH     r10,r0                ;2969
000098  f8190f01          LDRB     r0,[r9,#1]!           ;2963
00009c  2800              CMP      r0,#0                 ;2963
00009e  d1bd              BNE      |L20.28|
0000a0  e8bd8ff8          POP      {r3-r11,pc}
;;;2973   
                          ENDP

                  |L20.164|
                          DCD      ||.data||
                  |L20.168|
                          DCD      ||.constdata||

                          AREA ||i.LCD_DisplayStringLine_A||, CODE, READONLY, ALIGN=2

                  LCD_DisplayStringLine_A PROC
;;;3014   
;;;3015   void LCD_DisplayStringLine_A(u16 addx,u16 addy, unsigned char *p )
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;3016   {
000004  b086              SUB      sp,sp,#0x18
;;;3017   	u16 FontFlag; 		u8 fontH,fontW;
;;;3018   	unsigned char tep;    		const u16 *fp;
;;;3019   
;;;3020   	FontFlag=1;		
000006  2101              MOVS     r1,#1
;;;3021   	fontH = 2; 			  /////// height *3
000008  f04f0902          MOV      r9,#2
00000c  9100              STR      r1,[sp,#0]
00000e  9a07              LDR      r2,[sp,#0x1c]
000010  eb090149          ADD      r1,r9,r9,LSL #1
000014  eb0201c1          ADD      r1,r2,r1,LSL #3
000018  1e49              SUBS     r1,r1,#1
00001a  f8cd9004          STR      r9,[sp,#4]
00001e  f8dfb0f0          LDR      r11,|L21.272|
000022  9105              STR      r1,[sp,#0x14]         ;3016
000024  e065              B        |L21.242|
                  |L21.38|
000026  3920              SUBS     r1,r1,#0x20           ;3016
;;;3022   	fontW = 2;			  ///////  width *3
;;;3023       while((*p!='\0')&&(FontFlag<(XDP-1)))
;;;3024       {       
;;;3025         tep=*p;
;;;3026         tep-=32;
000028  b2c9              UXTB     r1,r1
;;;3027         fp=&ASCII_Table[tep * 24];
00002a  eb010241          ADD      r2,r1,r1,LSL #1
00002e  4939              LDR      r1,|L21.276|
000030  9d01              LDR      r5,[sp,#4]
000032  eb011a02          ADD      r10,r1,r2,LSL #4
000036  9905              LDR      r1,[sp,#0x14]
000038  9a07              LDR      r2,[sp,#0x1c]
00003a  b28b              UXTH     r3,r1
00003c  eb001105          ADD      r1,r0,r5,LSL #4
000040  9103              STR      r1,[sp,#0xc]
000042  1e49              SUBS     r1,r1,#1
000044  b289              UXTH     r1,r1
000046  f7fffffe          BL       LCD_SetDisplayWindow
00004a  202c              MOVS     r0,#0x2c
00004c  f7fffffe          BL       SSD1963Command_8
000050  2000              MOVS     r0,#0
000052  9002              STR      r0,[sp,#8]
                  |L21.84|
000054  f8ba0000          LDRH     r0,[r10,#0]
000058  f04f0800          MOV      r8,#0
00005c  9004              STR      r0,[sp,#0x10]
00005e  f1b90f00          CMP      r9,#0
000062  d933              BLS      |L21.204|
                  |L21.100|
000064  9e04              LDR      r6,[sp,#0x10]
000066  2700              MOVS     r7,#0
                  |L21.104|
000068  f0160f01          TST      r6,#1
00006c  f04f0400          MOV      r4,#0
000070  d012              BEQ      |L21.152|
000072  2d00              CMP      r5,#0
000074  d91f              BLS      |L21.182|
                  |L21.118|
000076  f89b0003          LDRB     r0,[r11,#3]  ; FontR
00007a  f7fffffe          BL       SSD1963Data_8
00007e  f89b0004          LDRB     r0,[r11,#4]  ; FontG
000082  f7fffffe          BL       SSD1963Data_8
000086  f89b0005          LDRB     r0,[r11,#5]  ; FontB
00008a  f7fffffe          BL       SSD1963Data_8
00008e  1c60              ADDS     r0,r4,#1
000090  b2c4              UXTB     r4,r0
000092  42a5              CMP      r5,r4
000094  d8ef              BHI      |L21.118|
000096  e00e              B        |L21.182|
                  |L21.152|
000098  2d00              CMP      r5,#0
00009a  d90c              BLS      |L21.182|
                  |L21.156|
00009c  20ff              MOVS     r0,#0xff
00009e  f7fffffe          BL       SSD1963Data_8
0000a2  20ff              MOVS     r0,#0xff
0000a4  f7fffffe          BL       SSD1963Data_8
0000a8  20ff              MOVS     r0,#0xff
0000aa  f7fffffe          BL       SSD1963Data_8
0000ae  1c60              ADDS     r0,r4,#1
0000b0  b2c4              UXTB     r4,r0
0000b2  42a5              CMP      r5,r4
0000b4  d8f2              BHI      |L21.156|
                  |L21.182|
0000b6  1c78              ADDS     r0,r7,#1
0000b8  0876              LSRS     r6,r6,#1
0000ba  b2c7              UXTB     r7,r0
0000bc  2f10              CMP      r7,#0x10
0000be  d3d3              BCC      |L21.104|
0000c0  f1080001          ADD      r0,r8,#1
0000c4  f00008ff          AND      r8,r0,#0xff
0000c8  45c8              CMP      r8,r9
0000ca  d3cb              BCC      |L21.100|
                  |L21.204|
0000cc  9802              LDR      r0,[sp,#8]
0000ce  f10a0a02          ADD      r10,r10,#2
0000d2  1c40              ADDS     r0,r0,#1
0000d4  b2c0              UXTB     r0,r0
0000d6  9002              STR      r0,[sp,#8]
0000d8  2818              CMP      r0,#0x18
0000da  d3bb              BCC      |L21.84|
;;;3028         LCD_PutChar_A(addx,fontW,addy,fontH,fp);
;;;3029           addx+=16*fontW;
;;;3030           p++;
0000dc  9908              LDR      r1,[sp,#0x20]
0000de  9803              LDR      r0,[sp,#0xc]          ;3029
0000e0  1c49              ADDS     r1,r1,#1
0000e2  9108              STR      r1,[sp,#0x20]
0000e4  e9dd1200          LDRD     r1,r2,[sp,#0]
;;;3031   		FontFlag += 16*fontW;;
0000e8  eb011102          ADD      r1,r1,r2,LSL #4
0000ec  b289              UXTH     r1,r1
0000ee  b280              UXTH     r0,r0                 ;3029
0000f0  9100              STR      r1,[sp,#0]
                  |L21.242|
0000f2  9908              LDR      r1,[sp,#0x20]         ;3023
0000f4  7809              LDRB     r1,[r1,#0]            ;3023
0000f6  2900              CMP      r1,#0                 ;3023
;;;3032       }  
;;;3033   }
0000f8  bf04              ITT      EQ
0000fa  b009              ADDEQ    sp,sp,#0x24
0000fc  e8bd8ff0          POPEQ    {r4-r11,pc}
000100  9a00              LDR      r2,[sp,#0]            ;3023
000102  f5b27fef          CMP      r2,#0x1de             ;3023
000106  d98e              BLS      |L21.38|
000108  b009              ADD      sp,sp,#0x24
00010a  e8bd8ff0          POP      {r4-r11,pc}
;;;3034   /*******************************************************************************
                          ENDP

00010e  0000              DCW      0x0000
                  |L21.272|
                          DCD      ||.data||
                  |L21.276|
                          DCD      ||.constdata||

                          AREA ||i.LCD_DrawPoint||, CODE, READONLY, ALIGN=2

                  LCD_DrawPoint PROC
;;;2678   }
;;;2679   void LCD_DrawPoint(u32 point)  //ÏòDisplay RAM Ð´Èë1µãµÄÊý¾Ý£¬´Ëº¯ÊýÓë¡°LCD_WriteRAM_Prepare¡±ÅäºÏÊ¹ÓÃ
000000  b510              PUSH     {r4,lr}
;;;2680   { //´Ëº¯Êý·Ç³£ÖØÒª
000002  4604              MOV      r4,r0
;;;2681   	u8 rr,gg,bb;
;;;2682   	//u8 tep;
;;;2683   //	rr=(point>>16);  
;;;2684   //	gg=(point>>8);  
;;;2685   //	bb=point;
;;;2686     	
;;;2687   	LCD_RS(1);
000004  480d              LDR      r0,|L22.60|
000006  6801              LDR      r1,[r0,#0]
000008  f0410108          ORR      r1,r1,#8
00000c  6001              STR      r1,[r0,#0]
;;;2688   	SSD1963_CS(0);
00000e  6801              LDR      r1,[r0,#0]
000010  f0210104          BIC      r1,r1,#4
000014  6001              STR      r1,[r0,#0]
;;;2689   
;;;2690   	if(SDShowTimes == 1)
000016  480a              LDR      r0,|L22.64|
000018  7800              LDRB     r0,[r0,#0]  ; SDShowTimes
00001a  2801              CMP      r0,#1
;;;2691   	{// SSD1963Éè¶¨Îª24bitsÉ«²ÊÊä³ö£¬
;;;2692   //		SSD1963Data_8(rr);SSD1963Data_8(gg);SSD1963Data_8(bb);
;;;2693   		SSD1963Data_8tt(point>>16);
;;;2694   		SSD1963Data_8tt(point>>8);
;;;2695   		SSD1963Data_8tt(point);
;;;2696   	}
;;;2697   	else
;;;2698   	{	;	}
;;;2699   }
00001c  bf18              IT       NE
00001e  bd10              POPNE    {r4,pc}
000020  f3c44007          UBFX     r0,r4,#16,#8          ;2693
000024  f7fffffe          BL       SSD1963Data_8tt
000028  f3c42007          UBFX     r0,r4,#8,#8           ;2694
00002c  f7fffffe          BL       SSD1963Data_8tt
000030  b2e0              UXTB     r0,r4                 ;2695
000032  e8bd4010          POP      {r4,lr}               ;2695
000036  f7ffbffe          B.W      SSD1963Data_8tt
;;;2700   
                          ENDP

00003a  0000              DCW      0x0000
                  |L22.60|
                          DCD      0x4001080c
                  |L22.64|
                          DCD      SDShowTimes

                          AREA ||i.LCD_PutChar||, CODE, READONLY, ALIGN=2

                  LCD_PutChar PROC
;;;2926   ****************************************************************************/
;;;2927   void LCD_PutChar(u16 adx,u16 ady,const uint  *p)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;2928   { //´Ëº¯Êý×÷ÓÃÎªÐ´Èë16*24´óÐ¡×Ö·û
000004  4690              MOV      r8,r2
000006  460a              MOV      r2,r1
;;;2929       u8 i,j;       u16 temp;
;;;2930       u16 sx=adx;   u16 sy=ady;     
;;;2931              
;;;2932       LCD_SetDisplayWindow(sx, sx+16-1,sy, sy+24-1)	; 
000008  3117              ADDS     r1,r1,#0x17
00000a  b28b              UXTH     r3,r1
00000c  f100010f          ADD      r1,r0,#0xf
000010  b289              UXTH     r1,r1
000012  f7fffffe          BL       LCD_SetDisplayWindow
000016  202c              MOVS     r0,#0x2c
000018  f7fffffe          BL       SSD1963Command_8
;;;2933       LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
;;;2934       
;;;2935   	for(i=0;i<24;i++)  //×ÖÌå¸ß¶È£º24 Dots
;;;2936   	{
;;;2937   	    temp=*p;
;;;2938   	    for(j=0;j<16;j++) ////×ÖÌå¿í¶È£º16 Dots
;;;2939   	       {                 
;;;2940   	           if(temp&1) 
;;;2941                    {  SSD1963Data_8(FontR);SSD1963Data_8(FontG);SSD1963Data_8(FontB);} //×ÖÌåÉ«
00001c  4e12              LDR      r6,|L23.104|
00001e  2700              MOVS     r7,#0                 ;2935
                  |L23.32|
000020  f8b84000          LDRH     r4,[r8,#0]            ;2937
000024  2500              MOVS     r5,#0                 ;2938
                  |L23.38|
000026  f0140f01          TST      r4,#1                 ;2940
00002a  d007              BEQ      |L23.60|
00002c  78f0              LDRB     r0,[r6,#3]  ; FontR
00002e  f7fffffe          BL       SSD1963Data_8
000032  7930              LDRB     r0,[r6,#4]  ; FontG
000034  f7fffffe          BL       SSD1963Data_8
000038  7970              LDRB     r0,[r6,#5]  ; FontB
00003a  e006              B        |L23.74|
                  |L23.60|
;;;2942   	           else
;;;2943                     { 
;;;2944   				  SSD1963Data_8(255);SSD1963Data_8(255);SSD1963Data_8(255);
00003c  20ff              MOVS     r0,#0xff
00003e  f7fffffe          BL       SSD1963Data_8
000042  20ff              MOVS     r0,#0xff
000044  f7fffffe          BL       SSD1963Data_8
000048  20ff              MOVS     r0,#0xff
                  |L23.74|
00004a  f7fffffe          BL       SSD1963Data_8
00004e  1c68              ADDS     r0,r5,#1              ;2938
;;;2945   				   }  //±³¾°É«    
;;;2946   	           temp>>=1;
000050  0864              LSRS     r4,r4,#1
000052  b2c5              UXTB     r5,r0                 ;2938
000054  2d10              CMP      r5,#0x10              ;2938
000056  d3e6              BCC      |L23.38|
000058  1c78              ADDS     r0,r7,#1              ;2935
00005a  b2c7              UXTB     r7,r0                 ;2935
00005c  f1080802          ADD      r8,r8,#2              ;2935
000060  2f18              CMP      r7,#0x18              ;2935
000062  d3dd              BCC      |L23.32|
;;;2947   	       }
;;;2948         p++;
;;;2949        }
;;;2950   }
000064  e8bd81f0          POP      {r4-r8,pc}
;;;2951   /****************************************************************************
                          ENDP

                  |L23.104|
                          DCD      ||.data||

                          AREA ||i.LCD_PutChar1||, CODE, READONLY, ALIGN=2

                  LCD_PutChar1 PROC
;;;3082   
;;;3083   void LCD_PutChar1(u16 adx,u16 ady,u8 *p,u8 YY)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;3084   { //´Ëº¯Êý×÷ÓÃÎªÐ´Èë32*40´óÐ¡×Ö·û
000004  4690              MOV      r8,r2
000006  461d              MOV      r5,r3
000008  460a              MOV      r2,r1
;;;3085       u8 i,j,k,x,y;       u16 temp;
;;;3086       u16 sx=adx;   u16 sy=ady;     
;;;3087         
;;;3088       LCD_SetDisplayWindow(sx, sx+16*YY-1,sy, sy+24*YY-1)	; /////////YY
00000a  eb030145          ADD      r1,r3,r5,LSL #1
00000e  eb0201c1          ADD      r1,r2,r1,LSL #3
000012  1e49              SUBS     r1,r1,#1
000014  b28b              UXTH     r3,r1
000016  eb001105          ADD      r1,r0,r5,LSL #4
00001a  1e49              SUBS     r1,r1,#1
00001c  b289              UXTH     r1,r1
00001e  f7fffffe          BL       LCD_SetDisplayWindow
000022  202c              MOVS     r0,#0x2c
000024  f7fffffe          BL       SSD1963Command_8
;;;3089       LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
;;;3090       
;;;3091   	for(i=0;i<24;i++)  //×ÖÌå¸ß¶È£º24 Dots
000028  2000              MOVS     r0,#0
;;;3092   	{ 	
;;;3093   
;;;3094   	for(y=0;y<YY;y++)   ///////////YY
;;;3095   	{ 
;;;3096   	  temp=*p;	  
;;;3097    /**************************************/       //ÏÔÊ¾Ò»±¡Ìõ
;;;3098   	for(k=0;k<2;k++)      
;;;3099   	{
;;;3100   		temp=*p;		    
;;;3101   	    for(j=0;j<8;j++) ////×ÖÌå¿í¶È£º16 Dots
;;;3102   	       {                 
;;;3103   	           if(temp&1) 
;;;3104                    {  
;;;3105   				   for(x=0;x<YY;x++)        //////////////////YY
;;;3106   				  {SSD1963Data_8(FontR);SSD1963Data_8(FontG);SSD1963Data_8(FontB);}} //×ÖÌåÉ«
00002a  f8dfb0a4          LDR      r11,|L24.208|
00002e  9000              STR      r0,[sp,#0]
                  |L24.48|
000030  f04f0a00          MOV      r10,#0                ;3094
000034  2d00              CMP      r5,#0                 ;3094
000036  d941              BLS      |L24.188|
                  |L24.56|
000038  f04f0900          MOV      r9,#0                 ;3098
                  |L24.60|
00003c  f8986000          LDRB     r6,[r8,#0]            ;3100
000040  2700              MOVS     r7,#0                 ;3101
                  |L24.66|
000042  f0160f01          TST      r6,#1                 ;3103
;;;3107   	           else
;;;3108                     { 
;;;3109   				   for(x=0;x<YY;x++)     //////////////////YY
000046  f04f0400          MOV      r4,#0
00004a  d012              BEQ      |L24.114|
00004c  2d00              CMP      r5,#0                 ;3105
00004e  d91f              BLS      |L24.144|
                  |L24.80|
000050  f89b0003          LDRB     r0,[r11,#3]           ;3106  ; FontR
000054  f7fffffe          BL       SSD1963Data_8
000058  f89b0004          LDRB     r0,[r11,#4]           ;3106  ; FontG
00005c  f7fffffe          BL       SSD1963Data_8
000060  f89b0005          LDRB     r0,[r11,#5]           ;3106  ; FontB
000064  f7fffffe          BL       SSD1963Data_8
000068  1c60              ADDS     r0,r4,#1              ;3105
00006a  b2c4              UXTB     r4,r0                 ;3105
00006c  42a5              CMP      r5,r4                 ;3105
00006e  d8ef              BHI      |L24.80|
000070  e00e              B        |L24.144|
                  |L24.114|
000072  2d00              CMP      r5,#0
000074  d90c              BLS      |L24.144|
                  |L24.118|
;;;3110   				  {SSD1963Data_8(255);SSD1963Data_8(255);SSD1963Data_8(255); }}  //±³¾°É«    
000076  20ff              MOVS     r0,#0xff
000078  f7fffffe          BL       SSD1963Data_8
00007c  20ff              MOVS     r0,#0xff
00007e  f7fffffe          BL       SSD1963Data_8
000082  20ff              MOVS     r0,#0xff
000084  f7fffffe          BL       SSD1963Data_8
000088  1c60              ADDS     r0,r4,#1              ;3109
00008a  b2c4              UXTB     r4,r0                 ;3109
00008c  42a5              CMP      r5,r4                 ;3109
00008e  d8f2              BHI      |L24.118|
                  |L24.144|
000090  1c78              ADDS     r0,r7,#1              ;3101
;;;3111   	           temp>>=1;
000092  0876              LSRS     r6,r6,#1
000094  b2c7              UXTB     r7,r0                 ;3101
000096  2f08              CMP      r7,#8                 ;3101
000098  d3d3              BCC      |L24.66|
00009a  f1090001          ADD      r0,r9,#1              ;3098
00009e  f00009ff          AND      r9,r0,#0xff           ;3098
0000a2  f1080801          ADD      r8,r8,#1              ;3098
0000a6  f1b90f02          CMP      r9,#2                 ;3098
0000aa  d3c7              BCC      |L24.60|
0000ac  f10a0001          ADD      r0,r10,#1             ;3094
0000b0  f0000aff          AND      r10,r0,#0xff          ;3094
0000b4  f1a80802          SUB      r8,r8,#2              ;3094
0000b8  45aa              CMP      r10,r5                ;3094
0000ba  d3bd              BCC      |L24.56|
                  |L24.188|
0000bc  9800              LDR      r0,[sp,#0]            ;3091
0000be  f1080802          ADD      r8,r8,#2              ;3091
0000c2  1c40              ADDS     r0,r0,#1              ;3091
0000c4  b2c0              UXTB     r0,r0                 ;3091
0000c6  9000              STR      r0,[sp,#0]            ;3091
0000c8  2818              CMP      r0,#0x18              ;3091
0000ca  d3b1              BCC      |L24.48|
;;;3112   	       }
;;;3113         p++;
;;;3114   	  }
;;;3115    /**********************/
;;;3116   	   p-=2;    
;;;3117   	  }
;;;3118   	  p+=2;   
;;;3119        }
;;;3120   }
0000cc  e8bd8ff8          POP      {r3-r11,pc}
;;;3121   
                          ENDP

                  |L24.208|
                          DCD      ||.data||

                          AREA ||i.LCD_PutChar_A||, CODE, READONLY, ALIGN=2

                  LCD_PutChar_A PROC
;;;2973   
;;;2974   void LCD_PutChar_A(u16 adx,u8 times_X,u16 ady,u8 times_Y,const uint  *p)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;2975   { 
000004  4699              MOV      r9,r3
000006  460d              MOV      r5,r1
;;;2976       u8 Font_H,Font_W;
;;;2977   	u8 i,j,k,k1;       u16 temp,temp1;
;;;2978       u16 sx=adx;   u16 sy=ady; 
;;;2979     
;;;2980   	Font_H = times_Y;	Font_W = times_X;
;;;2981      
;;;2982       LCD_SetDisplayWindow(sx, sx+16*Font_W-1,sy, sy+24*Font_H-1)	; 
000008  eb030149          ADD      r1,r3,r9,LSL #1
00000c  eb0201c1          ADD      r1,r2,r1,LSL #3
000010  1e49              SUBS     r1,r1,#1
000012  b28b              UXTH     r3,r1
000014  eb001105          ADD      r1,r0,r5,LSL #4
000018  1e49              SUBS     r1,r1,#1
00001a  b289              UXTH     r1,r1
00001c  f7fffffe          BL       LCD_SetDisplayWindow
000020  202c              MOVS     r0,#0x2c
000022  f7fffffe          BL       SSD1963Command_8
;;;2983       LCD_WriteRAM_Prepare(); /* Prepare to write GRAM */
;;;2984       
;;;2985   	for(i=0;i<24;i++)  		   //////////×ÖÌå¸ß¶È£º24 Dots
;;;2986   	{
;;;2987   	    temp=*p;
;;;2988   		temp1 = temp;
;;;2989   		for(k1=0;k1<Font_H;k1++)
;;;2990   		{
;;;2991   	    temp = temp1;
;;;2992   		for(j=0;j<16;j++) ///		////×ÖÌå¿í¶È£º16 Dots
;;;2993   	       {                 
;;;2994   	           if(temp&1) 
;;;2995                    {  								 
;;;2996   					for(k=0;k<Font_W;k++)
;;;2997   					{
;;;2998   						SSD1963Data_8(FontR);SSD1963Data_8(FontG);SSD1963Data_8(FontB);		 ////////×ÖÌåÉ«
000026  f8dfb098          LDR      r11,|L25.192|
00002a  f04f0a00          MOV      r10,#0                ;2985
                  |L25.46|
00002e  980a              LDR      r0,[sp,#0x28]         ;2987
000030  f04f0800          MOV      r8,#0                 ;2989
000034  f1b90f00          CMP      r9,#0                 ;2989
000038  8800              LDRH     r0,[r0,#0]            ;2987
00003a  9000              STR      r0,[sp,#0]            ;2989
00003c  d933              BLS      |L25.166|
                  |L25.62|
00003e  9e00              LDR      r6,[sp,#0]            ;2992
000040  2700              MOVS     r7,#0                 ;2992
                  |L25.66|
000042  f0160f01          TST      r6,#1                 ;2994
;;;2999   					}
;;;3000   				 } 
;;;3001   	           else
;;;3002                     { 
;;;3003   						for(k=0;k<Font_W;k++)
000046  f04f0400          MOV      r4,#0
00004a  d012              BEQ      |L25.114|
00004c  2d00              CMP      r5,#0                 ;2996
00004e  d91f              BLS      |L25.144|
                  |L25.80|
000050  f89b0003          LDRB     r0,[r11,#3]           ;2998  ; FontR
000054  f7fffffe          BL       SSD1963Data_8
000058  f89b0004          LDRB     r0,[r11,#4]           ;2998  ; FontG
00005c  f7fffffe          BL       SSD1963Data_8
000060  f89b0005          LDRB     r0,[r11,#5]           ;2998  ; FontB
000064  f7fffffe          BL       SSD1963Data_8
000068  1c60              ADDS     r0,r4,#1              ;2996
00006a  b2c4              UXTB     r4,r0                 ;2996
00006c  42a5              CMP      r5,r4                 ;2996
00006e  d8ef              BHI      |L25.80|
000070  e00e              B        |L25.144|
                  |L25.114|
000072  2d00              CMP      r5,#0
000074  d90c              BLS      |L25.144|
                  |L25.118|
;;;3004   						{
;;;3005   							SSD1963Data_8(255);SSD1963Data_8(255);SSD1963Data_8(255);		/////////±³¾°É«
000076  20ff              MOVS     r0,#0xff
000078  f7fffffe          BL       SSD1963Data_8
00007c  20ff              MOVS     r0,#0xff
00007e  f7fffffe          BL       SSD1963Data_8
000082  20ff              MOVS     r0,#0xff
000084  f7fffffe          BL       SSD1963Data_8
000088  1c60              ADDS     r0,r4,#1              ;3003
00008a  b2c4              UXTB     r4,r0                 ;3003
00008c  42a5              CMP      r5,r4                 ;3003
00008e  d8f2              BHI      |L25.118|
                  |L25.144|
000090  1c78              ADDS     r0,r7,#1              ;2992
;;;3006   						}
;;;3007   				   }     
;;;3008   	           temp>>=1;
000092  0876              LSRS     r6,r6,#1
000094  b2c7              UXTB     r7,r0                 ;2992
000096  2f10              CMP      r7,#0x10              ;2992
000098  d3d3              BCC      |L25.66|
00009a  f1080001          ADD      r0,r8,#1              ;2989
00009e  f00008ff          AND      r8,r0,#0xff           ;2989
0000a2  45c8              CMP      r8,r9                 ;2989
0000a4  d3cb              BCC      |L25.62|
                  |L25.166|
;;;3009   	       }
;;;3010   		}
;;;3011         p++;
0000a6  980a              LDR      r0,[sp,#0x28]
0000a8  1c80              ADDS     r0,r0,#2
0000aa  900a              STR      r0,[sp,#0x28]         ;2985
0000ac  f10a0001          ADD      r0,r10,#1             ;2985
0000b0  f0000aff          AND      r10,r0,#0xff          ;2985
0000b4  f1ba0f18          CMP      r10,#0x18             ;2985
0000b8  d3b9              BCC      |L25.46|
;;;3012        }
;;;3013   }
0000ba  e8bd8ff8          POP      {r3-r11,pc}
;;;3014   
                          ENDP

0000be  0000              DCW      0x0000
                  |L25.192|
                          DCD      ||.data||

                          AREA ||i.LCD_SetDisplayWindow||, CODE, READONLY, ALIGN=1

                  LCD_SetDisplayWindow PROC
;;;2647   *******************************************************************************/
;;;2648   void LCD_SetDisplayWindow(u16 add_sx, u16 add_ex, u16 add_sy, u16 add_ey)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;2649   {            //´Ëº¯Êý·Ç³£ÖØÒª
000004  4607              MOV      r7,r0
000006  4615              MOV      r5,r2
000008  460e              MOV      r6,r1
;;;2650     u16 sx= add_sx;
;;;2651     u16 ex= add_ex;
;;;2652     u16 sy= add_sy;
;;;2653     u16 ey= add_ey;
00000a  461c              MOV      r4,r3
;;;2654     
;;;2655          SSD1963Command_8(0x2a); 
00000c  202a              MOVS     r0,#0x2a
00000e  f7fffffe          BL       SSD1963Command_8
;;;2656          SSD1963Data_8(sx>>8);
000012  0a38              LSRS     r0,r7,#8
000014  f7fffffe          BL       SSD1963Data_8
;;;2657          SSD1963Data_8(sx);
000018  b2f8              UXTB     r0,r7
00001a  f7fffffe          BL       SSD1963Data_8
;;;2658          SSD1963Data_8(ex>>8);
00001e  0a30              LSRS     r0,r6,#8
000020  f7fffffe          BL       SSD1963Data_8
;;;2659          SSD1963Data_8(ex);// 
000024  b2f0              UXTB     r0,r6
000026  f7fffffe          BL       SSD1963Data_8
;;;2660   
;;;2661          //row start_end
;;;2662          SSD1963Command_8(0x2b);  
00002a  202b              MOVS     r0,#0x2b
00002c  f7fffffe          BL       SSD1963Command_8
;;;2663          SSD1963Data_8(sy>>8);
000030  0a28              LSRS     r0,r5,#8
000032  f7fffffe          BL       SSD1963Data_8
;;;2664          SSD1963Data_8(sy);
000036  b2e8              UXTB     r0,r5
000038  f7fffffe          BL       SSD1963Data_8
;;;2665          SSD1963Data_8(ey>>8);
00003c  0a20              LSRS     r0,r4,#8
00003e  f7fffffe          BL       SSD1963Data_8
;;;2666          SSD1963Data_8(ey);// 
000042  b2e0              UXTB     r0,r4
000044  e8bd41f0          POP      {r4-r8,lr}
000048  f7ffbffe          B.W      SSD1963Data_8
;;;2667   }
;;;2668   /*******************************************************************************
                          ENDP


                          AREA ||i.LCD_WriteArea||, CODE, READONLY, ALIGN=2

                  LCD_WriteArea PROC
;;;2702   
;;;2703   void LCD_WriteArea(u16 add_sx, u16 add_ex, u16 add_sy, u16 add_ey, u8 corr,u8 corg,u8 corb)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;2704   {
000004  461c              MOV      r4,r3
000006  e9ddba0b          LDRD     r11,r10,[sp,#0x2c]
00000a  4615              MOV      r5,r2
00000c  460e              MOV      r6,r1
00000e  4607              MOV      r7,r0
;;;2705     u16 m,n;
;;;2706     
;;;2707     LCD_SetDisplayWindow(add_sx, add_ex, add_sy, add_ey);
000010  f7fffffe          BL       LCD_SetDisplayWindow
000014  202c              MOVS     r0,#0x2c
000016  f7fffffe          BL       SSD1963Command_8
;;;2708     LCD_WriteRAM_Prepare();
;;;2709   	
;;;2710   	LCD_RS(1);
00001a  f8dfc088          LDR      r12,|L27.164|
00001e  f8dc0000          LDR      r0,[r12,#0]
000022  f0400008          ORR      r0,r0,#8
000026  f8cc0000          STR      r0,[r12,#0]
;;;2711       SSD1963_CS(0);
00002a  f8dc0000          LDR      r0,[r12,#0]
00002e  f0200004          BIC      r0,r0,#4
000032  f8cc0000          STR      r0,[r12,#0]
;;;2712   			 
;;;2713   	for(m = 0; m <(add_ex-add_sx+1); m++)
000036  1bf0              SUBS     r0,r6,r7
000038  1c40              ADDS     r0,r0,#1
00003a  f04f0800          MOV      r8,#0
00003e  9000              STR      r0,[sp,#0]
000040  2800              CMP      r0,#0
000042  dd27              BLE      |L27.148|
;;;2714   	{
;;;2715   		for(n = 0; n <(add_ey-add_sy+1); n++)
000044  1b60              SUBS     r0,r4,r5
000046  2520              MOVS     r5,#0x20
000048  f10c0604          ADD      r6,r12,#4
00004c  f1000901          ADD      r9,r0,#1
000050  1d37              ADDS     r7,r6,#4
                  |L27.82|
000052  2400              MOVS     r4,#0
000054  f1b90f00          CMP      r9,#0
000058  dd15              BLE      |L27.134|
                  |L27.90|
00005a  990a              LDR      r1,[sp,#0x28]
00005c  6035              STR      r5,[r6,#0]
00005e  4812              LDR      r0,|L27.168|
000060  f7fffffe          BL       GPIO_Write
000064  603d              STR      r5,[r7,#0]
000066  6035              STR      r5,[r6,#0]
000068  4659              MOV      r1,r11
00006a  480f              LDR      r0,|L27.168|
00006c  f7fffffe          BL       GPIO_Write
000070  603d              STR      r5,[r7,#0]
000072  6035              STR      r5,[r6,#0]
000074  4651              MOV      r1,r10
000076  480c              LDR      r0,|L27.168|
000078  f7fffffe          BL       GPIO_Write
00007c  603d              STR      r5,[r7,#0]
00007e  1c60              ADDS     r0,r4,#1
000080  b284              UXTH     r4,r0
000082  45a1              CMP      r9,r4
000084  dce9              BGT      |L27.90|
                  |L27.134|
000086  f1080001          ADD      r0,r8,#1              ;2713
00008a  fa1ff880          UXTH     r8,r0                 ;2713
00008e  9800              LDR      r0,[sp,#0]            ;2713
000090  4540              CMP      r0,r8                 ;2713
000092  dcde              BGT      |L27.82|
                  |L27.148|
;;;2716   		{
;;;2717   			SSD1963Data_8tt(corr);SSD1963Data_8tt(corg);SSD1963Data_8tt(corb);
;;;2718     		}
;;;2719   	}
;;;2720     	
;;;2721      SSD1963_CS(1);
000094  4803              LDR      r0,|L27.164|
000096  6801              LDR      r1,[r0,#0]
000098  f0410104          ORR      r1,r1,#4
00009c  6001              STR      r1,[r0,#0]
;;;2722   }
00009e  e8bd8ff8          POP      {r3-r11,pc}
;;;2723   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L27.164|
                          DCD      0x4001080c
                  |L27.168|
                          DCD      0x40010c00

                          AREA ||i.LCD_WriteBMP||, CODE, READONLY, ALIGN=1

                  LCD_WriteBMP PROC
;;;2892   *******************************************************************************/
;;;2893   void LCD_WriteBMP(u16 add_sx, u16 add_ex, u16 add_sy, u16 add_ey, const u8 *bitmap)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;2894   {
000004  461c              MOV      r4,r3
000006  4617              MOV      r7,r2
000008  4688              MOV      r8,r1
00000a  4681              MOV      r9,r0
;;;2895   	u16 m,n;
;;;2896   	u8 *bitmap_ptr = (u8 *)bitmap;
;;;2897   	u16 point;
;;;2898     
;;;2899   	LCD_SetDisplayWindow(add_sx, add_ex, add_sy, add_ey);
00000c  9d08              LDR      r5,[sp,#0x20]
00000e  f7fffffe          BL       LCD_SetDisplayWindow
000012  202c              MOVS     r0,#0x2c
000014  f7fffffe          BL       SSD1963Command_8
;;;2900   	LCD_WriteRAM_Prepare();
;;;2901    
;;;2902   	for(m = 0; m <(add_ex-add_sx+1); m++)
000018  eba80009          SUB      r0,r8,r9
00001c  2600              MOVS     r6,#0
00001e  f1000801          ADD      r8,r0,#1
000022  f1b80f00          CMP      r8,#0
;;;2903   	{
;;;2904   		for(n = 0; n <(add_ey-add_sy+1); n++)
000026  bfc6              ITTE     GT
000028  1be0              SUBGT    r0,r4,r7
00002a  1c47              ADDGT    r7,r0,#1
;;;2905     	    {
;;;2906   	         point= *bitmap_ptr++;  
;;;2907   			 SSD1963Data_8(point);
;;;2908   
;;;2909   			 point= *bitmap_ptr++;
;;;2910   			 SSD1963Data_8(point);
;;;2911   
;;;2912   			 point= *bitmap_ptr++;
;;;2913   			 SSD1963Data_8(point);
;;;2914   		}
;;;2915   	}
;;;2916   }
00002c  e8bd87f0          POPLE    {r4-r10,pc}
                  |L28.48|
000030  2400              MOVS     r4,#0                 ;2904
000032  2f00              CMP      r7,#0                 ;2904
000034  dd0f              BLE      |L28.86|
                  |L28.54|
000036  f8150b01          LDRB     r0,[r5],#1            ;2906
00003a  f7fffffe          BL       SSD1963Data_8
00003e  f8150b01          LDRB     r0,[r5],#1            ;2909
000042  f7fffffe          BL       SSD1963Data_8
000046  f8150b01          LDRB     r0,[r5],#1            ;2912
00004a  f7fffffe          BL       SSD1963Data_8
00004e  1c60              ADDS     r0,r4,#1              ;2904
000050  b284              UXTH     r4,r0                 ;2904
000052  42a7              CMP      r7,r4                 ;2904
000054  dcef              BGT      |L28.54|
                  |L28.86|
000056  1c70              ADDS     r0,r6,#1              ;2902
000058  b286              UXTH     r6,r0                 ;2902
00005a  45b0              CMP      r8,r6                 ;2902
00005c  dce8              BGT      |L28.48|
00005e  e8bd87f0          POP      {r4-r10,pc}
;;;2917   
                          ENDP


                          AREA ||i.LCD_WriteRAM_Prepare||, CODE, READONLY, ALIGN=1

                  LCD_WriteRAM_Prepare PROC
;;;2674   *******************************************************************************/
;;;2675   void LCD_WriteRAM_Prepare(void)
000000  202c              MOVS     r0,#0x2c
;;;2676   {//´Ëº¯Êý·Ç³£ÖØÒª
;;;2677     SSD1963Command_8(0x2c);
000002  f7ffbffe          B.W      SSD1963Command_8
;;;2678   }
;;;2679   void LCD_DrawPoint(u32 point)  //ÏòDisplay RAM Ð´Èë1µãµÄÊý¾Ý£¬´Ëº¯ÊýÓë¡°LCD_WriteRAM_Prepare¡±ÅäºÏÊ¹ÓÃ
                          ENDP


                          AREA ||i.MIPI_Protocol_Write||, CODE, READONLY, ALIGN=2

                  MIPI_Protocol_Write PROC
;;;1115   
;;;1116   void MIPI_Protocol_Write(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1117   {
;;;1118       uint k=0,j=2;
;;;1119       uint Word_Count=(MIPI_Array[0]-0x01);
000004  4f0f              LDR      r7,|L30.68|
000006  2500              MOVS     r5,#0                 ;1118
000008  2402              MOVS     r4,#2                 ;1118
00000a  8838              LDRH     r0,[r7,#0]  ; MIPI_Array
00000c  1e40              SUBS     r0,r0,#1
00000e  b286              UXTH     r6,r0
;;;1120       
;;;1121            SSD1963GPIOOUTCOM(0xBC);    
000010  20bc              MOVS     r0,#0xbc
000012  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1122            SSD1963GPIOOUTDATA_16(Word_Count);  
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1123            SSD1963GPIOOUTCOM(0xBF);     
00001c  20bf              MOVS     r0,#0xbf
00001e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1124   
;;;1125            for(k=0;k<Word_Count;k++)
000022  2e00              CMP      r6,#0
;;;1126            {
;;;1127               SSD1963GPIOOUTDATA_18(MIPI_Array[j]);
;;;1128               j++;
;;;1129            }  
;;;1130      //      LCD_CSB = 1;    
;;;1131   }
000024  bf98              IT       LS
000026  e8bd81f0          POPLS    {r4-r8,pc}
                  |L30.42|
00002a  f8170024          LDRB     r0,[r7,r4,LSL #2]     ;1127
00002e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000032  1c60              ADDS     r0,r4,#1              ;1128
000034  b284              UXTH     r4,r0                 ;1128
000036  1c68              ADDS     r0,r5,#1              ;1125
000038  b285              UXTH     r5,r0                 ;1125
00003a  42ae              CMP      r6,r5                 ;1125
00003c  d8f5              BHI      |L30.42|
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;1132   
                          ENDP

000042  0000              DCW      0x0000
                  |L30.68|
                          DCD      ||.bss||

                          AREA ||i.MIPI_SPI_Write||, CODE, READONLY, ALIGN=2

                  MIPI_SPI_Write PROC
;;;1132   
;;;1133   void MIPI_SPI_Write(uint i,...)
000000  b40f              PUSH     {r0-r3}
;;;1134   {
;;;1135           uint MIPI_Counter;
;;;1136            va_list num_list;
;;;1137            va_start(num_list,i);
;;;1138            MIPI_Array[0]=i;
;;;1139           for(MIPI_Counter=1;MIPI_Counter<=i;MIPI_Counter++)
000002  2001              MOVS     r0,#1
000004  e92d41f0          PUSH     {r4-r8,lr}            ;1134
000008  4f18              LDR      r7,|L31.108|
00000a  f8bd2018          LDRH     r2,[sp,#0x18]         ;1138
00000e  a907              ADD      r1,sp,#0x1c           ;1137
000010  603a              STR      r2,[r7,#0]  ; MIPI_Array
000012  2a01              CMP      r2,#1
000014  d308              BCC      |L31.40|
                  |L31.22|
;;;1140           {
;;;1141               MIPI_Array[MIPI_Counter]=(va_arg(num_list,uint));
000016  f8313b04          LDRH     r3,[r1],#4
00001a  b29b              UXTH     r3,r3
00001c  f8473020          STR      r3,[r7,r0,LSL #2]
000020  1c40              ADDS     r0,r0,#1
000022  b280              UXTH     r0,r0                 ;1139
000024  4282              CMP      r2,r0                 ;1139
000026  d2f6              BCS      |L31.22|
                  |L31.40|
000028  8838              LDRH     r0,[r7,#0]            ;1139  ; MIPI_Array
00002a  2500              MOVS     r5,#0                 ;1139
00002c  1e40              SUBS     r0,r0,#1              ;1139
00002e  b286              UXTH     r6,r0                 ;1139
000030  2402              MOVS     r4,#2                 ;1139
000032  20bc              MOVS     r0,#0xbc              ;1139
000034  f7fffffe          BL       SSD1963GPIOOUTCOM
000038  4630              MOV      r0,r6                 ;1139
00003a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
00003e  20bf              MOVS     r0,#0xbf              ;1139
000040  f7fffffe          BL       SSD1963GPIOOUTCOM
000044  2e00              CMP      r6,#0                 ;1139
;;;1142           }
;;;1143           MIPI_Protocol_Write();
;;;1144           va_end(num_list);       
;;;1145   }
000046  bf9c              ITT      LS
000048  e8bd01f0          POPLS    {r4-r8}
00004c  f85dfb14          LDRLS    pc,[sp],#0x14
                  |L31.80|
000050  f8170024          LDRB     r0,[r7,r4,LSL #2]
000054  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000058  1c60              ADDS     r0,r4,#1
00005a  b284              UXTH     r4,r0
00005c  1c68              ADDS     r0,r5,#1
00005e  b285              UXTH     r5,r0
000060  42ae              CMP      r6,r5
000062  d8f5              BHI      |L31.80|
000064  e8bd01f0          POP      {r4-r8}
000068  f85dfb14          LDR      pc,[sp],#0x14
;;;1146   /*******************************************************************************
                          ENDP

                  |L31.108|
                          DCD      ||.bss||

                          AREA ||i.READ_IC||, CODE, READONLY, ALIGN=2

                  READ_IC PROC
;;;1187   *******************************************************************************/
;;;1188   u8 READ_IC(u8 cmd,u8 cmd1)
000000  b570              PUSH     {r4-r6,lr}
;;;1189   {
000002  460d              MOV      r5,r1
000004  4606              MOV      r6,r0
;;;1190   	u16 Value=0;
;;;1191   	u8 TIMES=0;
000006  2400              MOVS     r4,#0
                  |L32.8|
000008  20b7              MOVS     r0,#0xb7
00000a  f7fffffe          BL       SSD1963GPIOOUTCOM
00000e  f2407052          MOV      r0,#0x752
000012  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       Delay
;;;1192   		
;;;1193   xxxxx:
;;;1194   	ENTER_LP_mode(); //enter  LP mode
;;;1195   	MDelay(10);
00001c  200a              MOVS     r0,#0xa
00001e  f7fffffe          BL       MDelay
;;;1196   
;;;1197   //	SSD1963GPIOOUTCOM(0xc4);		//enable BTA
;;;1198   //	SSD1963GPIOOUTDATA_16(0x0001);
;;;1199   
;;;1200   	SSD1963GPIOOUTCOM(0xc1);		//Max. return packet is 255 bytes
000022  20c1              MOVS     r0,#0xc1
000024  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1201   	SSD1963GPIOOUTDATA_16(0x0004);
000028  2004              MOVS     r0,#4
00002a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
00002e  20b7              MOVS     r0,#0xb7
000030  f7fffffe          BL       SSD1963GPIOOUTCOM
000034  f24030c2          MOV      r0,#0x3c2
000038  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1202   
;;;1203   	ENTER_READ_mode(); //enter read mode	
;;;1204   	MDelay(5);
00003c  2005              MOVS     r0,#5
00003e  f7fffffe          BL       MDelay
000042  20bc              MOVS     r0,#0xbc
000044  f7fffffe          BL       SSD1963GPIOOUTCOM
000048  2004              MOVS     r0,#4
00004a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
00004e  20bf              MOVS     r0,#0xbf
000050  f7fffffe          BL       SSD1963GPIOOUTCOM
000054  20b9              MOVS     r0,#0xb9
000056  f7fffffe          BL       SSD1963GPIOOUTDATA_18
00005a  20f1              MOVS     r0,#0xf1
00005c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000060  2008              MOVS     r0,#8
000062  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000066  2000              MOVS     r0,#0
000068  f7fffffe          BL       SSD1963GPIOOUTDATA_18
00006c  20bc              MOVS     r0,#0xbc
00006e  f7fffffe          BL       SSD1963GPIOOUTCOM
000072  2001              MOVS     r0,#1
000074  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000078  20bf              MOVS     r0,#0xbf
00007a  f7fffffe          BL       SSD1963GPIOOUTCOM
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000084  4628              MOV      r0,r5
000086  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1205   
;;;1206   
;;;1207   	TC358768_DCS_write_1A_0P(cmd,cmd1); //sent the read register...	
;;;1208   	MDelay(5);
00008a  2005              MOVS     r0,#5
00008c  f7fffffe          BL       MDelay
;;;1209   
;;;1210   	while(((SSD2825_READ(0xc6))&0x0001)!=1)
000090  20c6              MOVS     r0,#0xc6
000092  f7fffffe          BL       SSD2825_READ
000096  f0100f01          TST      r0,#1
00009a  d10c              BNE      |L32.182|
                  |L32.156|
;;;1211   	{
;;;1212   		if(TIMES>5)
00009c  2c05              CMP      r4,#5
00009e  d8b3              BHI      |L32.8|
;;;1213   		{
;;;1214   			goto xxxxx;
;;;1215   		}	
;;;1216   //		ENTER_hs_mode();
;;;1217   //		MDelay(1);
;;;1218   		MDelay(5);
0000a0  2005              MOVS     r0,#5
0000a2  f7fffffe          BL       MDelay
;;;1219   		TIMES++;
0000a6  1c60              ADDS     r0,r4,#1
0000a8  b2c4              UXTB     r4,r0
0000aa  20c6              MOVS     r0,#0xc6              ;1210
0000ac  f7fffffe          BL       SSD2825_READ
0000b0  f0100f01          TST      r0,#1                 ;1210
0000b4  d0f2              BEQ      |L32.156|
                  |L32.182|
;;;1220   		
;;;1221   	}
;;;1222   //	while(((SSD2825_READ(0xc6))&0x0001)==1) 
;;;1223   	//¶ÁSSD2825¼Ä´æÆ÷ /// 
;;;1224   //	////ÅÐ¶ÏREAD Ready?//
;;;1225   //	//0xC6 Bit[0] = 0   ¨C Not ready
;;;1226   //	//////0xC6 Bit[0] = 1 ¨C Ready
;;;1227   	{
;;;1228   		MDelay(1);
0000b6  2001              MOVS     r0,#1
0000b8  f7fffffe          BL       MDelay
;;;1229   		Value = SSD2825_READ(0xff); //¶ÁSSD2825¼Ä´æÆ÷0XFF,the return value is IC register value
0000bc  20ff              MOVS     r0,#0xff
0000be  f7fffffe          BL       SSD2825_READ
;;;1230   		MIPI_READ_DATA[0] = Value;
0000c2  4c0a              LDR      r4,|L32.236|
0000c4  7020              STRB     r0,[r4,#0]
;;;1231   		MIPI_READ_DATA[1] = Value>>8;
0000c6  0a00              LSRS     r0,r0,#8
0000c8  7060              STRB     r0,[r4,#1]
;;;1232   		Value = SSD2825_READ_CONTINUE(0xfA); 
0000ca  20fa              MOVS     r0,#0xfa
0000cc  f7fffffe          BL       SSD2825_READ_CONTINUE
;;;1233   		MIPI_READ_DATA[2] = Value;
0000d0  b2c5              UXTB     r5,r0
0000d2  70a5              STRB     r5,[r4,#2]
;;;1234   		MIPI_READ_DATA[3] = Value>>8;
0000d4  0a00              LSRS     r0,r0,#8
0000d6  70e0              STRB     r0,[r4,#3]
0000d8  20b7              MOVS     r0,#0xb7
0000da  f7fffffe          BL       SSD1963GPIOOUTCOM
0000de  f240700b          MOV      r0,#0x70b
0000e2  f7fffffe          BL       SSD1963GPIOOUTDATA_16
0000e6  4628              MOV      r0,r5
;;;1235   
;;;1236   //		Value = SSD2825_READ_CONTINUE(0xfA); 
;;;1237   //		MIPI_READ_DATA[4] = Value;
;;;1238   //		MIPI_READ_DATA[5] = Value>>8;
;;;1239   //		Value = SSD2825_READ_CONTINUE(0xfA);
;;;1240   //		MIPI_READ_DATA[6] = Value;
;;;1241   //		MIPI_READ_DATA[7] = Value>>8;
;;;1242   //		Value = SSD2825_READ_CONTINUE(0xfA);
;;;1243   //		MIPI_READ_DATA[8] = Value;
;;;1244   //		MIPI_READ_DATA[9] = Value>>8;
;;;1245   	}
;;;1246   	ENTER_hs_mode();
;;;1247   	return Value;
;;;1248   }
0000e8  bd70              POP      {r4-r6,pc}
;;;1249   
                          ENDP

0000ea  0000              DCW      0x0000
                  |L32.236|
                          DCD      MIPI_READ_DATA

                          AREA ||i.READ_IC_A||, CODE, READONLY, ALIGN=2

                  READ_IC_A PROC
;;;1327   
;;;1328   u8 READ_IC_A(u8 cmd,u8 cmd1)
000000  b570              PUSH     {r4-r6,lr}
;;;1329   {
;;;1330   	u16 Value=0;
;;;1331   	u8 TIMES=0;
000002  2400              MOVS     r4,#0
000004  4605              MOV      r5,r0                 ;1329
;;;1332   
;;;1333   
;;;1334   	MIPI_SPI_Write(0x03,0x39,0x00,0x00);
000006  4623              MOV      r3,r4
000008  4622              MOV      r2,r4
00000a  2139              MOVS     r1,#0x39
00000c  2003              MOVS     r0,#3
00000e  f7fffffe          BL       MIPI_SPI_Write
;;;1335   	MIPI_SPI_Write(0x03,0x39,0xDb,0x92);
000012  2392              MOVS     r3,#0x92
000014  22db              MOVS     r2,#0xdb
000016  2139              MOVS     r1,#0x39
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       MIPI_SPI_Write
                  |L33.30|
00001e  20b7              MOVS     r0,#0xb7
000020  f7fffffe          BL       SSD1963GPIOOUTCOM
000024  f24030c2          MOV      r0,#0x3c2
000028  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1336   
;;;1337   
;;;1338   xxxxx:
;;;1339   	ENTER_READ_mode(); 
;;;1340   	MDelay(10);
00002c  200a              MOVS     r0,#0xa
00002e  f7fffffe          BL       MDelay
;;;1341   
;;;1342   	
;;;1343   //  SSD1963GPIOOUTCOM(0xb7);        //Generic mode, HS video mode
;;;1344   //       SSD1963GPIOOUTDATA_16(0x03f);
;;;1345           
;;;1346   //	SSD1963GPIOOUTCOM(0xc4);		//enable BTA
;;;1347   //	SSD1963GPIOOUTDATA_16(0x0001);
;;;1348   
;;;1349   	SSD1963GPIOOUTCOM(0xc1);		//Max. return packet is 255 bytes
000032  20c1              MOVS     r0,#0xc1
000034  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1350   	SSD1963GPIOOUTDATA_16(0x0001);
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1351   
;;;1352   	MIPI_SPI_Write(0x02,0x29,cmd);
00003e  462a              MOV      r2,r5
000040  2129              MOVS     r1,#0x29
000042  2002              MOVS     r0,#2
000044  f7fffffe          BL       MIPI_SPI_Write
;;;1353   	MDelay(2);
000048  2002              MOVS     r0,#2
00004a  f7fffffe          BL       MDelay
;;;1354   //	ENTER_READ_mode(); //enter read mode	
;;;1355   	
;;;1356   
;;;1357   //	MIPI_SPI_Write(0x03,0x39,0x00,cmd1);
;;;1358   //	MIPI_SPI_Write(0x03,0x39,cmd,cmd1);
;;;1359   
;;;1360   //	TC358768_DCS_write_1A_0P(cmd,cmd1); //sent the read register...	
;;;1361   	MDelay(2);
00004e  2002              MOVS     r0,#2
000050  f7fffffe          BL       MDelay
;;;1362   	SSD1963GPIOOUTCOM(0xD4);        //SPI read register
000054  20d4              MOVS     r0,#0xd4
000056  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1363       SSD1963GPIOOUTDATA_16(0x00FA);     //READ 
00005a  20fa              MOVS     r0,#0xfa
00005c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1364   
;;;1365   	while(((SSD2825_READ(0xc6))&0x0001)!=1)
000060  20c6              MOVS     r0,#0xc6
000062  f7fffffe          BL       SSD2825_READ
000066  f0100f01          TST      r0,#1
00006a  d109              BNE      |L33.128|
                  |L33.108|
;;;1366   	{
;;;1367   		if(TIMES>5)
00006c  2c05              CMP      r4,#5
00006e  d8d6              BHI      |L33.30|
;;;1368   		{
;;;1369   			goto xxxxx;
;;;1370   		}	
;;;1371   //		ENTER_hs_mode();
;;;1372   //		MDelay(1);
;;;1373   		TIMES++;
000070  1c60              ADDS     r0,r4,#1
000072  b2c4              UXTB     r4,r0
000074  20c6              MOVS     r0,#0xc6              ;1365
000076  f7fffffe          BL       SSD2825_READ
00007a  f0100f01          TST      r0,#1                 ;1365
00007e  d0f5              BEQ      |L33.108|
                  |L33.128|
;;;1374   		
;;;1375   	}
;;;1376   //	while(((SSD2825_READ(0xc6))&0x0001)==1) 
;;;1377   	//¶ÁSSD2825¼Ä´æÆ÷ /// 
;;;1378   //	////ÅÐ¶ÏREAD Ready?//
;;;1379   //	//0xC6 Bit[0] = 0   ¨C Not ready
;;;1380   //	//////0xC6 Bit[0] = 1 ¨C Ready
;;;1381   
;;;1382   		MDelay(1);
000080  2001              MOVS     r0,#1
000082  f7fffffe          BL       MDelay
;;;1383   		Value = SSD2825_READ(0xff); //¶ÁSSD2825¼Ä´æÆ÷0XFF,the return value is IC register value
000086  20ff              MOVS     r0,#0xff
000088  f7fffffe          BL       SSD2825_READ
;;;1384   		MIPI_READ_DATA[0] = Value;
00008c  4a06              LDR      r2,|L33.168|
00008e  b2c4              UXTB     r4,r0
;;;1385   		MIPI_READ_DATA[1] = Value>>8;
000090  0a00              LSRS     r0,r0,#8
000092  7014              STRB     r4,[r2,#0]            ;1384
000094  7050              STRB     r0,[r2,#1]
000096  20b7              MOVS     r0,#0xb7
000098  f7fffffe          BL       SSD1963GPIOOUTCOM
00009c  f240700b          MOV      r0,#0x70b
0000a0  f7fffffe          BL       SSD1963GPIOOUTDATA_16
0000a4  4620              MOV      r0,r4
;;;1386   
;;;1387   
;;;1388   	ENTER_hs_mode();
;;;1389   	return Value;
;;;1390   }
0000a6  bd70              POP      {r4-r6,pc}
;;;1391   
                          ENDP

                  |L33.168|
                          DCD      MIPI_READ_DATA

                          AREA ||i.READ_IC_BACKNUM||, CODE, READONLY, ALIGN=2

                  READ_IC_BACKNUM PROC
;;;1256   *******************************************************************************/
;;;1257   u8 READ_IC_BACKNUM(u8 cmd,u8 back_num)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1258   {
000004  4605              MOV      r5,r0
000006  460f              MOV      r7,r1
;;;1259   	u16 Value=0;
;;;1260   	u8 TIMES=0;
000008  2400              MOVS     r4,#0
00000a  20b7              MOVS     r0,#0xb7
00000c  f7fffffe          BL       SSD1963GPIOOUTCOM
000010  f2407052          MOV      r0,#0x752
000014  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       Delay
;;;1261   	u8 i=0;
;;;1262   		
;;;1263   xxxxx:
;;;1264   	ENTER_LP_mode(); //enter  LP mode
;;;1265   	MDelay(10);
00001e  200a              MOVS     r0,#0xa
000020  f7fffffe          BL       MDelay
;;;1266   
;;;1267   //	SSD1963GPIOOUTCOM(0xc4);		//enable BTA
;;;1268   //	SSD1963GPIOOUTDATA_16(0x0001);
;;;1269   
;;;1270   	SSD1963GPIOOUTCOM(0xc1);		//Max. return packet is 255 bytes
000024  20c1              MOVS     r0,#0xc1
000026  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1271   	SSD1963GPIOOUTDATA_16(back_num);
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000030  20b7              MOVS     r0,#0xb7
000032  f7fffffe          BL       SSD1963GPIOOUTCOM
000036  f24030c2          MOV      r0,#0x3c2
00003a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1272   
;;;1273   	ENTER_READ_mode(); //enter read mode	
;;;1274   	MDelay(5);
00003e  2005              MOVS     r0,#5
000040  f7fffffe          BL       MDelay
;;;1275   
;;;1276   	MIPI_SPI_Write(0x02,0x29,cmd);
000044  462a              MOV      r2,r5
000046  2129              MOVS     r1,#0x29
000048  2002              MOVS     r0,#2
00004a  f7fffffe          BL       MIPI_SPI_Write
;;;1277   	MDelay(5);
00004e  2005              MOVS     r0,#5
000050  f7fffffe          BL       MDelay
;;;1278   	
;;;1279   //	TC358768_DCS_write_1A_0P(cmd,cmd1); //sent the read register...	
;;;1280   //	MDelay(5);
;;;1281   
;;;1282   	while(((SSD2825_READ(0xc6))&0x0001)!=1)
000054  20c6              MOVS     r0,#0xc6
000056  f7fffffe          BL       SSD2825_READ
00005a  f0100f01          TST      r0,#1
00005e  d10f              BNE      |L34.128|
000060  e003              B        |L34.106|
                  |L34.98|
;;;1283   	{
;;;1284   		if(TIMES>5)
000062  2c05              CMP      r4,#5
000064  d901              BLS      |L34.106|
;;;1285   		{
;;;1286   			Value = 0;
000066  2500              MOVS     r5,#0
;;;1287   			goto ENDXXXX;
000068  e025              B        |L34.182|
                  |L34.106|
;;;1288   		}	
;;;1289   //		ENTER_hs_mode();
;;;1290   //		MDelay(1);
;;;1291   		MDelay(5);
00006a  2005              MOVS     r0,#5
00006c  f7fffffe          BL       MDelay
;;;1292   		TIMES++;
000070  1c60              ADDS     r0,r4,#1
000072  b2c4              UXTB     r4,r0
000074  20c6              MOVS     r0,#0xc6              ;1282
000076  f7fffffe          BL       SSD2825_READ
00007a  f0100f01          TST      r0,#1                 ;1282
00007e  d0f0              BEQ      |L34.98|
                  |L34.128|
;;;1293   		
;;;1294   	}
;;;1295   //	while(((SSD2825_READ(0xc6))&0x0001)==1) 
;;;1296   	//¶ÁSSD2825¼Ä´æÆ÷ /// 
;;;1297   //	////ÅÐ¶ÏREAD Ready?//
;;;1298   //	//0xC6 Bit[0] = 0   ¨C Not ready
;;;1299   //	//////0xC6 Bit[0] = 1 ¨C Ready
;;;1300   	{
;;;1301   		MDelay(1);
000080  2001              MOVS     r0,#1
000082  f7fffffe          BL       MDelay
;;;1302   		Value = SSD2825_READ(0xff); //¶ÁSSD2825¼Ä´æÆ÷0XFF,the return value is IC register value
000086  20ff              MOVS     r0,#0xff
000088  f7fffffe          BL       SSD2825_READ
;;;1303   		MIPI_READ_DATA[0] = Value;
00008c  4e0f              LDR      r6,|L34.204|
00008e  4605              MOV      r5,r0                 ;1302
;;;1304   		MIPI_READ_DATA[1] = Value>>8;
;;;1305   		
;;;1306   		for(i=2;i<=back_num-1;i=i+2)
000090  2402              MOVS     r4,#2
000092  7030              STRB     r0,[r6,#0]            ;1303
000094  0a00              LSRS     r0,r0,#8              ;1304
000096  1e7f              SUBS     r7,r7,#1
000098  7070              STRB     r0,[r6,#1]            ;1304
00009a  2f02              CMP      r7,#2
00009c  db0b              BLT      |L34.182|
                  |L34.158|
;;;1307   		{
;;;1308   			Value = SSD2825_READ_CONTINUE(0xfA); 
00009e  20fa              MOVS     r0,#0xfa
0000a0  f7fffffe          BL       SSD2825_READ_CONTINUE
0000a4  4605              MOV      r5,r0
;;;1309   			MIPI_READ_DATA[i] = Value;
0000a6  5530              STRB     r0,[r6,r4]
;;;1310   			MIPI_READ_DATA[i+1] = Value>>8;
0000a8  1931              ADDS     r1,r6,r4
0000aa  0a00              LSRS     r0,r0,#8
0000ac  7048              STRB     r0,[r1,#1]
0000ae  1ca0              ADDS     r0,r4,#2              ;1306
0000b0  b2c4              UXTB     r4,r0                 ;1306
0000b2  42a7              CMP      r7,r4                 ;1306
0000b4  daf3              BGE      |L34.158|
                  |L34.182|
0000b6  20b7              MOVS     r0,#0xb7              ;1306
0000b8  f7fffffe          BL       SSD1963GPIOOUTCOM
0000bc  f240700b          MOV      r0,#0x70b             ;1306
0000c0  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1311   		}
;;;1312   //		Value = SSD2825_READ_CONTINUE(0xfA); 
;;;1313   //		MIPI_READ_DATA[4] = Value;
;;;1314   //		MIPI_READ_DATA[5] = Value>>8;
;;;1315   //		Value = SSD2825_READ_CONTINUE(0xfA);
;;;1316   //		MIPI_READ_DATA[6] = Value;
;;;1317   //		MIPI_READ_DATA[7] = Value>>8;
;;;1318   //		Value = SSD2825_READ_CONTINUE(0xfA);
;;;1319   //		MIPI_READ_DATA[8] = Value;
;;;1320   //		MIPI_READ_DATA[9] = Value>>8;
;;;1321   	}
;;;1322   	ENDXXXX:	
;;;1323   	
;;;1324   	ENTER_hs_mode();
;;;1325   	return Value;
0000c4  b2e8              UXTB     r0,r5
;;;1326   }
0000c6  e8bd81f0          POP      {r4-r8,pc}
;;;1327   
                          ENDP

0000ca  0000              DCW      0x0000
                  |L34.204|
                          DCD      MIPI_READ_DATA

                          AREA ||i.READ_VCOM_OTP_TIMES_HX8369||, CODE, READONLY, ALIGN=1

                  READ_VCOM_OTP_TIMES_HX8369 PROC
;;;1393   
;;;1394   u8 READ_VCOM_OTP_TIMES_HX8369(u8 reg_index)
000000  b530              PUSH     {r4,r5,lr}
;;;1395   {
000002  4604              MOV      r4,r0
000004  b083              SUB      sp,sp,#0xc
000006  20b7              MOVS     r0,#0xb7
000008  f7fffffe          BL       SSD1963GPIOOUTCOM
00000c  f2407052          MOV      r0,#0x752
000010  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       Delay
;;;1396   	ENTER_LP_mode(); //enter  LP mode
;;;1397   	MDelay(20);
00001a  2014              MOVS     r0,#0x14
00001c  f7fffffe          BL       MDelay
;;;1398   	MIPI_SPI_Write(0x05,0x39, 0xB9,0xFF,0x83,0x69);//EXTC Command Set enable register
000020  2169              MOVS     r1,#0x69
000022  2083              MOVS     r0,#0x83
000024  e9cd0100          STRD     r0,r1,[sp,#0]
000028  23ff              MOVS     r3,#0xff
00002a  22b9              MOVS     r2,#0xb9
00002c  2139              MOVS     r1,#0x39
00002e  2005              MOVS     r0,#5
000030  f7fffffe          BL       MIPI_SPI_Write
;;;1399   	MDelay(10);
000034  200a              MOVS     r0,#0xa
000036  f7fffffe          BL       MDelay
;;;1400   	MIPI_SPI_Write(0x06,0x39, 0xBB,0x00,0x00,reg_index,0X00);//SET OTP_INDEX
00003a  2500              MOVS     r5,#0
00003c  e9cd5400          STRD     r5,r4,[sp,#0]
000040  462b              MOV      r3,r5
000042  22bb              MOVS     r2,#0xbb
000044  2139              MOVS     r1,#0x39
000046  2006              MOVS     r0,#6
000048  9502              STR      r5,[sp,#8]
00004a  f7fffffe          BL       MIPI_SPI_Write
;;;1401   	MDelay(10);
00004e  200a              MOVS     r0,#0xa
000050  f7fffffe          BL       MDelay
;;;1402   	MIPI_SPI_Write(0x06,0x39, 0xBB,0x00,0x00,reg_index,0X20);//SET OTP_POR
000054  2020              MOVS     r0,#0x20
000056  9500              STR      r5,[sp,#0]
000058  e9cd4001          STRD     r4,r0,[sp,#4]
00005c  2300              MOVS     r3,#0
00005e  22bb              MOVS     r2,#0xbb
000060  2139              MOVS     r1,#0x39
000062  2006              MOVS     r0,#6
000064  f7fffffe          BL       MIPI_SPI_Write
;;;1403   	MDelay(10);
000068  200a              MOVS     r0,#0xa
00006a  f7fffffe          BL       MDelay
00006e  e9cd5400          STRD     r5,r4,[sp,#0]
;;;1404   	MIPI_SPI_Write(0x06,0x39, 0xBB,0x00,0x00,reg_index,0X00);//CLEAR OTP_POR
000072  2300              MOVS     r3,#0
000074  22bb              MOVS     r2,#0xbb
000076  2139              MOVS     r1,#0x39
000078  2006              MOVS     r0,#6
00007a  9502              STR      r5,[sp,#8]
00007c  f7fffffe          BL       MIPI_SPI_Write
;;;1405   	MDelay(10);
000080  200a              MOVS     r0,#0xa
000082  f7fffffe          BL       MDelay
;;;1406   	READ_IC_BACKNUM(0xBB,5);
000086  2105              MOVS     r1,#5
000088  20bb              MOVS     r0,#0xbb
00008a  f7fffffe          BL       READ_IC_BACKNUM
;;;1407   	
;;;1408   	return 0;
;;;1409   }
00008e  b003              ADD      sp,sp,#0xc
000090  2000              MOVS     r0,#0                 ;1408
000092  bd30              POP      {r4,r5,pc}
;;;1410   
                          ENDP


                          AREA ||i.RGB_color||, CODE, READONLY, ALIGN=2

                  RGB_color PROC
;;;2792   
;;;2793   void RGB_color(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;2794   {
;;;2795   	u16 m,n;
;;;2796   	u8 corr,corg,corb;
;;;2797   
;;;2798   	
;;;2799     
;;;2800   	LCD_SetDisplayWindow(0,(XDP-1),0,(YDP-1));
000004  2200              MOVS     r2,#0
000006  23ef              MOVS     r3,#0xef
000008  f24011df          MOV      r1,#0x1df
00000c  4610              MOV      r0,r2
00000e  f7fffffe          BL       LCD_SetDisplayWindow
000012  202c              MOVS     r0,#0x2c
000014  f7fffffe          BL       SSD1963Command_8
;;;2801   	LCD_WriteRAM_Prepare();
;;;2802   
;;;2803   	LCD_RS(1);
000018  4850              LDR      r0,|L36.348|
00001a  6801              LDR      r1,[r0,#0]
00001c  f0410108          ORR      r1,r1,#8
000020  6001              STR      r1,[r0,#0]
;;;2804       SSD1963_CS(0);
000022  6801              LDR      r1,[r0,#0]
000024  f0210104          BIC      r1,r1,#4
000028  6001              STR      r1,[r0,#0]
;;;2805    	corr = corg = corb = 0;
00002a  2600              MOVS     r6,#0
00002c  4637              MOV      r7,r6
00002e  f1000a04          ADD      r10,r0,#4
000032  46b8              MOV      r8,r7
;;;2806   	for(m = 0; m <(YDP); m++)
000034  46b1              MOV      r9,r6
000036  2520              MOVS     r5,#0x20
000038  f10a0b04          ADD      r11,r10,#4
                  |L36.60|
;;;2807   	{
;;;2808   		
;;;2809     	  for(n = 0; n <XDP/4; n++)
00003c  2400              MOVS     r4,#0
                  |L36.62|
;;;2810     	     {
;;;2811   //	         SSD1963Data_8(corr);SSD1963Data_8(0);SSD1963Data_8(0);
;;;2812   			 SSD1963Data_8tt(corr);		SSD1963Data_8tt(0);			SSD1963Data_8tt(0);
00003e  4641              MOV      r1,r8
000040  f8ca5000          STR      r5,[r10,#0]
000044  4846              LDR      r0,|L36.352|
000046  f7fffffe          BL       GPIO_Write
00004a  f8cb5000          STR      r5,[r11,#0]
00004e  2100              MOVS     r1,#0
000050  f8ca5000          STR      r5,[r10,#0]
000054  4842              LDR      r0,|L36.352|
000056  f7fffffe          BL       GPIO_Write
00005a  f8cb5000          STR      r5,[r11,#0]
00005e  2100              MOVS     r1,#0
000060  f8ca5000          STR      r5,[r10,#0]
000064  483e              LDR      r0,|L36.352|
000066  f7fffffe          BL       GPIO_Write
00006a  f8cb5000          STR      r5,[r11,#0]
00006e  1c60              ADDS     r0,r4,#1              ;2809
000070  b284              UXTH     r4,r0                 ;2809
000072  2c78              CMP      r4,#0x78              ;2809
000074  d3e3              BCC      |L36.62|
;;;2813   	     }
;;;2814   		 corr = (m*255)/YDP;
000076  483b              LDR      r0,|L36.356|
000078  ebc92109          RSB      r1,r9,r9,LSL #8
00007c  fba01001          UMULL    r1,r0,r0,r1
000080  09c0              LSRS     r0,r0,#7
000082  f00008ff          AND      r8,r0,#0xff
;;;2815   
;;;2816   		 for(n = 0; n <XDP/4; n++)
000086  2400              MOVS     r4,#0
000088  9000              STR      r0,[sp,#0]
                  |L36.138|
;;;2817     	     {
;;;2818   //	         SSD1963Data_8(0);SSD1963Data_8(corg);SSD1963Data_8(0);
;;;2819   			 SSD1963Data_8tt(0);		SSD1963Data_8tt(corg);			SSD1963Data_8tt(0);
00008a  2100              MOVS     r1,#0
00008c  f8ca5000          STR      r5,[r10,#0]
000090  4833              LDR      r0,|L36.352|
000092  f7fffffe          BL       GPIO_Write
000096  f8cb5000          STR      r5,[r11,#0]
00009a  f8ca5000          STR      r5,[r10,#0]
00009e  4639              MOV      r1,r7
0000a0  482f              LDR      r0,|L36.352|
0000a2  f7fffffe          BL       GPIO_Write
0000a6  f8cb5000          STR      r5,[r11,#0]
0000aa  2100              MOVS     r1,#0
0000ac  f8ca5000          STR      r5,[r10,#0]
0000b0  482b              LDR      r0,|L36.352|
0000b2  f7fffffe          BL       GPIO_Write
0000b6  f8cb5000          STR      r5,[r11,#0]
0000ba  1c60              ADDS     r0,r4,#1              ;2816
0000bc  b284              UXTH     r4,r0                 ;2816
0000be  2c78              CMP      r4,#0x78              ;2816
0000c0  d3e3              BCC      |L36.138|
;;;2820   	     }
;;;2821   		 corg = (m*255)/YDP;
0000c2  9800              LDR      r0,[sp,#0]
;;;2822   
;;;2823   		 for(n = 0; n <XDP/4; n++)
0000c4  2400              MOVS     r4,#0
0000c6  b2c7              UXTB     r7,r0                 ;2821
                  |L36.200|
;;;2824     	     {
;;;2825   //	         SSD1963Data_8(0);SSD1963Data_8(0);SSD1963Data_8(corb);
;;;2826   			 SSD1963Data_8tt(0);		SSD1963Data_8tt(0);			SSD1963Data_8tt(corb);
0000c8  2100              MOVS     r1,#0
0000ca  f8ca5000          STR      r5,[r10,#0]
0000ce  4824              LDR      r0,|L36.352|
0000d0  f7fffffe          BL       GPIO_Write
0000d4  f8cb5000          STR      r5,[r11,#0]
0000d8  2100              MOVS     r1,#0
0000da  f8ca5000          STR      r5,[r10,#0]
0000de  4820              LDR      r0,|L36.352|
0000e0  f7fffffe          BL       GPIO_Write
0000e4  f8cb5000          STR      r5,[r11,#0]
0000e8  f8ca5000          STR      r5,[r10,#0]
0000ec  4631              MOV      r1,r6
0000ee  481c              LDR      r0,|L36.352|
0000f0  f7fffffe          BL       GPIO_Write
0000f4  f8cb5000          STR      r5,[r11,#0]
0000f8  1c60              ADDS     r0,r4,#1              ;2823
0000fa  b284              UXTH     r4,r0                 ;2823
0000fc  2c78              CMP      r4,#0x78              ;2823
0000fe  d3e3              BCC      |L36.200|
;;;2827   	     }
;;;2828   		 corb = (m*255)/YDP;
000100  9800              LDR      r0,[sp,#0]
;;;2829   
;;;2830   		 for(n = 0; n <XDP/4; n++)
000102  2400              MOVS     r4,#0
000104  b2c6              UXTB     r6,r0                 ;2828
                  |L36.262|
000106  f8ca5000          STR      r5,[r10,#0]           ;2828
00010a  4641              MOV      r1,r8                 ;2828
00010c  4814              LDR      r0,|L36.352|
00010e  f7fffffe          BL       GPIO_Write
000112  f8cb5000          STR      r5,[r11,#0]           ;2828
000116  f8ca5000          STR      r5,[r10,#0]           ;2828
00011a  4639              MOV      r1,r7                 ;2828
00011c  4810              LDR      r0,|L36.352|
00011e  f7fffffe          BL       GPIO_Write
000122  f8cb5000          STR      r5,[r11,#0]           ;2828
000126  f8ca5000          STR      r5,[r10,#0]           ;2828
00012a  4631              MOV      r1,r6                 ;2828
00012c  480c              LDR      r0,|L36.352|
00012e  f7fffffe          BL       GPIO_Write
000132  f8cb5000          STR      r5,[r11,#0]           ;2828
000136  1c60              ADDS     r0,r4,#1
000138  b284              UXTH     r4,r0
00013a  2c78              CMP      r4,#0x78
00013c  d3e3              BCC      |L36.262|
00013e  f1090001          ADD      r0,r9,#1              ;2806
000142  fa1ff980          UXTH     r9,r0                 ;2806
000146  f1b90ff0          CMP      r9,#0xf0              ;2806
00014a  f4ffaf77          BCC      |L36.60|
;;;2831     	     {
;;;2832   //	         SSD1963Data_8(corr);SSD1963Data_8(corg);SSD1963Data_8(corb);
;;;2833   			 SSD1963Data_8tt(corr);		SSD1963Data_8tt(corg);			SSD1963Data_8tt(corb);
;;;2834   	     }
;;;2835   
;;;2836   	}
;;;2837   	SSD1963_CS(1);
00014e  4803              LDR      r0,|L36.348|
000150  6801              LDR      r1,[r0,#0]
000152  f0410104          ORR      r1,r1,#4
000156  6001              STR      r1,[r0,#0]
;;;2838   }
000158  e8bd8ff8          POP      {r3-r11,pc}
;;;2839   
                          ENDP

                  |L36.348|
                          DCD      0x4001080c
                  |L36.352|
                          DCD      0x40010c00
                  |L36.356|
                          DCD      0x88888889

                          AREA ||i.SEND_MIPI_DATA||, CODE, READONLY, ALIGN=1

                  SEND_MIPI_DATA PROC
;;;1871   
;;;1872   void SEND_MIPI_DATA(u8 sum,u8 data_buf[])
000000  b570              PUSH     {r4-r6,lr}
;;;1873   {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;1874   	u8 data_num = 0;
000006  2400              MOVS     r4,#0
;;;1875   	u8 temp = 0;
;;;1876   	
;;;1877   	SSD1963GPIOOUTCOM(0xBC);		                
000008  20bc              MOVS     r0,#0xbc
00000a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1878   	SSD1963GPIOOUTDATA_16(sum);						  
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1879   			SSD1963GPIOOUTCOM(0xbf);
000014  20bf              MOVS     r0,#0xbf
000016  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1880   	for(data_num=0;data_num<sum;data_num++)
00001a  2d00              CMP      r5,#0
;;;1881   	{
;;;1882   		temp = data_buf[data_num];
;;;1883   		SSD1963GPIOOUTDATA_18(temp);
;;;1884   	}
;;;1885   }
00001c  bf98              IT       LS
00001e  bd70              POPLS    {r4-r6,pc}
                  |L37.32|
000020  5d30              LDRB     r0,[r6,r4]            ;1882
000022  f7fffffe          BL       SSD1963GPIOOUTDATA_18
000026  1c60              ADDS     r0,r4,#1              ;1880
000028  b2c4              UXTB     r4,r0                 ;1880
00002a  42a5              CMP      r5,r4                 ;1880
00002c  d8f8              BHI      |L37.32|
00002e  bd70              POP      {r4-r6,pc}
;;;1886   
                          ENDP


                          AREA ||i.SPISDASetInput||, CODE, READONLY, ALIGN=2

                  SPISDASetInput PROC
;;;836    
;;;837    void SPISDASetInput(void)
000000  b508              PUSH     {r3,lr}
;;;838    {
;;;839    	GPIO_InitTypeDef QGPIO_InitStructure;
;;;840    	QGPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
000002  2040              MOVS     r0,#0x40
000004  f8ad0000          STRH     r0,[sp,#0]
;;;841    	QGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ; //GPIO_Mode_IN_FLOATING;
000008  2048              MOVS     r0,#0x48
00000a  f88d0003          STRB     r0,[sp,#3]
;;;842    	GPIO_Init(GPIOA, &QGPIO_InitStructure);
00000e  4669              MOV      r1,sp
000010  4801              LDR      r0,|L38.24|
000012  f7fffffe          BL       GPIO_Init
;;;843    }
000016  bd08              POP      {r3,pc}
;;;844    void SPISDASetOutput(void)
                          ENDP

                  |L38.24|
                          DCD      0x40010800

                          AREA ||i.SPISDASetOutput||, CODE, READONLY, ALIGN=2

                  SPISDASetOutput PROC
;;;843    }
;;;844    void SPISDASetOutput(void)
000000  b508              PUSH     {r3,lr}
;;;845    {
;;;846    	GPIO_InitTypeDef QGPIO_InitStructure;
;;;847    	QGPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;
000002  2040              MOVS     r0,#0x40
000004  f8ad0000          STRH     r0,[sp,#0]
;;;848    	QGPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000008  2001              MOVS     r0,#1
00000a  f88d0002          STRB     r0,[sp,#2]
;;;849    	QGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	  		//OUTPUT
00000e  2010              MOVS     r0,#0x10
000010  f88d0003          STRB     r0,[sp,#3]
;;;850    	GPIO_Init(GPIOA, &QGPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  4802              LDR      r0,|L39.32|
000018  f7fffffe          BL       GPIO_Init
;;;851    }
00001c  bd08              POP      {r3,pc}
;;;852    
                          ENDP

00001e  0000              DCW      0x0000
                  |L39.32|
                          DCD      0x40010800

                          AREA ||i.SSD1963Command_8||, CODE, READONLY, ALIGN=2

                  SSD1963Command_8 PROC
;;;504    
;;;505    void SSD1963Command_8(u8 cmd)
000000  b510              PUSH     {r4,lr}
;;;506    {            LCD_RS(0);
000002  4c0d              LDR      r4,|L40.56|
000004  6822              LDR      r2,[r4,#0]
000006  f0220208          BIC      r2,r2,#8
00000a  6022              STR      r2,[r4,#0]
;;;507                 SSD1963_CS(0); //asm("NOP");asm("NOP");
00000c  6822              LDR      r2,[r4,#0]
00000e  f0220204          BIC      r2,r2,#4
000012  6022              STR      r2,[r4,#0]
;;;508                 
;;;509                 LCD_WR(0);//_WR=0; 
000014  6822              LDR      r2,[r4,#0]
000016  f0220220          BIC      r2,r2,#0x20
00001a  6022              STR      r2,[r4,#0]
;;;510                 DATAOUT(cmd);//asm("NOP"); //P1=cmd;
00001c  4601              MOV      r1,r0
00001e  4807              LDR      r0,|L40.60|
000020  f7fffffe          BL       GPIO_Write
;;;511                 LCD_WR(1);//_WR=1; 
000024  6820              LDR      r0,[r4,#0]
000026  f0400020          ORR      r0,r0,#0x20
00002a  6020              STR      r0,[r4,#0]
;;;512                 SSD1963_CS(1);//CSB=1;
00002c  6820              LDR      r0,[r4,#0]
00002e  f0400004          ORR      r0,r0,#4
000032  6020              STR      r0,[r4,#0]
;;;513                 
;;;514    }     
000034  bd10              POP      {r4,pc}
;;;515    
                          ENDP

000036  0000              DCW      0x0000
                  |L40.56|
                          DCD      0x4001080c
                  |L40.60|
                          DCD      0x40010c00

                          AREA ||i.SSD1963Data_8||, CODE, READONLY, ALIGN=2

                  SSD1963Data_8 PROC
;;;515    
;;;516    void SSD1963Data_8(u8 sdata)
000000  b510              PUSH     {r4,lr}
;;;517    {      LCD_RS(1);
000002  4c0d              LDR      r4,|L41.56|
000004  6822              LDR      r2,[r4,#0]
000006  f0420208          ORR      r2,r2,#8
00000a  6022              STR      r2,[r4,#0]
;;;518                 SSD1963_CS(0);//asm("NOP");asm("NOP");
00000c  6822              LDR      r2,[r4,#0]
00000e  f0220204          BIC      r2,r2,#4
000012  6022              STR      r2,[r4,#0]
;;;519                 //DCX=0; 
;;;520                 LCD_WR(0);//_WR=0; 
000014  6822              LDR      r2,[r4,#0]
000016  f0220220          BIC      r2,r2,#0x20
00001a  6022              STR      r2,[r4,#0]
;;;521                 DATAOUT(sdata);//asm("NOP"); //P1=cmd;
00001c  4601              MOV      r1,r0
00001e  4807              LDR      r0,|L41.60|
000020  f7fffffe          BL       GPIO_Write
;;;522                 LCD_WR(1);//_WR=1; 
000024  6820              LDR      r0,[r4,#0]
000026  f0400020          ORR      r0,r0,#0x20
00002a  6020              STR      r0,[r4,#0]
;;;523                 SSD1963_CS(1);//CSB=1;
00002c  6820              LDR      r0,[r4,#0]
00002e  f0400004          ORR      r0,r0,#4
000032  6020              STR      r0,[r4,#0]
;;;524    }
000034  bd10              POP      {r4,pc}
;;;525    void SSD1963Data_8tt(u8 sdata)
                          ENDP

000036  0000              DCW      0x0000
                  |L41.56|
                          DCD      0x4001080c
                  |L41.60|
                          DCD      0x40010c00

                          AREA ||i.SSD1963Data_8tt||, CODE, READONLY, ALIGN=2

                  SSD1963Data_8tt PROC
;;;524    }
;;;525    void SSD1963Data_8tt(u8 sdata)
000000  b510              PUSH     {r4,lr}
;;;526    {      //LCD_RS(1);
;;;527              //   SSD1963_CS(0);//asm("NOP");asm("NOP");
;;;528                 //DCX=0; 
;;;529               // LCD_WR(0);//_WR=0; 
;;;530    			 GPIOA->BSRR = 0X20;
000002  4a05              LDR      r2,|L42.24|
000004  2420              MOVS     r4,#0x20
000006  6014              STR      r4,[r2,#0]
;;;531    			 DATAOUT(sdata);//asm("NOP"); //P1=cmd;
000008  4601              MOV      r1,r0
00000a  4804              LDR      r0,|L42.28|
00000c  f7fffffe          BL       GPIO_Write
;;;532                 GPIOA->BRR = 0X20;//ResetBits
000010  4803              LDR      r0,|L42.32|
000012  6004              STR      r4,[r0,#0]
;;;533    	
;;;534    		//	 LCD_WR(1);//_WR=1; 
;;;535              //   SSD1963_CS(1);//CSB=1;
;;;536    }
000014  bd10              POP      {r4,pc}
;;;537    //--------------------------------------------------------------------------------
                          ENDP

000016  0000              DCW      0x0000
                  |L42.24|
                          DCD      0x40010810
                  |L42.28|
                          DCD      0x40010c00
                  |L42.32|
                          DCD      0x40010814

                          AREA ||i.SSD1963GPIOOUTCOM||, CODE, READONLY, ALIGN=1

                  SSD1963GPIOOUTCOM PROC
;;;538    
;;;539    void SSD1963GPIOOUTCOM (u8 instru_H)
000000  b570              PUSH     {r4-r6,lr}
;;;540    { 
000002  4605              MOV      r5,r0
;;;541    	u8 i=0;
000004  2400              MOVS     r4,#0
;;;542    	
;;;543    	SSD1963Command_8(0xBa); 
000006  20ba              MOVS     r0,#0xba
000008  f7fffffe          BL       SSD1963Command_8
;;;544    	SSD1963Data_8(0x07);   //CS=0
00000c  2007              MOVS     r0,#7
00000e  f7fffffe          BL       SSD1963Data_8
;;;545    	
;;;546    	SSD1963Command_8(0xBa); 
000012  20ba              MOVS     r0,#0xba
000014  f7fffffe          BL       SSD1963Command_8
;;;547    	SSD1963Data_8(0x05);    //SDI=0
000018  2005              MOVS     r0,#5
00001a  f7fffffe          BL       SSD1963Data_8
;;;548    	
;;;549    	SSD1963Command_8(0xBa); 
00001e  20ba              MOVS     r0,#0xba
000020  f7fffffe          BL       SSD1963Command_8
;;;550    	SSD1963Data_8(0x01);    //sck=0
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       SSD1963Data_8
;;;551    	
;;;552    	SSD1963Command_8(0xBa);  
00002a  20ba              MOVS     r0,#0xba
00002c  f7fffffe          BL       SSD1963Command_8
;;;553    	SSD1963Data_8(0x05);     //sck=1
000030  2005              MOVS     r0,#5
000032  f7fffffe          BL       SSD1963Data_8
                  |L43.54|
;;;554    	
;;;555    	for (i=0;i<8;i++)     // 
;;;556    	{ 
;;;557    		if( !(instru_H & 0x80))
000036  f0150f80          TST      r5,#0x80
;;;558    		{ 
;;;559    			SSD1963Command_8(0xBa); 
;;;560    			SSD1963Data_8(0x05);    //SDI=0
;;;561    			SSD1963Command_8(0xBa); 
;;;562    			SSD1963Data_8(0x01);    //sck=0
;;;563    			
;;;564    			SSD1963Command_8(0xBa);  
;;;565    			SSD1963Data_8(0x05);     //sck=1
;;;566    		}
;;;567    		else
;;;568    		{ 
;;;569    			SSD1963Command_8(0xBa); 
00003a  f04f00ba          MOV      r0,#0xba
00003e  d01e              BEQ      |L43.126|
000040  f7fffffe          BL       SSD1963Command_8
;;;570    			SSD1963Data_8(0x07);    //SDI=1
000044  2007              MOVS     r0,#7
000046  f7fffffe          BL       SSD1963Data_8
;;;571    			SSD1963Command_8(0xBa); 
00004a  20ba              MOVS     r0,#0xba
00004c  f7fffffe          BL       SSD1963Command_8
;;;572    			SSD1963Data_8(0x03);    //sck=0
000050  2003              MOVS     r0,#3
000052  f7fffffe          BL       SSD1963Data_8
;;;573    			
;;;574    			SSD1963Command_8(0xBa);  
000056  20ba              MOVS     r0,#0xba
000058  f7fffffe          BL       SSD1963Command_8
;;;575    			SSD1963Data_8(0x07);     //sck=1
00005c  2007              MOVS     r0,#7
                  |L43.94|
00005e  f7fffffe          BL       SSD1963Data_8
;;;576    		}
;;;577    		
;;;578    		instru_H=instru_H<<1;
000062  0668              LSLS     r0,r5,#25
000064  0e05              LSRS     r5,r0,#24
000066  1c60              ADDS     r0,r4,#1              ;555
000068  b2c4              UXTB     r4,r0                 ;555
00006a  2c08              CMP      r4,#8                 ;555
00006c  d3e3              BCC      |L43.54|
;;;579    	} 
;;;580    	
;;;581    	SSD1963Command_8(0xBa); 
00006e  20ba              MOVS     r0,#0xba
000070  f7fffffe          BL       SSD1963Command_8
;;;582    	SSD1963Data_8(0x0F);
000074  e8bd4070          POP      {r4-r6,lr}
000078  200f              MOVS     r0,#0xf
00007a  f7ffbffe          B.W      SSD1963Data_8
                  |L43.126|
00007e  f7fffffe          BL       SSD1963Command_8
000082  2005              MOVS     r0,#5                 ;560
000084  f7fffffe          BL       SSD1963Data_8
000088  20ba              MOVS     r0,#0xba              ;561
00008a  f7fffffe          BL       SSD1963Command_8
00008e  2001              MOVS     r0,#1                 ;562
000090  f7fffffe          BL       SSD1963Data_8
000094  20ba              MOVS     r0,#0xba              ;564
000096  f7fffffe          BL       SSD1963Command_8
00009a  2005              MOVS     r0,#5                 ;565
00009c  e7df              B        |L43.94|
;;;583      	
;;;584    }
;;;585    
                          ENDP


                          AREA ||i.SSD1963GPIOOUTDATA_16||, CODE, READONLY, ALIGN=1

                  SSD1963GPIOOUTDATA_16 PROC
;;;586    
;;;587    void SSD1963GPIOOUTDATA_16 (u16 instru)  
000000  b570              PUSH     {r4-r6,lr}
;;;588    { 
;;;589    	u8 i=0;
;;;590    	u8 instru_H,instru_L;
;;;591    
;;;592    	instru_L=instru;
000002  b2c4              UXTB     r4,r0
;;;593    	instru_H=instru>>8;
000004  0a05              LSRS     r5,r0,#8
000006  2600              MOVS     r6,#0                 ;589
;;;594    
;;;595    	SSD1963Command_8(0xBa); 
000008  20ba              MOVS     r0,#0xba
00000a  f7fffffe          BL       SSD1963Command_8
;;;596    	SSD1963Data_8(0x07);   //CS=0
00000e  2007              MOVS     r0,#7
000010  f7fffffe          BL       SSD1963Data_8
;;;597    	
;;;598    	SSD1963Command_8(0xBa); 
000014  20ba              MOVS     r0,#0xba
000016  f7fffffe          BL       SSD1963Command_8
;;;599    	SSD1963Data_8(0x03);    //sck=0
00001a  2003              MOVS     r0,#3
00001c  f7fffffe          BL       SSD1963Data_8
;;;600    	
;;;601    	SSD1963Command_8(0xBa);  
000020  20ba              MOVS     r0,#0xba
000022  f7fffffe          BL       SSD1963Command_8
;;;602    	SSD1963Data_8(0x07);     //sck=1
000026  2007              MOVS     r0,#7
000028  f7fffffe          BL       SSD1963Data_8
                  |L44.44|
;;;603    	
;;;604    	for (i=0;i<8;i++)     // 
;;;605    	{ 
;;;606    		if( !(instru_L & 0x80))
00002c  f0140f80          TST      r4,#0x80
;;;607    		{ 
;;;608    			SSD1963Command_8(0xBa); 
;;;609    			SSD1963Data_8(0x05);    //SDI=0
;;;610    			SSD1963Command_8(0xBa); 
;;;611    			SSD1963Data_8(0x01);    //sck=0
;;;612    			
;;;613    			SSD1963Command_8(0xBa);  
;;;614    			SSD1963Data_8(0x05);     //sck=1
;;;615    		}
;;;616    		else
;;;617    		{ 
;;;618    			SSD1963Command_8(0xBa); 
000030  f04f00ba          MOV      r0,#0xba
000034  d04d              BEQ      |L44.210|
000036  f7fffffe          BL       SSD1963Command_8
;;;619    			SSD1963Data_8(0x07);    //SDI=1
00003a  2007              MOVS     r0,#7
00003c  f7fffffe          BL       SSD1963Data_8
;;;620    			SSD1963Command_8(0xBa); 
000040  20ba              MOVS     r0,#0xba
000042  f7fffffe          BL       SSD1963Command_8
;;;621    			SSD1963Data_8(0x03);    //sck=0
000046  2003              MOVS     r0,#3
000048  f7fffffe          BL       SSD1963Data_8
;;;622    			
;;;623    			SSD1963Command_8(0xBa);  
00004c  20ba              MOVS     r0,#0xba
00004e  f7fffffe          BL       SSD1963Command_8
;;;624    			SSD1963Data_8(0x07);     //sck=1
000052  2007              MOVS     r0,#7
                  |L44.84|
000054  f7fffffe          BL       SSD1963Data_8
;;;625    		}
;;;626    		
;;;627    		instru_L=instru_L<<1;
000058  0660              LSLS     r0,r4,#25
00005a  0e04              LSRS     r4,r0,#24
00005c  1c70              ADDS     r0,r6,#1              ;604
00005e  b2c6              UXTB     r6,r0                 ;604
000060  2e08              CMP      r6,#8                 ;604
000062  d3e3              BCC      |L44.44|
;;;628    	} 
;;;629    
;;;630    	
;;;631    	SSD1963Command_8(0xBa); 
000064  20ba              MOVS     r0,#0xba
000066  f7fffffe          BL       SSD1963Command_8
;;;632    	SSD1963Data_8(0x07);   //CS=0
00006a  2007              MOVS     r0,#7
00006c  f7fffffe          BL       SSD1963Data_8
;;;633    	
;;;634    	SSD1963Command_8(0xBa); 
000070  20ba              MOVS     r0,#0xba
000072  f7fffffe          BL       SSD1963Command_8
;;;635    	SSD1963Data_8(0x03);    //sck=0
000076  2003              MOVS     r0,#3
000078  f7fffffe          BL       SSD1963Data_8
;;;636    	
;;;637    	SSD1963Command_8(0xBa);  
00007c  20ba              MOVS     r0,#0xba
00007e  f7fffffe          BL       SSD1963Command_8
;;;638    	SSD1963Data_8(0x07);     //sck=1
000082  2007              MOVS     r0,#7
000084  f7fffffe          BL       SSD1963Data_8
;;;639    	
;;;640    	for (i=0;i<8;i++)     // 
000088  2400              MOVS     r4,#0
                  |L44.138|
;;;641    	{ 
;;;642    		if( !(instru_H & 0x80))
00008a  f0150f80          TST      r5,#0x80
;;;643    		{ 
;;;644    			SSD1963Command_8(0xBa); 
;;;645    			SSD1963Data_8(0x05);    //SDI=0
;;;646    			SSD1963Command_8(0xBa); 
;;;647    			SSD1963Data_8(0x01);    //sck=0
;;;648    			
;;;649    			SSD1963Command_8(0xBa);  
;;;650    			SSD1963Data_8(0x05);     //sck=1
;;;651    		}
;;;652    		else
;;;653    		{ 
;;;654    			SSD1963Command_8(0xBa); 
00008e  f04f00ba          MOV      r0,#0xba
000092  d02e              BEQ      |L44.242|
000094  f7fffffe          BL       SSD1963Command_8
;;;655    			SSD1963Data_8(0x07);    //SDI=1
000098  2007              MOVS     r0,#7
00009a  f7fffffe          BL       SSD1963Data_8
;;;656    			SSD1963Command_8(0xBa); 
00009e  20ba              MOVS     r0,#0xba
0000a0  f7fffffe          BL       SSD1963Command_8
;;;657    			SSD1963Data_8(0x03);    //sck=0
0000a4  2003              MOVS     r0,#3
0000a6  f7fffffe          BL       SSD1963Data_8
;;;658    			
;;;659    			SSD1963Command_8(0xBa);  
0000aa  20ba              MOVS     r0,#0xba
0000ac  f7fffffe          BL       SSD1963Command_8
;;;660    			SSD1963Data_8(0x07);     //sck=1
0000b0  2007              MOVS     r0,#7
                  |L44.178|
0000b2  f7fffffe          BL       SSD1963Data_8
;;;661    		}
;;;662    		
;;;663    		instru_H=instru_H<<1;
0000b6  0668              LSLS     r0,r5,#25
0000b8  0e05              LSRS     r5,r0,#24
0000ba  1c60              ADDS     r0,r4,#1              ;640
0000bc  b2c4              UXTB     r4,r0                 ;640
0000be  2c08              CMP      r4,#8                 ;640
0000c0  d3e3              BCC      |L44.138|
;;;664    	}
;;;665    	
;;;666    	SSD1963Command_8(0xBa); 
0000c2  20ba              MOVS     r0,#0xba
0000c4  f7fffffe          BL       SSD1963Command_8
;;;667    	SSD1963Data_8(0x0F);
0000c8  e8bd4070          POP      {r4-r6,lr}
0000cc  200f              MOVS     r0,#0xf
0000ce  f7ffbffe          B.W      SSD1963Data_8
                  |L44.210|
0000d2  f7fffffe          BL       SSD1963Command_8
0000d6  2005              MOVS     r0,#5                 ;609
0000d8  f7fffffe          BL       SSD1963Data_8
0000dc  20ba              MOVS     r0,#0xba              ;610
0000de  f7fffffe          BL       SSD1963Command_8
0000e2  2001              MOVS     r0,#1                 ;611
0000e4  f7fffffe          BL       SSD1963Data_8
0000e8  20ba              MOVS     r0,#0xba              ;613
0000ea  f7fffffe          BL       SSD1963Command_8
0000ee  2005              MOVS     r0,#5                 ;614
0000f0  e7b0              B        |L44.84|
                  |L44.242|
0000f2  f7fffffe          BL       SSD1963Command_8
0000f6  2005              MOVS     r0,#5                 ;645
0000f8  f7fffffe          BL       SSD1963Data_8
0000fc  20ba              MOVS     r0,#0xba              ;646
0000fe  f7fffffe          BL       SSD1963Command_8
000102  2001              MOVS     r0,#1                 ;647
000104  f7fffffe          BL       SSD1963Data_8
000108  20ba              MOVS     r0,#0xba              ;649
00010a  f7fffffe          BL       SSD1963Command_8
00010e  2005              MOVS     r0,#5                 ;650
000110  e7cf              B        |L44.178|
;;;668      	
;;;669    }
;;;670    
                          ENDP


                          AREA ||i.SSD1963GPIOOUTDATA_18||, CODE, READONLY, ALIGN=1

                  SSD1963GPIOOUTDATA_18 PROC
;;;792    
;;;793    void SSD1963GPIOOUTDATA_18 (u8 instru_L)  		 //Í¨¹ýSSD1963µÄGPIO ÒÔÈýÏß´®ÐÐ·½Ê½ËÍÊý¾Ý
000000  b570              PUSH     {r4-r6,lr}
;;;794    { 
000002  4605              MOV      r5,r0
;;;795    	u8 i=0;
000004  2400              MOVS     r4,#0
;;;796    
;;;797    	SSD1963Command_8(0xBa); 
000006  20ba              MOVS     r0,#0xba
000008  f7fffffe          BL       SSD1963Command_8
;;;798    	SSD1963Data_8(0x07);   //CS=0
00000c  2007              MOVS     r0,#7
00000e  f7fffffe          BL       SSD1963Data_8
;;;799    	
;;;800    	SSD1963Command_8(0xBa); 
000012  20ba              MOVS     r0,#0xba
000014  f7fffffe          BL       SSD1963Command_8
;;;801    	SSD1963Data_8(0x03);    //sck=0
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       SSD1963Data_8
;;;802    	
;;;803    	SSD1963Command_8(0xBa);  
00001e  20ba              MOVS     r0,#0xba
000020  f7fffffe          BL       SSD1963Command_8
;;;804    	SSD1963Data_8(0x07);     //sck=1
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       SSD1963Data_8
                  |L45.42|
;;;805    	
;;;806    	for (i=0;i<8;i++)     // 
;;;807    	{ 
;;;808    		if( !(instru_L & 0x80))
00002a  f0150f80          TST      r5,#0x80
;;;809    		{ 
;;;810    			SSD1963Command_8(0xBa); 
;;;811    			SSD1963Data_8(0x05);    //SDI=0
;;;812    			SSD1963Command_8(0xBa); 
;;;813    			SSD1963Data_8(0x01);    //sck=0
;;;814    			
;;;815    			SSD1963Command_8(0xBa);  
;;;816    			SSD1963Data_8(0x05);     //sck=1
;;;817    		}
;;;818    		else
;;;819    		{ 
;;;820    			SSD1963Command_8(0xBa); 
00002e  f04f00ba          MOV      r0,#0xba
000032  d01e              BEQ      |L45.114|
000034  f7fffffe          BL       SSD1963Command_8
;;;821    			SSD1963Data_8(0x07);    //SDI=1
000038  2007              MOVS     r0,#7
00003a  f7fffffe          BL       SSD1963Data_8
;;;822    			SSD1963Command_8(0xBa); 
00003e  20ba              MOVS     r0,#0xba
000040  f7fffffe          BL       SSD1963Command_8
;;;823    			SSD1963Data_8(0x03);    //sck=0
000044  2003              MOVS     r0,#3
000046  f7fffffe          BL       SSD1963Data_8
;;;824    			
;;;825    			SSD1963Command_8(0xBa);  
00004a  20ba              MOVS     r0,#0xba
00004c  f7fffffe          BL       SSD1963Command_8
;;;826    			SSD1963Data_8(0x07);     //sck=1
000050  2007              MOVS     r0,#7
                  |L45.82|
000052  f7fffffe          BL       SSD1963Data_8
;;;827    		}
;;;828    		
;;;829    		instru_L=instru_L<<1;
000056  0668              LSLS     r0,r5,#25
000058  0e05              LSRS     r5,r0,#24
00005a  1c60              ADDS     r0,r4,#1              ;806
00005c  b2c4              UXTB     r4,r0                 ;806
00005e  2c08              CMP      r4,#8                 ;806
000060  d3e3              BCC      |L45.42|
;;;830    	} 
;;;831    	
;;;832    	SSD1963Command_8(0xBa); 
000062  20ba              MOVS     r0,#0xba
000064  f7fffffe          BL       SSD1963Command_8
;;;833    	SSD1963Data_8(0x0F);
000068  e8bd4070          POP      {r4-r6,lr}
00006c  200f              MOVS     r0,#0xf
00006e  f7ffbffe          B.W      SSD1963Data_8
                  |L45.114|
000072  f7fffffe          BL       SSD1963Command_8
000076  2005              MOVS     r0,#5                 ;811
000078  f7fffffe          BL       SSD1963Data_8
00007c  20ba              MOVS     r0,#0xba              ;812
00007e  f7fffffe          BL       SSD1963Command_8
000082  2001              MOVS     r0,#1                 ;813
000084  f7fffffe          BL       SSD1963Data_8
000088  20ba              MOVS     r0,#0xba              ;815
00008a  f7fffffe          BL       SSD1963Command_8
00008e  2005              MOVS     r0,#5                 ;816
000090  e7df              B        |L45.82|
;;;834      	
;;;835    }
;;;836    
                          ENDP


                          AREA ||i.SSD1963GPIOOUTDATA_8||, CODE, READONLY, ALIGN=1

                  SSD1963GPIOOUTDATA_8 PROC
;;;712    
;;;713    void SSD1963GPIOOUTDATA_8 (u8 instru_L,u8 instru_H)  
000000  b570              PUSH     {r4-r6,lr}
;;;714    { 
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;715    	u8 i=0;
000006  2400              MOVS     r4,#0
;;;716    
;;;717    	SSD1963Command_8(0xBa); 
000008  20ba              MOVS     r0,#0xba
00000a  f7fffffe          BL       SSD1963Command_8
;;;718    	SSD1963Data_8(0x07);   //CS=0
00000e  2007              MOVS     r0,#7
000010  f7fffffe          BL       SSD1963Data_8
;;;719    	
;;;720    	SSD1963Command_8(0xBa); 
000014  20ba              MOVS     r0,#0xba
000016  f7fffffe          BL       SSD1963Command_8
;;;721    	SSD1963Data_8(0x03);    //sck=0
00001a  2003              MOVS     r0,#3
00001c  f7fffffe          BL       SSD1963Data_8
;;;722    	
;;;723    	SSD1963Command_8(0xBa);  
000020  20ba              MOVS     r0,#0xba
000022  f7fffffe          BL       SSD1963Command_8
;;;724    	SSD1963Data_8(0x07);     //sck=1
000026  2007              MOVS     r0,#7
000028  f7fffffe          BL       SSD1963Data_8
                  |L46.44|
;;;725    	
;;;726    	for (i=0;i<8;i++)     // 
;;;727    	{ 
;;;728    		if( !(instru_L & 0x80))
00002c  f0160f80          TST      r6,#0x80
;;;729    		{ 
;;;730    			SSD1963Command_8(0xBa); 
;;;731    			SSD1963Data_8(0x05);    //SDI=0
;;;732    			SSD1963Command_8(0xBa); 
;;;733    			SSD1963Data_8(0x01);    //sck=0
;;;734    			
;;;735    			SSD1963Command_8(0xBa);  
;;;736    			SSD1963Data_8(0x05);     //sck=1
;;;737    		}
;;;738    		else
;;;739    		{ 
;;;740    			SSD1963Command_8(0xBa); 
000030  f04f00ba          MOV      r0,#0xba
000034  d04d              BEQ      |L46.210|
000036  f7fffffe          BL       SSD1963Command_8
;;;741    			SSD1963Data_8(0x07);    //SDI=1
00003a  2007              MOVS     r0,#7
00003c  f7fffffe          BL       SSD1963Data_8
;;;742    			SSD1963Command_8(0xBa); 
000040  20ba              MOVS     r0,#0xba
000042  f7fffffe          BL       SSD1963Command_8
;;;743    			SSD1963Data_8(0x03);    //sck=0
000046  2003              MOVS     r0,#3
000048  f7fffffe          BL       SSD1963Data_8
;;;744    			
;;;745    			SSD1963Command_8(0xBa);  
00004c  20ba              MOVS     r0,#0xba
00004e  f7fffffe          BL       SSD1963Command_8
;;;746    			SSD1963Data_8(0x07);     //sck=1
000052  2007              MOVS     r0,#7
                  |L46.84|
000054  f7fffffe          BL       SSD1963Data_8
;;;747    		}
;;;748    		
;;;749    		instru_L=instru_L<<1;
000058  0670              LSLS     r0,r6,#25
00005a  0e06              LSRS     r6,r0,#24
00005c  1c60              ADDS     r0,r4,#1              ;726
00005e  b2c4              UXTB     r4,r0                 ;726
000060  2c08              CMP      r4,#8                 ;726
000062  d3e3              BCC      |L46.44|
;;;750    	} 
;;;751    
;;;752    	
;;;753    	SSD1963Command_8(0xBa); 
000064  20ba              MOVS     r0,#0xba
000066  f7fffffe          BL       SSD1963Command_8
;;;754    	SSD1963Data_8(0x07);   //CS=0
00006a  2007              MOVS     r0,#7
00006c  f7fffffe          BL       SSD1963Data_8
;;;755    	
;;;756    	SSD1963Command_8(0xBa); 
000070  20ba              MOVS     r0,#0xba
000072  f7fffffe          BL       SSD1963Command_8
;;;757    	SSD1963Data_8(0x03);    //sck=0
000076  2003              MOVS     r0,#3
000078  f7fffffe          BL       SSD1963Data_8
;;;758    	
;;;759    	SSD1963Command_8(0xBa);  
00007c  20ba              MOVS     r0,#0xba
00007e  f7fffffe          BL       SSD1963Command_8
;;;760    	SSD1963Data_8(0x07);     //sck=1
000082  2007              MOVS     r0,#7
000084  f7fffffe          BL       SSD1963Data_8
;;;761    	
;;;762    	for (i=0;i<8;i++)     // 
000088  2400              MOVS     r4,#0
                  |L46.138|
;;;763    	{ 
;;;764    		if( !(instru_H & 0x80))
00008a  f0150f80          TST      r5,#0x80
;;;765    		{ 
;;;766    			SSD1963Command_8(0xBa); 
;;;767    			SSD1963Data_8(0x05);    //SDI=0
;;;768    			SSD1963Command_8(0xBa); 
;;;769    			SSD1963Data_8(0x01);    //sck=0
;;;770    			
;;;771    			SSD1963Command_8(0xBa);  
;;;772    			SSD1963Data_8(0x05);     //sck=1
;;;773    		}
;;;774    		else
;;;775    		{ 
;;;776    			SSD1963Command_8(0xBa); 
00008e  f04f00ba          MOV      r0,#0xba
000092  d02e              BEQ      |L46.242|
000094  f7fffffe          BL       SSD1963Command_8
;;;777    			SSD1963Data_8(0x07);    //SDI=1
000098  2007              MOVS     r0,#7
00009a  f7fffffe          BL       SSD1963Data_8
;;;778    			SSD1963Command_8(0xBa); 
00009e  20ba              MOVS     r0,#0xba
0000a0  f7fffffe          BL       SSD1963Command_8
;;;779    			SSD1963Data_8(0x03);    //sck=0
0000a4  2003              MOVS     r0,#3
0000a6  f7fffffe          BL       SSD1963Data_8
;;;780    			
;;;781    			SSD1963Command_8(0xBa);  
0000aa  20ba              MOVS     r0,#0xba
0000ac  f7fffffe          BL       SSD1963Command_8
;;;782    			SSD1963Data_8(0x07);     //sck=1
0000b0  2007              MOVS     r0,#7
                  |L46.178|
0000b2  f7fffffe          BL       SSD1963Data_8
;;;783    		}
;;;784    		
;;;785    		instru_H=instru_H<<1;
0000b6  0668              LSLS     r0,r5,#25
0000b8  0e05              LSRS     r5,r0,#24
0000ba  1c60              ADDS     r0,r4,#1              ;762
0000bc  b2c4              UXTB     r4,r0                 ;762
0000be  2c08              CMP      r4,#8                 ;762
0000c0  d3e3              BCC      |L46.138|
;;;786    	}
;;;787    	
;;;788    	SSD1963Command_8(0xBa); 
0000c2  20ba              MOVS     r0,#0xba
0000c4  f7fffffe          BL       SSD1963Command_8
;;;789    	SSD1963Data_8(0x0F);
0000c8  e8bd4070          POP      {r4-r6,lr}
0000cc  200f              MOVS     r0,#0xf
0000ce  f7ffbffe          B.W      SSD1963Data_8
                  |L46.210|
0000d2  f7fffffe          BL       SSD1963Command_8
0000d6  2005              MOVS     r0,#5                 ;731
0000d8  f7fffffe          BL       SSD1963Data_8
0000dc  20ba              MOVS     r0,#0xba              ;732
0000de  f7fffffe          BL       SSD1963Command_8
0000e2  2001              MOVS     r0,#1                 ;733
0000e4  f7fffffe          BL       SSD1963Data_8
0000e8  20ba              MOVS     r0,#0xba              ;735
0000ea  f7fffffe          BL       SSD1963Command_8
0000ee  2005              MOVS     r0,#5                 ;736
0000f0  e7b0              B        |L46.84|
                  |L46.242|
0000f2  f7fffffe          BL       SSD1963Command_8
0000f6  2005              MOVS     r0,#5                 ;767
0000f8  f7fffffe          BL       SSD1963Data_8
0000fc  20ba              MOVS     r0,#0xba              ;768
0000fe  f7fffffe          BL       SSD1963Command_8
000102  2001              MOVS     r0,#1                 ;769
000104  f7fffffe          BL       SSD1963Data_8
000108  20ba              MOVS     r0,#0xba              ;771
00010a  f7fffffe          BL       SSD1963Command_8
00010e  2005              MOVS     r0,#5                 ;772
000110  e7cf              B        |L46.178|
;;;790      	
;;;791    }
;;;792    
                          ENDP


                          AREA ||i.SSD1963INITSSD2825||, CODE, READONLY, ALIGN=2

                  SSD1963INITSSD2825 PROC
;;;1412   
;;;1413   void SSD1963INITSSD2825(void)		//Í¨¹ýSSD1963µÄGPIOÒÔÈýÏß´®ÐÐ·½Ê½8bit¶ÔSSD2825½øÐÐ³õÊ¼»¯
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1414   {    
;;;1415   	u16 data = 0x400a;
;;;1416   	u16 VHPW,VHBP,VHFP;
;;;1417   
;;;1418   	VHPW=(VPW<<8)+HPW;
000004  4d53              LDR      r5,|L47.340|
000006  8b28              LDRH     r0,[r5,#0x18]  ; HPW
000008  7da9              LDRB     r1,[r5,#0x16]  ; VPW
00000a  eb002001          ADD      r0,r0,r1,LSL #8
00000e  fa1ff880          UXTH     r8,r0
;;;1419   	VHBP=(VBP<<8)+HBP;
000012  8a68              LDRH     r0,[r5,#0x12]  ; HBP
000014  7b29              LDRB     r1,[r5,#0xc]  ; VBP
000016  eb002001          ADD      r0,r0,r1,LSL #8
00001a  b287              UXTH     r7,r0
;;;1420   	VHFP=(VFP<<8)+HFP;
00001c  8aa8              LDRH     r0,[r5,#0x14]  ; HFP
00001e  7ba9              LDRB     r1,[r5,#0xe]  ; VFP
000020  eb002001          ADD      r0,r0,r1,LSL #8
000024  b286              UXTH     r6,r0
;;;1421   
;;;1422   
;;;1423   		SSD1963GPIOOUTCOM(0xc0);
000026  20c0              MOVS     r0,#0xc0
000028  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1424   		SSD1963GPIOOUTDATA_16(0x0100);
00002c  f44f7080          MOV      r0,#0x100
000030  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1425   		Delay(20);
000034  2014              MOVS     r0,#0x14
000036  f7fffffe          BL       Delay
;;;1426   	
;;;1427   	while( SSD2825_READ(0XB0) != 0x2828)
00003a  20b0              MOVS     r0,#0xb0
00003c  f7fffffe          BL       SSD2825_READ
000040  f6420428          MOV      r4,#0x2828
000044  42a0              CMP      r0,r4
000046  d00e              BEQ      |L47.102|
                  |L47.72|
;;;1428   	{
;;;1429   		SSD1963GPIOOUTCOM(0xc0);
000048  20c0              MOVS     r0,#0xc0
00004a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1430   			SSD1963GPIOOUTDATA_16(0x0100);		
00004e  f44f7080          MOV      r0,#0x100
000052  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1431   			Delay(20);
000056  2014              MOVS     r0,#0x14
000058  f7fffffe          BL       Delay
00005c  20b0              MOVS     r0,#0xb0              ;1427
00005e  f7fffffe          BL       SSD2825_READ
000062  42a0              CMP      r0,r4                 ;1427
000064  d1f0              BNE      |L47.72|
                  |L47.102|
;;;1432   	}
;;;1433   
;;;1434   			SSD1963GPIOOUTCOM(0xB1);
000066  20b1              MOVS     r0,#0xb1
000068  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1435   		SSD1963GPIOOUTDATA_16(VHPW);		//Vertical sync and horizontal sync active period 
00006c  4640              MOV      r0,r8
00006e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1436   
;;;1437   			SSD1963GPIOOUTCOM(0xB2);
000072  20b2              MOVS     r0,#0xb2
000074  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1438   		SSD1963GPIOOUTDATA_16(VHBP);		//Vertical and horizontal back porch period 
000078  4638              MOV      r0,r7
00007a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1439   
;;;1440   			SSD1963GPIOOUTCOM(0xB3);
00007e  20b3              MOVS     r0,#0xb3
000080  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1441   		SSD1963GPIOOUTDATA_16(VHFP);		//Vertical and horizontal front porch period 
000084  4630              MOV      r0,r6
000086  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1442   
;;;1443   			SSD1963GPIOOUTCOM(0xB4);
00008a  20b4              MOVS     r0,#0xb4
00008c  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1444   		SSD1963GPIOOUTDATA_16(HDP);		//Horizontal active period 
000090  8a28              LDRH     r0,[r5,#0x10]  ; HDP
000092  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1445   
;;;1446   			SSD1963GPIOOUTCOM(0xB5);
000096  20b5              MOVS     r0,#0xb5
000098  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1447   		SSD1963GPIOOUTDATA_16(VDP);		//Vertical active period 
00009c  8968              LDRH     r0,[r5,#0xa]  ; VDP
00009e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1448   
;;;1449   			SSD1963GPIOOUTCOM(0xB6);		//Video mode and video pixel format
0000a2  20b6              MOVS     r0,#0xb6
0000a4  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1450   		SSD1963GPIOOUTDATA_16(0x0007);		//24bit 
0000a8  2007              MOVS     r0,#7
0000aa  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1451   
;;;1452   			SSD1963GPIOOUTCOM(0xDE);		
0000ae  20de              MOVS     r0,#0xde
0000b0  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1453   		SSD1963GPIOOUTDATA_16(value_Lane_select - 1);		//MIPI lane select  
0000b4  8928              LDRH     r0,[r5,#8]  ; value_Lane_select
0000b6  1e40              SUBS     r0,r0,#1
0000b8  b280              UXTH     r0,r0
0000ba  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1454   
;;;1455   			SSD1963GPIOOUTCOM(0xd6);	
0000be  20d6              MOVS     r0,#0xd6
0000c0  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1456   		SSD1963GPIOOUTDATA_16(0x0001);		//Color order and endianess 
0000c4  2001              MOVS     r0,#1
0000c6  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1457   
;;;1458   
;;;1459   
;;;1460   //	{
;;;1461   //            SSD1963GPIOOUTCOM(0xC9);		//add  -2016-3-3
;;;1462   //            SSD1963GPIOOUTDATA_16(0x2302);      ///////default  = 0x1402
;;;1463   //  
;;;1464   //            SSD1963GPIOOUTCOM(0xCA);		//add  -2016-3-3
;;;1465   //            SSD1963GPIOOUTDATA_16(0x2301);      ///////default  = 0x2803
;;;1466   //            
;;;1467   //            SSD1963GPIOOUTCOM(0xCB);		//add  -2016-3-3
;;;1468   //            SSD1963GPIOOUTDATA_16(0x0510);      ///////default  = 0x0416
;;;1469   //            
;;;1470   //            SSD1963GPIOOUTCOM(0xCC);		//add  -2016-3-3
;;;1471   //            SSD1963GPIOOUTDATA_16(0x1005);      ///////default  = 0x0a0a
;;;1472   //            
;;;1473   //            SSD1963GPIOOUTCOM(0xD6);		//add  -2016-3-3
;;;1474   //            SSD1963GPIOOUTDATA_16(0x0006);      ///////default  = 
;;;1475   //            
;;;1476   //            SSD1963GPIOOUTCOM(0xC4);		//add  -2016-3-3
;;;1477   //            SSD1963GPIOOUTDATA_16(0x0001);
;;;1478   //            
;;;1479   //            SSD1963GPIOOUTCOM(0xEB);		//add  -2016-3-3
;;;1480   //            SSD1963GPIOOUTDATA_16(0x8000);
;;;1481   //            
;;;1482   //            SSD1963GPIOOUTCOM(0xDD);		//add  -2016-3-3
;;;1483   //            SSD1963GPIOOUTDATA_16(0x0000);      ///////default  = 0x0000
;;;1484   
;;;1485   //        }  
;;;1486   
;;;1487   
;;;1488   
;;;1489   			SSD1963GPIOOUTCOM(0xb9);		//PLL disable 
0000ca  20b9              MOVS     r0,#0xb9
0000cc  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1490   		SSD1963GPIOOUTDATA_16(0x0000);
0000d0  2000              MOVS     r0,#0
0000d2  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1491   		Delay(1);
0000d6  2001              MOVS     r0,#1
0000d8  f7fffffe          BL       Delay
;;;1492   			
;;;1493   				data = value_HighSpeed/Freq_OSC;
0000dc  88e8              LDRH     r0,[r5,#6]  ; value_HighSpeed
0000de  78a9              LDRB     r1,[r5,#2]  ; Freq_OSC
;;;1494   
;;;1495   		if(value_HighSpeed < 125 )
0000e0  287d              CMP      r0,#0x7d
0000e2  fbb0f4f1          UDIV     r4,r0,r1              ;1493
0000e6  d30d              BCC      |L47.260|
;;;1496   		{
;;;1497   			data =  data;	
;;;1498   		}
;;;1499   		else if(value_HighSpeed < 250 )
0000e8  28fa              CMP      r0,#0xfa
;;;1500   		{
;;;1501   			data = 0x4000 + data;	
0000ea  bf3c              ITT      CC
0000ec  f5044080          ADDCC    r0,r4,#0x4000
0000f0  b284              UXTHCC   r4,r0
0000f2  d307              BCC      |L47.260|
;;;1502   		}
;;;1503   		else  if(value_HighSpeed < 500 )
0000f4  f5b07ffa          CMP      r0,#0x1f4
;;;1504   		{
;;;1505   			data = 0x8000 + data;	
0000f8  bf34              ITE      CC
0000fa  f5044000          ADDCC    r0,r4,#0x8000
;;;1506   		}
;;;1507   		else
;;;1508   		{
;;;1509   			data = 0xc000 + data;	
0000fe  f5044040          ADDCS    r0,r4,#0xc000
000102  b284              UXTH     r4,r0                 ;1505
                  |L47.260|
;;;1510   		}
;;;1511   				
;;;1512   		SSD1963GPIOOUTCOM(0xba);		//PLL setting 
000104  20ba              MOVS     r0,#0xba
000106  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1513   		SSD1963GPIOOUTDATA_16(data);
00010a  4620              MOV      r0,r4
00010c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1514   
;;;1515   			SSD1963GPIOOUTCOM(0xbb);		//LP clock divider 
000110  20bb              MOVS     r0,#0xbb
000112  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1516   		SSD1963GPIOOUTDATA_16(0x0006);			
000116  2006              MOVS     r0,#6
000118  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1517   
;;;1518   			SSD1963GPIOOUTCOM(0xb9);		//PLL enable 
00011c  20b9              MOVS     r0,#0xb9
00011e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1519   		SSD1963GPIOOUTDATA_16(0x4001);
000122  f2440001          MOV      r0,#0x4001
000126  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1520   		Delay(1);
00012a  2001              MOVS     r0,#1
00012c  f7fffffe          BL       Delay
;;;1521   
;;;1522   			SSD1963GPIOOUTCOM(0xb8);		//VC register 
000130  20b8              MOVS     r0,#0xb8
000132  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1523   		SSD1963GPIOOUTDATA_16(0x0000);
000136  2000              MOVS     r0,#0
000138  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1524   
;;;1525   			SSD1963GPIOOUTCOM(0xb7);		//Generic mode, HS video mode
00013c  20b7              MOVS     r0,#0xb7
00013e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1526   		SSD1963GPIOOUTDATA_16(0x0752);		//    			generic		long packet	  0X39-->0X0752
000142  f2407052          MOV      r0,#0x752
000146  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1527   
;;;1528   		Delay(5);
00014a  e8bd41f0          POP      {r4-r8,lr}
00014e  2005              MOVS     r0,#5
000150  f7ffbffe          B.W      Delay
;;;1529   
;;;1530   }
;;;1531   
                          ENDP

                  |L47.340|
                          DCD      ||.data||

                          AREA ||i.SSD1963toSSD2825DATA_8BIT||, CODE, READONLY, ALIGN=1

                  SSD1963toSSD2825DATA_8BIT PROC
;;;670    
;;;671    void SSD1963toSSD2825DATA_8BIT(u8 data)
000000  b570              PUSH     {r4-r6,lr}
;;;672    {
000002  4605              MOV      r5,r0
;;;673    	u8 i=0;
000004  2400              MOVS     r4,#0
;;;674    
;;;675    	SSD1963Command_8(0xBa); 
000006  20ba              MOVS     r0,#0xba
000008  f7fffffe          BL       SSD1963Command_8
;;;676    	SSD1963Data_8(0x07);   //CS=0
00000c  2007              MOVS     r0,#7
00000e  f7fffffe          BL       SSD1963Data_8
;;;677    	
;;;678    	SSD1963Command_8(0xBa); 
000012  20ba              MOVS     r0,#0xba
000014  f7fffffe          BL       SSD1963Command_8
;;;679    	SSD1963Data_8(0x03);    //sck=0
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       SSD1963Data_8
;;;680    	
;;;681    	SSD1963Command_8(0xBa);  
00001e  20ba              MOVS     r0,#0xba
000020  f7fffffe          BL       SSD1963Command_8
;;;682    	SSD1963Data_8(0x07);     //sck=1
000024  2007              MOVS     r0,#7
000026  f7fffffe          BL       SSD1963Data_8
                  |L48.42|
;;;683    	
;;;684    	for (i=0;i<8;i++)     // 
;;;685    	{ 
;;;686    		if( !(data & 0x80))
00002a  f0150f80          TST      r5,#0x80
;;;687    		{ 
;;;688    			SSD1963Command_8(0xBa); 
;;;689    			SSD1963Data_8(0x05);    //SDI=0
;;;690    			SSD1963Command_8(0xBa); 
;;;691    			SSD1963Data_8(0x01);    //sck=0
;;;692    			
;;;693    			SSD1963Command_8(0xBa);  
;;;694    			SSD1963Data_8(0x05);     //sck=1
;;;695    		}
;;;696    		else
;;;697    		{ 
;;;698    			SSD1963Command_8(0xBa); 
00002e  f04f00ba          MOV      r0,#0xba
000032  d01e              BEQ      |L48.114|
000034  f7fffffe          BL       SSD1963Command_8
;;;699    			SSD1963Data_8(0x07);    //SDI=1
000038  2007              MOVS     r0,#7
00003a  f7fffffe          BL       SSD1963Data_8
;;;700    			SSD1963Command_8(0xBa); 
00003e  20ba              MOVS     r0,#0xba
000040  f7fffffe          BL       SSD1963Command_8
;;;701    			SSD1963Data_8(0x03);    //sck=0
000044  2003              MOVS     r0,#3
000046  f7fffffe          BL       SSD1963Data_8
;;;702    			
;;;703    			SSD1963Command_8(0xBa);  
00004a  20ba              MOVS     r0,#0xba
00004c  f7fffffe          BL       SSD1963Command_8
;;;704    			SSD1963Data_8(0x07);     //sck=1
000050  2007              MOVS     r0,#7
                  |L48.82|
000052  f7fffffe          BL       SSD1963Data_8
;;;705    		}
;;;706    		
;;;707    		data=data<<1;
000056  0668              LSLS     r0,r5,#25
000058  0e05              LSRS     r5,r0,#24
00005a  1c60              ADDS     r0,r4,#1              ;684
00005c  b2c4              UXTB     r4,r0                 ;684
00005e  2c08              CMP      r4,#8                 ;684
000060  d3e3              BCC      |L48.42|
;;;708    	} 
;;;709    	SSD1963Command_8(0xBa); 
000062  20ba              MOVS     r0,#0xba
000064  f7fffffe          BL       SSD1963Command_8
;;;710    	SSD1963Data_8(0x0F);		//CS  = 1	
000068  e8bd4070          POP      {r4-r6,lr}
00006c  200f              MOVS     r0,#0xf
00006e  f7ffbffe          B.W      SSD1963Data_8
                  |L48.114|
000072  f7fffffe          BL       SSD1963Command_8
000076  2005              MOVS     r0,#5                 ;689
000078  f7fffffe          BL       SSD1963Data_8
00007c  20ba              MOVS     r0,#0xba              ;690
00007e  f7fffffe          BL       SSD1963Command_8
000082  2001              MOVS     r0,#1                 ;691
000084  f7fffffe          BL       SSD1963Data_8
000088  20ba              MOVS     r0,#0xba              ;693
00008a  f7fffffe          BL       SSD1963Command_8
00008e  2005              MOVS     r0,#5                 ;694
000090  e7df              B        |L48.82|
;;;711    }
;;;712    
                          ENDP


                          AREA ||i.SSD2825INITIAL_HX8369B||, CODE, READONLY, ALIGN=1

                  SSD2825INITIAL_HX8369B PROC
;;;1948   
;;;1949   void SSD2825INITIAL_HX8369B(void)	//Í¨¹ýSSD1963µÄGPIOÒÔÈýÏß´®ÐÐ·½Ê½8bit°ÑÊý¾ÝËÍ¸øSSD2825£¬Í¨¹ýSSD2825¶ÔÄ£×é½øÐÐ³õÊ¼»¯
000000  b510              PUSH     {r4,lr}
;;;1950   {    
;;;1951   	///////FOR GPM1316B0 USE
;;;1952   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000002  20bc              MOVS     r0,#0xbc
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1953   	SSD1963GPIOOUTDATA_16(0x0004);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1954   			SSD1963GPIOOUTCOM(0xbf);
00000e  20bf              MOVS     r0,#0xbf
000010  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1955   	SSD1963GPIOOUTDATA_18(0xB9);
000014  20b9              MOVS     r0,#0xb9
000016  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1956   	SSD1963GPIOOUTDATA_18(0xff);	  //
00001a  20ff              MOVS     r0,#0xff
00001c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1957   	SSD1963GPIOOUTDATA_18(0x83);	  //
000020  2083              MOVS     r0,#0x83
000022  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1958   	SSD1963GPIOOUTDATA_18(0x69);
000026  2069              MOVS     r0,#0x69
000028  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1959   
;;;1960   	/////////MIPI command
;;;1961   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00002c  20bc              MOVS     r0,#0xbc
00002e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1962   	SSD1963GPIOOUTDATA_16(0x000F);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000032  200f              MOVS     r0,#0xf
000034  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1963   			SSD1963GPIOOUTCOM(0xbf);
000038  20bf              MOVS     r0,#0xbf
00003a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1964   	SSD1963GPIOOUTDATA_18(0xBA);	  //
00003e  20ba              MOVS     r0,#0xba
000040  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1965   	SSD1963GPIOOUTDATA_18(0x31);	  //
000044  2031              MOVS     r0,#0x31
000046  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1966   	SSD1963GPIOOUTDATA_18(0x00);
00004a  2000              MOVS     r0,#0
00004c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1967   	SSD1963GPIOOUTDATA_18(0x16);
000050  2016              MOVS     r0,#0x16
000052  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1968   	SSD1963GPIOOUTDATA_18(0xCA);
000056  20ca              MOVS     r0,#0xca
000058  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1969   	SSD1963GPIOOUTDATA_18(0xB1);
00005c  20b1              MOVS     r0,#0xb1
00005e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1970   	SSD1963GPIOOUTDATA_18(0x0A);
000062  200a              MOVS     r0,#0xa
000064  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1971   	SSD1963GPIOOUTDATA_18(0x00);
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1972   	SSD1963GPIOOUTDATA_18(0x28);
00006e  2028              MOVS     r0,#0x28
000070  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1973   	SSD1963GPIOOUTDATA_18(0x02);
000074  2002              MOVS     r0,#2
000076  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1974   	SSD1963GPIOOUTDATA_18(0x21);
00007a  2021              MOVS     r0,#0x21
00007c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1975   	SSD1963GPIOOUTDATA_18(0x21);
000080  2021              MOVS     r0,#0x21
000082  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1976   	SSD1963GPIOOUTDATA_18(0x9A);
000086  209a              MOVS     r0,#0x9a
000088  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1977   	SSD1963GPIOOUTDATA_18(0x1A);
00008c  201a              MOVS     r0,#0x1a
00008e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1978   	SSD1963GPIOOUTDATA_18(0x8F);
000092  208f              MOVS     r0,#0x8f
000094  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1979   	
;;;1980   	//////////GOA Timing Control
;;;1981   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000098  20bc              MOVS     r0,#0xbc
00009a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1982   	SSD1963GPIOOUTDATA_16(0x005D);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
00009e  205d              MOVS     r0,#0x5d
0000a0  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1983   			SSD1963GPIOOUTCOM(0xbf);
0000a4  20bf              MOVS     r0,#0xbf
0000a6  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1984   	SSD1963GPIOOUTDATA_18(0xD5);	  //
0000aa  20d5              MOVS     r0,#0xd5
0000ac  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1985   	SSD1963GPIOOUTDATA_18(0x00);	//1  //
0000b0  2000              MOVS     r0,#0
0000b2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1986   	SSD1963GPIOOUTDATA_18(0x00);	//2
0000b6  2000              MOVS     r0,#0
0000b8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1987   	SSD1963GPIOOUTDATA_18(0x0F);	//3
0000bc  200f              MOVS     r0,#0xf
0000be  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1988   	SSD1963GPIOOUTDATA_18(0x03);	//4
0000c2  2003              MOVS     r0,#3
0000c4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1989   	SSD1963GPIOOUTDATA_18(0x36);	//5
0000c8  2036              MOVS     r0,#0x36
0000ca  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1990   	SSD1963GPIOOUTDATA_18(0x00);	//6
0000ce  2000              MOVS     r0,#0
0000d0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1991   	SSD1963GPIOOUTDATA_18(0x00);	//7
0000d4  2000              MOVS     r0,#0
0000d6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1992   	SSD1963GPIOOUTDATA_18(0x10);	//8
0000da  2010              MOVS     r0,#0x10
0000dc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1993   	SSD1963GPIOOUTDATA_18(0x01);	//9
0000e0  2001              MOVS     r0,#1
0000e2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1994   	SSD1963GPIOOUTDATA_18(0x00);	//10
0000e6  2000              MOVS     r0,#0
0000e8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1995   	SSD1963GPIOOUTDATA_18(0x00);	//11
0000ec  2000              MOVS     r0,#0
0000ee  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1996   	SSD1963GPIOOUTDATA_18(0x00);	//12
0000f2  2000              MOVS     r0,#0
0000f4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1997   	SSD1963GPIOOUTDATA_18(0x1A);	//13
0000f8  201a              MOVS     r0,#0x1a
0000fa  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1998   	SSD1963GPIOOUTDATA_18(0x50);	//14
0000fe  2050              MOVS     r0,#0x50
000100  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1999   	SSD1963GPIOOUTDATA_18(0x45);	//15
000104  2045              MOVS     r0,#0x45
000106  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2000   	SSD1963GPIOOUTDATA_18(0x00);	//16
00010a  2000              MOVS     r0,#0
00010c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2001   	SSD1963GPIOOUTDATA_18(0x00);	//17
000110  2000              MOVS     r0,#0
000112  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2002   	SSD1963GPIOOUTDATA_18(0x13);	//18
000116  2013              MOVS     r0,#0x13
000118  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2003   	SSD1963GPIOOUTDATA_18(0x44);	//19
00011c  2044              MOVS     r0,#0x44
00011e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2004   	SSD1963GPIOOUTDATA_18(0x39);	//20
000122  2039              MOVS     r0,#0x39
000124  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2005   	SSD1963GPIOOUTDATA_18(0x47);	//21
000128  2047              MOVS     r0,#0x47
00012a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2006   	SSD1963GPIOOUTDATA_18(0x00);	//22
00012e  2000              MOVS     r0,#0
000130  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2007   	SSD1963GPIOOUTDATA_18(0x00);	//23
000134  2000              MOVS     r0,#0
000136  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2008   	SSD1963GPIOOUTDATA_18(0x02);	//24
00013a  2002              MOVS     r0,#2
00013c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2009   	SSD1963GPIOOUTDATA_18(0x04);	//25
000140  2004              MOVS     r0,#4
000142  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2010   	SSD1963GPIOOUTDATA_18(0x00);	//26
000146  2000              MOVS     r0,#0
000148  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2011   	SSD1963GPIOOUTDATA_18(0x00);	//27
00014c  2000              MOVS     r0,#0
00014e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2012   	SSD1963GPIOOUTDATA_18(0x00);	//28
000152  2000              MOVS     r0,#0
000154  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2013   	SSD1963GPIOOUTDATA_18(0x00);	//29
000158  2000              MOVS     r0,#0
00015a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2014   	SSD1963GPIOOUTDATA_18(0x00);	//30
00015e  2000              MOVS     r0,#0
000160  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2015   	SSD1963GPIOOUTDATA_18(0x00);	//31
000164  2000              MOVS     r0,#0
000166  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2016   	SSD1963GPIOOUTDATA_18(0x00);	//32
00016a  2000              MOVS     r0,#0
00016c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2017   	SSD1963GPIOOUTDATA_18(0x03);	//33
000170  2003              MOVS     r0,#3
000172  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2018   	SSD1963GPIOOUTDATA_18(0x00);	//34
000176  2000              MOVS     r0,#0
000178  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2019   	SSD1963GPIOOUTDATA_18(0x00);	//35
00017c  2000              MOVS     r0,#0
00017e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2020   	SSD1963GPIOOUTDATA_18(0x08);	//36
000182  2008              MOVS     r0,#8
000184  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2021   	SSD1963GPIOOUTDATA_18(0x88);	//37
000188  2088              MOVS     r0,#0x88
00018a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2022   	SSD1963GPIOOUTDATA_18(0x88);	//38
00018e  2088              MOVS     r0,#0x88
000190  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2023   	SSD1963GPIOOUTDATA_18(0x37);	//39
000194  2037              MOVS     r0,#0x37
000196  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2024   	SSD1963GPIOOUTDATA_18(0x5F);	//40
00019a  205f              MOVS     r0,#0x5f
00019c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2025   	SSD1963GPIOOUTDATA_18(0x1E);	//41
0001a0  201e              MOVS     r0,#0x1e
0001a2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2026   	SSD1963GPIOOUTDATA_18(0x18);	//42
0001a6  2018              MOVS     r0,#0x18
0001a8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2027   	SSD1963GPIOOUTDATA_18(0x88);	//43
0001ac  2088              MOVS     r0,#0x88
0001ae  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2028   	SSD1963GPIOOUTDATA_18(0x88);	//44
0001b2  2088              MOVS     r0,#0x88
0001b4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2029   	SSD1963GPIOOUTDATA_18(0x85);	//45
0001b8  2085              MOVS     r0,#0x85
0001ba  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2030   	SSD1963GPIOOUTDATA_18(0x88);	//46
0001be  2088              MOVS     r0,#0x88
0001c0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2031   	SSD1963GPIOOUTDATA_18(0x88);	//47
0001c4  2088              MOVS     r0,#0x88
0001c6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2032   	SSD1963GPIOOUTDATA_18(0x40);	//48
0001ca  2040              MOVS     r0,#0x40
0001cc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2033   	SSD1963GPIOOUTDATA_18(0x2F);	//49
0001d0  202f              MOVS     r0,#0x2f
0001d2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2034   	SSD1963GPIOOUTDATA_18(0x6E);	//50
0001d6  206e              MOVS     r0,#0x6e
0001d8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2035   	SSD1963GPIOOUTDATA_18(0x48);	//51
0001dc  2048              MOVS     r0,#0x48
0001de  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2036   	SSD1963GPIOOUTDATA_18(0x88);	//52
0001e2  2088              MOVS     r0,#0x88
0001e4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2037   	SSD1963GPIOOUTDATA_18(0x88);	//53
0001e8  2088              MOVS     r0,#0x88
0001ea  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2038   	SSD1963GPIOOUTDATA_18(0x80);	//54
0001ee  2080              MOVS     r0,#0x80
0001f0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2039   	SSD1963GPIOOUTDATA_18(0x88);	//55
0001f4  2088              MOVS     r0,#0x88
0001f6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2040   	SSD1963GPIOOUTDATA_18(0x88);	//56
0001fa  2088              MOVS     r0,#0x88
0001fc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2041   	SSD1963GPIOOUTDATA_18(0x26);	//57
000200  2026              MOVS     r0,#0x26
000202  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2042   	SSD1963GPIOOUTDATA_18(0x4F);	//58
000206  204f              MOVS     r0,#0x4f
000208  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2043   	SSD1963GPIOOUTDATA_18(0x0E);	//59
00020c  200e              MOVS     r0,#0xe
00020e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2044   	SSD1963GPIOOUTDATA_18(0x08);	//60
000212  2008              MOVS     r0,#8
000214  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2045   	SSD1963GPIOOUTDATA_18(0x88);	//61
000218  2088              MOVS     r0,#0x88
00021a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2046   	SSD1963GPIOOUTDATA_18(0x88);	//62
00021e  2088              MOVS     r0,#0x88
000220  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2047   	SSD1963GPIOOUTDATA_18(0x84);	//63
000224  2084              MOVS     r0,#0x84
000226  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2048   	SSD1963GPIOOUTDATA_18(0x88);	//64
00022a  2088              MOVS     r0,#0x88
00022c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2049   	SSD1963GPIOOUTDATA_18(0x88);	//65
000230  2088              MOVS     r0,#0x88
000232  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2050   	SSD1963GPIOOUTDATA_18(0x51);	//66
000236  2051              MOVS     r0,#0x51
000238  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2051   	SSD1963GPIOOUTDATA_18(0x3F);	//67
00023c  203f              MOVS     r0,#0x3f
00023e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2052   	SSD1963GPIOOUTDATA_18(0x7E);	//68
000242  207e              MOVS     r0,#0x7e
000244  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2053   	SSD1963GPIOOUTDATA_18(0x58);	//69
000248  2058              MOVS     r0,#0x58
00024a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2054   	SSD1963GPIOOUTDATA_18(0x88);	//70
00024e  2088              MOVS     r0,#0x88
000250  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2055   	SSD1963GPIOOUTDATA_18(0x88);	//71
000254  2088              MOVS     r0,#0x88
000256  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2056   	SSD1963GPIOOUTDATA_18(0x81);	//72
00025a  2081              MOVS     r0,#0x81
00025c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2057   	SSD1963GPIOOUTDATA_18(0x00);	//73
000260  2000              MOVS     r0,#0
000262  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2058   	SSD1963GPIOOUTDATA_18(0x00);	//74
000266  2000              MOVS     r0,#0
000268  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2059   	SSD1963GPIOOUTDATA_18(0x00);	//75
00026c  2000              MOVS     r0,#0
00026e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2060   	SSD1963GPIOOUTDATA_18(0x01);	//76
000272  2001              MOVS     r0,#1
000274  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2061   	SSD1963GPIOOUTDATA_18(0x00);	//77
000278  2000              MOVS     r0,#0
00027a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2062   	SSD1963GPIOOUTDATA_18(0x00);	//78
00027e  2000              MOVS     r0,#0
000280  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2063   	SSD1963GPIOOUTDATA_18(0x00);	//79
000284  2000              MOVS     r0,#0
000286  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2064   	SSD1963GPIOOUTDATA_18(0x07);	//80
00028a  2007              MOVS     r0,#7
00028c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2065   	SSD1963GPIOOUTDATA_18(0xF8);	//81
000290  20f8              MOVS     r0,#0xf8
000292  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2066   	SSD1963GPIOOUTDATA_18(0x0F);	//82
000296  200f              MOVS     r0,#0xf
000298  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2067   	SSD1963GPIOOUTDATA_18(0xFF);	//83
00029c  20ff              MOVS     r0,#0xff
00029e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2068   	SSD1963GPIOOUTDATA_18(0xFF);	//84
0002a2  20ff              MOVS     r0,#0xff
0002a4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2069   	SSD1963GPIOOUTDATA_18(0x07);	//85
0002a8  2007              MOVS     r0,#7
0002aa  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2070   	SSD1963GPIOOUTDATA_18(0xF8);	//86
0002ae  20f8              MOVS     r0,#0xf8
0002b0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2071   	SSD1963GPIOOUTDATA_18(0x0F);	//87
0002b4  200f              MOVS     r0,#0xf
0002b6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2072   	SSD1963GPIOOUTDATA_18(0xFF);	//88
0002ba  20ff              MOVS     r0,#0xff
0002bc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2073   	SSD1963GPIOOUTDATA_18(0xFF);	//89
0002c0  20ff              MOVS     r0,#0xff
0002c2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2074   	SSD1963GPIOOUTDATA_18(0x00);	//90
0002c6  2000              MOVS     r0,#0
0002c8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2075   	SSD1963GPIOOUTDATA_18(0x00);	//91
0002cc  2000              MOVS     r0,#0
0002ce  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2076   	SSD1963GPIOOUTDATA_18(0x5A);	//92
0002d2  205a              MOVS     r0,#0x5a
0002d4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2077   	
;;;2078   	////////SET Pixel 
;;;2079   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0002d8  20bc              MOVS     r0,#0xbc
0002da  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2080   	SSD1963GPIOOUTDATA_16(0x0002);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0002de  2002              MOVS     r0,#2
0002e0  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2081   			SSD1963GPIOOUTCOM(0xbf);
0002e4  20bf              MOVS     r0,#0xbf
0002e6  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2082   	SSD1963GPIOOUTDATA_18(0x3A);	  //
0002ea  203a              MOVS     r0,#0x3a
0002ec  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2083   	SSD1963GPIOOUTDATA_18(0x70);	  //
0002f0  2070              MOVS     r0,#0x70
0002f2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2084   
;;;2085   	////////Display Direction
;;;2086   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0002f6  20bc              MOVS     r0,#0xbc
0002f8  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2087   	SSD1963GPIOOUTDATA_16(0x0002);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0002fc  2002              MOVS     r0,#2
0002fe  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2088   			SSD1963GPIOOUTCOM(0xbf);
000302  20bf              MOVS     r0,#0xbf
000304  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2089   	SSD1963GPIOOUTDATA_18(0x36);	  //
000308  2036              MOVS     r0,#0x36
00030a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2090   	SSD1963GPIOOUTDATA_18(0xc0);	  //
00030e  20c0              MOVS     r0,#0xc0
000310  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2091   	
;;;2092   	////////BGP voltage
;;;2093   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000314  20bc              MOVS     r0,#0xbc
000316  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2094   	SSD1963GPIOOUTDATA_16(0x0003);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
00031a  2003              MOVS     r0,#3
00031c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2095   			SSD1963GPIOOUTCOM(0xbf);
000320  20bf              MOVS     r0,#0xbf
000322  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2096   	SSD1963GPIOOUTDATA_18(0xB5);	  //
000326  20b5              MOVS     r0,#0xb5
000328  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2097   	SSD1963GPIOOUTDATA_18(0x12);	  //
00032c  2012              MOVS     r0,#0x12
00032e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2098   	SSD1963GPIOOUTDATA_18(0x12);
000332  2012              MOVS     r0,#0x12
000334  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2099   	
;;;2100   	/////////////Power Control
;;;2101   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000338  20bc              MOVS     r0,#0xbc
00033a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2102   	SSD1963GPIOOUTDATA_16(0x000b);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
00033e  200b              MOVS     r0,#0xb
000340  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2103   			SSD1963GPIOOUTCOM(0xbf);
000344  20bf              MOVS     r0,#0xbf
000346  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2104   	SSD1963GPIOOUTDATA_18(0xB1);	  //
00034a  20b1              MOVS     r0,#0xb1
00034c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2105   	SSD1963GPIOOUTDATA_18(0x12);	  //
000350  2012              MOVS     r0,#0x12
000352  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2106   	SSD1963GPIOOUTDATA_18(0x83);
000356  2083              MOVS     r0,#0x83
000358  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2107   	SSD1963GPIOOUTDATA_18(0x77);
00035c  2077              MOVS     r0,#0x77
00035e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2108   	SSD1963GPIOOUTDATA_18(0x00);
000362  2000              MOVS     r0,#0
000364  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2109   	SSD1963GPIOOUTDATA_18(0x12);
000368  2012              MOVS     r0,#0x12
00036a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2110   	SSD1963GPIOOUTDATA_18(0x12);
00036e  2012              MOVS     r0,#0x12
000370  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2111   	SSD1963GPIOOUTDATA_18(0x1a);	//1E
000374  201a              MOVS     r0,#0x1a
000376  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2112   	SSD1963GPIOOUTDATA_18(0x1a);	//1E
00037a  201a              MOVS     r0,#0x1a
00037c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2113   	SSD1963GPIOOUTDATA_18(0x0c);
000380  200c              MOVS     r0,#0xc
000382  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2114   	SSD1963GPIOOUTDATA_18(0x1a);
000386  201a              MOVS     r0,#0x1a
000388  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2115   	
;;;2116   	////////RGB Setting
;;;2117   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00038c  20bc              MOVS     r0,#0xbc
00038e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2118   	SSD1963GPIOOUTDATA_16(0x0005);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000392  2005              MOVS     r0,#5
000394  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2119   			SSD1963GPIOOUTCOM(0xbf);
000398  20bf              MOVS     r0,#0xbf
00039a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2120   	SSD1963GPIOOUTDATA_18(0xB3);	  //
00039e  20b3              MOVS     r0,#0xb3
0003a0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2121   	SSD1963GPIOOUTDATA_18(0x83);	  //
0003a4  2083              MOVS     r0,#0x83
0003a6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2122   	SSD1963GPIOOUTDATA_18(0x00);
0003aa  2000              MOVS     r0,#0
0003ac  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2123   	SSD1963GPIOOUTDATA_18(0x3a);
0003b0  203a              MOVS     r0,#0x3a
0003b2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2124   	SSD1963GPIOOUTDATA_18(0x17);
0003b6  2017              MOVS     r0,#0x17
0003b8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2125   	
;;;2126   	////////Display Inversion Setting
;;;2127   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0003bc  20bc              MOVS     r0,#0xbc
0003be  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2128   	SSD1963GPIOOUTDATA_16(0x0002);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0003c2  2002              MOVS     r0,#2
0003c4  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2129   			SSD1963GPIOOUTCOM(0xbf);
0003c8  20bf              MOVS     r0,#0xbf
0003ca  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2130   	SSD1963GPIOOUTDATA_18(0xB4);	  //
0003ce  20b4              MOVS     r0,#0xb4
0003d0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2131   	SSD1963GPIOOUTDATA_18(0x00);	  // 01 DOT INVERSION     00 COLUMN INVERSION
0003d4  2000              MOVS     r0,#0
0003d6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2132   
;;;2133   	////////SET VCOM
;;;2134   //			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
;;;2135   //	SSD1963GPIOOUTDATA_16(0x0004);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
;;;2136   //			SSD1963GPIOOUTCOM(0xbf);
;;;2137   //	SSD1963GPIOOUTDATA_18(0xB6);	  //
;;;2138   //	SSD1963GPIOOUTDATA_18(0xbA);	//BD					//////because have auto otp function....so do not down this code..
;;;2139   //	SSD1963GPIOOUTDATA_18(0xbA);	//BC
;;;2140   //	SSD1963GPIOOUTDATA_18(0x00);
;;;2141   	
;;;2142   	////////SET EQ
;;;2143   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0003da  20bc              MOVS     r0,#0xbc
0003dc  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2144   	SSD1963GPIOOUTDATA_16(0x0005);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0003e0  2005              MOVS     r0,#5
0003e2  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2145   			SSD1963GPIOOUTCOM(0xbf);
0003e6  20bf              MOVS     r0,#0xbf
0003e8  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2146   	SSD1963GPIOOUTDATA_18(0xe3);	  //
0003ec  20e3              MOVS     r0,#0xe3
0003ee  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2147   	SSD1963GPIOOUTDATA_18(0x0f);
0003f2  200f              MOVS     r0,#0xf
0003f4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2148   	SSD1963GPIOOUTDATA_18(0x0f);
0003f8  200f              MOVS     r0,#0xf
0003fa  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2149   	SSD1963GPIOOUTDATA_18(0x0f);
0003fe  200f              MOVS     r0,#0xf
000400  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2150   	SSD1963GPIOOUTDATA_18(0x0f);
000404  200f              MOVS     r0,#0xf
000406  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2151   	
;;;2152   	////////SET SOURCE option
;;;2153   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00040a  20bc              MOVS     r0,#0xbc
00040c  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2154   	SSD1963GPIOOUTDATA_16(0x0007);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000410  2007              MOVS     r0,#7
000412  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2155   			SSD1963GPIOOUTCOM(0xbf);
000416  20bf              MOVS     r0,#0xbf
000418  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2156   	SSD1963GPIOOUTDATA_18(0xc0);	  //
00041c  20c0              MOVS     r0,#0xc0
00041e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2157   	SSD1963GPIOOUTDATA_18(0x73);
000422  2073              MOVS     r0,#0x73
000424  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2158   	SSD1963GPIOOUTDATA_18(0x50);
000428  2050              MOVS     r0,#0x50
00042a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2159   	SSD1963GPIOOUTDATA_18(0x00);
00042e  2000              MOVS     r0,#0
000430  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2160   	SSD1963GPIOOUTDATA_18(0x34);
000434  2034              MOVS     r0,#0x34
000436  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2161   	SSD1963GPIOOUTDATA_18(0xc4);
00043a  20c4              MOVS     r0,#0xc4
00043c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2162   	SSD1963GPIOOUTDATA_18(0x00);
000440  2000              MOVS     r0,#0
000442  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2163   	
;;;2164   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000446  20bc              MOVS     r0,#0xbc
000448  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2165   	SSD1963GPIOOUTDATA_16(0x007F);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
00044c  207f              MOVS     r0,#0x7f
00044e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2166   			SSD1963GPIOOUTCOM(0xbf);
000452  20bf              MOVS     r0,#0xbf
000454  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2167   	SSD1963GPIOOUTDATA_18(0xc1);	  //
000458  20c1              MOVS     r0,#0xc1
00045a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2168   	SSD1963GPIOOUTDATA_18(0x01);	//1
00045e  2001              MOVS     r0,#1
000460  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2169   	SSD1963GPIOOUTDATA_18(0x00);	//2
000464  2000              MOVS     r0,#0
000466  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2170   	SSD1963GPIOOUTDATA_18(0x0a);	//3
00046a  200a              MOVS     r0,#0xa
00046c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2171   	SSD1963GPIOOUTDATA_18(0x15);	//4
000470  2015              MOVS     r0,#0x15
000472  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2172   	SSD1963GPIOOUTDATA_18(0x1f);	//5
000476  201f              MOVS     r0,#0x1f
000478  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2173   	SSD1963GPIOOUTDATA_18(0x2a);	//6
00047c  202a              MOVS     r0,#0x2a
00047e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2174   	SSD1963GPIOOUTDATA_18(0x35);	//7
000482  2035              MOVS     r0,#0x35
000484  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2175   	SSD1963GPIOOUTDATA_18(0x42);	//8
000488  2042              MOVS     r0,#0x42
00048a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2176   	SSD1963GPIOOUTDATA_18(0x4c);	//9
00048e  204c              MOVS     r0,#0x4c
000490  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2177   	SSD1963GPIOOUTDATA_18(0x57);	//10
000494  2057              MOVS     r0,#0x57
000496  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2178   	SSD1963GPIOOUTDATA_18(0x60);	//11
00049a  2060              MOVS     r0,#0x60
00049c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2179   	SSD1963GPIOOUTDATA_18(0x6a);	//12
0004a0  206a              MOVS     r0,#0x6a
0004a2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2180   	SSD1963GPIOOUTDATA_18(0x73);	//13
0004a6  2073              MOVS     r0,#0x73
0004a8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2181   	SSD1963GPIOOUTDATA_18(0x7b);	//14
0004ac  207b              MOVS     r0,#0x7b
0004ae  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2182   	SSD1963GPIOOUTDATA_18(0x83);	//15
0004b2  2083              MOVS     r0,#0x83
0004b4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2183   	SSD1963GPIOOUTDATA_18(0x8a);	//16
0004b8  208a              MOVS     r0,#0x8a
0004ba  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2184   	SSD1963GPIOOUTDATA_18(0x91);	//17
0004be  2091              MOVS     r0,#0x91
0004c0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2185   	SSD1963GPIOOUTDATA_18(0x99);	//18
0004c4  2099              MOVS     r0,#0x99
0004c6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2186   	SSD1963GPIOOUTDATA_18(0xa0);	//19
0004ca  20a0              MOVS     r0,#0xa0
0004cc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2187   	SSD1963GPIOOUTDATA_18(0xa7);	//20
0004d0  20a7              MOVS     r0,#0xa7
0004d2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2188   	SSD1963GPIOOUTDATA_18(0xad);	//21
0004d6  20ad              MOVS     r0,#0xad
0004d8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2189   	SSD1963GPIOOUTDATA_18(0xB4);	//22
0004dc  20b4              MOVS     r0,#0xb4
0004de  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2190   	SSD1963GPIOOUTDATA_18(0xBA);	//23
0004e2  20ba              MOVS     r0,#0xba
0004e4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2191   	SSD1963GPIOOUTDATA_18(0xC0);	//24
0004e8  20c0              MOVS     r0,#0xc0
0004ea  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2192   	SSD1963GPIOOUTDATA_18(0xC6);	//25
0004ee  20c6              MOVS     r0,#0xc6
0004f0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2193   	SSD1963GPIOOUTDATA_18(0xCC);	//26
0004f4  20cc              MOVS     r0,#0xcc
0004f6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2194   	SSD1963GPIOOUTDATA_18(0xD2);	//27
0004fa  20d2              MOVS     r0,#0xd2
0004fc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2195   	SSD1963GPIOOUTDATA_18(0xD8);	//28
000500  20d8              MOVS     r0,#0xd8
000502  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2196   	SSD1963GPIOOUTDATA_18(0xDF);	//29
000506  20df              MOVS     r0,#0xdf
000508  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2197   	SSD1963GPIOOUTDATA_18(0xE6);	//30
00050c  20e6              MOVS     r0,#0xe6
00050e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2198   	SSD1963GPIOOUTDATA_18(0xEC);	//31
000512  20ec              MOVS     r0,#0xec
000514  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2199   	SSD1963GPIOOUTDATA_18(0xF3);	//32
000518  20f3              MOVS     r0,#0xf3
00051a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2200   	SSD1963GPIOOUTDATA_18(0xF8);	//33
00051e  20f8              MOVS     r0,#0xf8
000520  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2201   	SSD1963GPIOOUTDATA_18(0xFF);	//34
000524  20ff              MOVS     r0,#0xff
000526  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2202   	SSD1963GPIOOUTDATA_18(0x22);	//35
00052a  2022              MOVS     r0,#0x22
00052c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2203   	SSD1963GPIOOUTDATA_18(0xE0);	//36
000530  20e0              MOVS     r0,#0xe0
000532  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2204   	SSD1963GPIOOUTDATA_18(0x30);	//37
000536  2030              MOVS     r0,#0x30
000538  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2205   	SSD1963GPIOOUTDATA_18(0x4B);	//38
00053c  204b              MOVS     r0,#0x4b
00053e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2206   	SSD1963GPIOOUTDATA_18(0x43);	//39
000542  2043              MOVS     r0,#0x43
000544  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2207   	SSD1963GPIOOUTDATA_18(0x01);	//40
000548  2001              MOVS     r0,#1
00054a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2208   	SSD1963GPIOOUTDATA_18(0xAF);	//41
00054e  20af              MOVS     r0,#0xaf
000550  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2209   	SSD1963GPIOOUTDATA_18(0x0A);	//42
000554  200a              MOVS     r0,#0xa
000556  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2210   	SSD1963GPIOOUTDATA_18(0xC0);	//43
00055a  20c0              MOVS     r0,#0xc0
00055c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2211   	SSD1963GPIOOUTDATA_18(0x00);	//44
000560  2000              MOVS     r0,#0
000562  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2212   	SSD1963GPIOOUTDATA_18(0x09);	//45
000566  2009              MOVS     r0,#9
000568  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2213   	SSD1963GPIOOUTDATA_18(0x13);	//46
00056c  2013              MOVS     r0,#0x13
00056e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2214   	SSD1963GPIOOUTDATA_18(0x1C);	//47
000572  201c              MOVS     r0,#0x1c
000574  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2215   	SSD1963GPIOOUTDATA_18(0x26);	//48
000578  2026              MOVS     r0,#0x26
00057a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2216   	SSD1963GPIOOUTDATA_18(0x2F);	//49
00057e  202f              MOVS     r0,#0x2f
000580  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2217   	SSD1963GPIOOUTDATA_18(0x37);	//50
000584  2037              MOVS     r0,#0x37
000586  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2218   	SSD1963GPIOOUTDATA_18(0x41);	//51
00058a  2041              MOVS     r0,#0x41
00058c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2219   	SSD1963GPIOOUTDATA_18(0x49);	//52
000590  2049              MOVS     r0,#0x49
000592  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2220   	SSD1963GPIOOUTDATA_18(0x52);	//53
000596  2052              MOVS     r0,#0x52
000598  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2221   	SSD1963GPIOOUTDATA_18(0x5B);	//54
00059c  205b              MOVS     r0,#0x5b
00059e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2222   	SSD1963GPIOOUTDATA_18(0x64);	//55
0005a2  2064              MOVS     r0,#0x64
0005a4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2223   	SSD1963GPIOOUTDATA_18(0x6C);	//56
0005a8  206c              MOVS     r0,#0x6c
0005aa  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2224   	SSD1963GPIOOUTDATA_18(0x74);	//57
0005ae  2074              MOVS     r0,#0x74
0005b0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2225   	SSD1963GPIOOUTDATA_18(0x7C);	//58
0005b4  207c              MOVS     r0,#0x7c
0005b6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2226   	SSD1963GPIOOUTDATA_18(0x84);	//59
0005ba  2084              MOVS     r0,#0x84
0005bc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2227   	SSD1963GPIOOUTDATA_18(0x8B);	//60
0005c0  208b              MOVS     r0,#0x8b
0005c2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2228   	SSD1963GPIOOUTDATA_18(0x92);	//61
0005c6  2092              MOVS     r0,#0x92
0005c8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2229   	SSD1963GPIOOUTDATA_18(0x9B);	//62
0005cc  209b              MOVS     r0,#0x9b
0005ce  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2230   	SSD1963GPIOOUTDATA_18(0xA2);	//63
0005d2  20a2              MOVS     r0,#0xa2
0005d4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2231   	SSD1963GPIOOUTDATA_18(0xA9);	//64
0005d8  20a9              MOVS     r0,#0xa9
0005da  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2232   	SSD1963GPIOOUTDATA_18(0xB0);	//65
0005de  20b0              MOVS     r0,#0xb0
0005e0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2233   	SSD1963GPIOOUTDATA_18(0xB7);	//66
0005e4  20b7              MOVS     r0,#0xb7
0005e6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2234   	SSD1963GPIOOUTDATA_18(0xBD);	//67
0005ea  20bd              MOVS     r0,#0xbd
0005ec  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2235   	SSD1963GPIOOUTDATA_18(0xC3);	//68
0005f0  20c3              MOVS     r0,#0xc3
0005f2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2236   	SSD1963GPIOOUTDATA_18(0xCA);	//69
0005f6  20ca              MOVS     r0,#0xca
0005f8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2237   	SSD1963GPIOOUTDATA_18(0xD1);	//70
0005fc  20d1              MOVS     r0,#0xd1
0005fe  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2238   	SSD1963GPIOOUTDATA_18(0xD8);	//71
000602  20d8              MOVS     r0,#0xd8
000604  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2239   	SSD1963GPIOOUTDATA_18(0xE0);	//72
000608  20e0              MOVS     r0,#0xe0
00060a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2240   	SSD1963GPIOOUTDATA_18(0xE8);	//73
00060e  20e8              MOVS     r0,#0xe8
000610  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2241   	SSD1963GPIOOUTDATA_18(0xEF);	//74
000614  20ef              MOVS     r0,#0xef
000616  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2242   	SSD1963GPIOOUTDATA_18(0xF8);	//75
00061a  20f8              MOVS     r0,#0xf8
00061c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2243   	SSD1963GPIOOUTDATA_18(0xFF);	//76
000620  20ff              MOVS     r0,#0xff
000622  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2244   	SSD1963GPIOOUTDATA_18(0x22);	//77
000626  2022              MOVS     r0,#0x22
000628  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2245   	SSD1963GPIOOUTDATA_18(0x58);	//78
00062c  2058              MOVS     r0,#0x58
00062e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2246   	SSD1963GPIOOUTDATA_18(0xBD);	//79
000632  20bd              MOVS     r0,#0xbd
000634  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2247   	SSD1963GPIOOUTDATA_18(0xF4);	//80
000638  20f4              MOVS     r0,#0xf4
00063a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2248   	SSD1963GPIOOUTDATA_18(0x5A);	//81
00063e  205a              MOVS     r0,#0x5a
000640  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2249   	SSD1963GPIOOUTDATA_18(0xA5);	//82
000644  20a5              MOVS     r0,#0xa5
000646  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2250   	SSD1963GPIOOUTDATA_18(0xFA);	//83
00064a  20fa              MOVS     r0,#0xfa
00064c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2251   	SSD1963GPIOOUTDATA_18(0x4C);	//84
000650  204c              MOVS     r0,#0x4c
000652  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2252   	SSD1963GPIOOUTDATA_18(0xC0);	//85
000656  20c0              MOVS     r0,#0xc0
000658  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2253   	SSD1963GPIOOUTDATA_18(0x00);	//86
00065c  2000              MOVS     r0,#0
00065e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2254   	SSD1963GPIOOUTDATA_18(0x07);	//87
000662  2007              MOVS     r0,#7
000664  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2255   	SSD1963GPIOOUTDATA_18(0x0F);	//88
000668  200f              MOVS     r0,#0xf
00066a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2256   	SSD1963GPIOOUTDATA_18(0x16);	//89
00066e  2016              MOVS     r0,#0x16
000670  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2257   	SSD1963GPIOOUTDATA_18(0x1E);	//90
000674  201e              MOVS     r0,#0x1e
000676  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2258   	SSD1963GPIOOUTDATA_18(0x25);	//91
00067a  2025              MOVS     r0,#0x25
00067c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2259   	SSD1963GPIOOUTDATA_18(0x2D);	//92
000680  202d              MOVS     r0,#0x2d
000682  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2260   	SSD1963GPIOOUTDATA_18(0x34);	//93
000686  2034              MOVS     r0,#0x34
000688  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2261   	SSD1963GPIOOUTDATA_18(0x3C);	//94
00068c  203c              MOVS     r0,#0x3c
00068e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2262   	SSD1963GPIOOUTDATA_18(0x45);	//95
000692  2045              MOVS     r0,#0x45
000694  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2263   	SSD1963GPIOOUTDATA_18(0x4E);	//96
000698  204e              MOVS     r0,#0x4e
00069a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2264   	SSD1963GPIOOUTDATA_18(0x57);	//97
00069e  2057              MOVS     r0,#0x57
0006a0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2265   	SSD1963GPIOOUTDATA_18(0x5F);	//98
0006a4  205f              MOVS     r0,#0x5f
0006a6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2266   	SSD1963GPIOOUTDATA_18(0x68);	//99
0006aa  2068              MOVS     r0,#0x68
0006ac  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2267   	SSD1963GPIOOUTDATA_18(0x70);	//100
0006b0  2070              MOVS     r0,#0x70
0006b2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2268   	SSD1963GPIOOUTDATA_18(0x78);	//101
0006b6  2078              MOVS     r0,#0x78
0006b8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2269   	SSD1963GPIOOUTDATA_18(0x80);	//102
0006bc  2080              MOVS     r0,#0x80
0006be  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2270   	SSD1963GPIOOUTDATA_18(0x87);	//103
0006c2  2087              MOVS     r0,#0x87
0006c4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2271   	SSD1963GPIOOUTDATA_18(0x8E);	//104
0006c8  208e              MOVS     r0,#0x8e
0006ca  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2272   	SSD1963GPIOOUTDATA_18(0x96);	//105
0006ce  2096              MOVS     r0,#0x96
0006d0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2273   	SSD1963GPIOOUTDATA_18(0x9D);	//106
0006d4  209d              MOVS     r0,#0x9d
0006d6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2274   	SSD1963GPIOOUTDATA_18(0xA4);	//107
0006da  20a4              MOVS     r0,#0xa4
0006dc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2275   	SSD1963GPIOOUTDATA_18(0xAB);	//108
0006e0  20ab              MOVS     r0,#0xab
0006e2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2276   	SSD1963GPIOOUTDATA_18(0xB3);	//109
0006e6  20b3              MOVS     r0,#0xb3
0006e8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2277   	SSD1963GPIOOUTDATA_18(0xB9);	//110
0006ec  20b9              MOVS     r0,#0xb9
0006ee  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2278   	SSD1963GPIOOUTDATA_18(0xC0);	//111
0006f2  20c0              MOVS     r0,#0xc0
0006f4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2279   	SSD1963GPIOOUTDATA_18(0xC8);	//112
0006f8  20c8              MOVS     r0,#0xc8
0006fa  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2280   	SSD1963GPIOOUTDATA_18(0xCF);	//113
0006fe  20cf              MOVS     r0,#0xcf
000700  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2281   	SSD1963GPIOOUTDATA_18(0xD7);	//114
000704  20d7              MOVS     r0,#0xd7
000706  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2282   	SSD1963GPIOOUTDATA_18(0xE1);	//115
00070a  20e1              MOVS     r0,#0xe1
00070c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2283   	SSD1963GPIOOUTDATA_18(0xE9);	//116
000710  20e9              MOVS     r0,#0xe9
000712  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2284   	SSD1963GPIOOUTDATA_18(0xF4);	//117
000716  20f4              MOVS     r0,#0xf4
000718  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2285   	SSD1963GPIOOUTDATA_18(0xFF);	//118
00071c  20ff              MOVS     r0,#0xff
00071e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2286   	SSD1963GPIOOUTDATA_18(0x22);	//119
000722  2022              MOVS     r0,#0x22
000724  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2287   	SSD1963GPIOOUTDATA_18(0x22);	//120
000728  2022              MOVS     r0,#0x22
00072a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2288   	SSD1963GPIOOUTDATA_18(0x17);	//121
00072e  2017              MOVS     r0,#0x17
000730  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2289   	SSD1963GPIOOUTDATA_18(0xC9);	//122
000734  20c9              MOVS     r0,#0xc9
000736  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2290   	SSD1963GPIOOUTDATA_18(0x1C);	//123
00073a  201c              MOVS     r0,#0x1c
00073c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2291   	SSD1963GPIOOUTDATA_18(0xAD);	//124
000740  20ad              MOVS     r0,#0xad
000742  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2292   	SSD1963GPIOOUTDATA_18(0xF7);	//125
000746  20f7              MOVS     r0,#0xf7
000748  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2293   	SSD1963GPIOOUTDATA_18(0xC9);	//126
00074c  20c9              MOVS     r0,#0xc9
00074e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2294   	
;;;2295   	////////SET SOURCE 
;;;2296   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
000752  20bc              MOVS     r0,#0xbc
000754  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2297   	SSD1963GPIOOUTDATA_16(0x0004);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000758  2004              MOVS     r0,#4
00075a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2298   			SSD1963GPIOOUTCOM(0xbf);
00075e  20bf              MOVS     r0,#0xbf
000760  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2299   	SSD1963GPIOOUTDATA_18(0xc6);	  //
000764  20c6              MOVS     r0,#0xc6
000766  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2300   	SSD1963GPIOOUTDATA_18(0x41);
00076a  2041              MOVS     r0,#0x41
00076c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2301   	SSD1963GPIOOUTDATA_18(0xFF);
000770  20ff              MOVS     r0,#0xff
000772  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2302   	SSD1963GPIOOUTDATA_18(0x7D);
000776  207d              MOVS     r0,#0x7d
000778  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2303   
;;;2304   	////////SET PANEL
;;;2305   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00077c  20bc              MOVS     r0,#0xbc
00077e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2306   	SSD1963GPIOOUTDATA_16(0x0002);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
000782  2002              MOVS     r0,#2
000784  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2307   			SSD1963GPIOOUTCOM(0xbf);
000788  20bf              MOVS     r0,#0xbf
00078a  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2308   	SSD1963GPIOOUTDATA_18(0xcC);	  //
00078e  20cc              MOVS     r0,#0xcc
000790  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2309   	SSD1963GPIOOUTDATA_18(0x00);	 //00
000794  2000              MOVS     r0,#0
000796  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2310   
;;;2311   	////////SET MESSI
;;;2312   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
00079a  20bc              MOVS     r0,#0xbc
00079c  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2313   	SSD1963GPIOOUTDATA_16(0x0002);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0007a0  2002              MOVS     r0,#2
0007a2  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2314   			SSD1963GPIOOUTCOM(0xbf);
0007a6  20bf              MOVS     r0,#0xbf
0007a8  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2315   	SSD1963GPIOOUTDATA_18(0xEA);	  //
0007ac  20ea              MOVS     r0,#0xea
0007ae  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2316   	SSD1963GPIOOUTDATA_18(0x7A);
0007b2  207a              MOVS     r0,#0x7a
0007b4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2317   	
;;;2318   	////////Gamma Setting
;;;2319   	SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0007b8  20bc              MOVS     r0,#0xbc
0007ba  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2320   	SSD1963GPIOOUTDATA_16(0x0024);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0007be  2024              MOVS     r0,#0x24
0007c0  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2321   			SSD1963GPIOOUTCOM(0xbf);
0007c4  20bf              MOVS     r0,#0xbf
0007c6  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2322   	SSD1963GPIOOUTDATA_18(0xE0);	  //
0007ca  20e0              MOVS     r0,#0xe0
0007cc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2323   	SSD1963GPIOOUTDATA_18(0x00);	//1
0007d0  2000              MOVS     r0,#0
0007d2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2324   	SSD1963GPIOOUTDATA_18(0x10);	//2
0007d6  2010              MOVS     r0,#0x10
0007d8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2325   	SSD1963GPIOOUTDATA_18(0x18);	//3
0007dc  2018              MOVS     r0,#0x18
0007de  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2326   	SSD1963GPIOOUTDATA_18(0x0E);	//4
0007e2  200e              MOVS     r0,#0xe
0007e4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2327   	SSD1963GPIOOUTDATA_18(0x10);	//5
0007e8  2010              MOVS     r0,#0x10
0007ea  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2328   	SSD1963GPIOOUTDATA_18(0x3C);	//6
0007ee  203c              MOVS     r0,#0x3c
0007f0  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2329   	SSD1963GPIOOUTDATA_18(0x26);	//7
0007f4  2026              MOVS     r0,#0x26
0007f6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2330   	SSD1963GPIOOUTDATA_18(0x32);	//8
0007fa  2032              MOVS     r0,#0x32
0007fc  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2331   	SSD1963GPIOOUTDATA_18(0x07);	//9
000800  2007              MOVS     r0,#7
000802  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2332   	SSD1963GPIOOUTDATA_18(0x0C);	//10
000806  200c              MOVS     r0,#0xc
000808  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2333   	SSD1963GPIOOUTDATA_18(0x10);	//11
00080c  2010              MOVS     r0,#0x10
00080e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2334   	SSD1963GPIOOUTDATA_18(0x13);	//12
000812  2013              MOVS     r0,#0x13
000814  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2335   	SSD1963GPIOOUTDATA_18(0x16);	//13
000818  2016              MOVS     r0,#0x16
00081a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2336   	SSD1963GPIOOUTDATA_18(0x14);	//14
00081e  2014              MOVS     r0,#0x14
000820  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2337   	SSD1963GPIOOUTDATA_18(0x15);	//15
000824  2015              MOVS     r0,#0x15
000826  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2338   	SSD1963GPIOOUTDATA_18(0x13);	//16
00082a  2013              MOVS     r0,#0x13
00082c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2339   	SSD1963GPIOOUTDATA_18(0x15);	//17
000830  2015              MOVS     r0,#0x15
000832  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2340   	SSD1963GPIOOUTDATA_18(0x00);	//18
000836  2000              MOVS     r0,#0
000838  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2341   	SSD1963GPIOOUTDATA_18(0x10);	//19
00083c  2010              MOVS     r0,#0x10
00083e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2342   	SSD1963GPIOOUTDATA_18(0x18);	//20
000842  2018              MOVS     r0,#0x18
000844  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2343   	SSD1963GPIOOUTDATA_18(0x0E);	//21
000848  200e              MOVS     r0,#0xe
00084a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2344   	SSD1963GPIOOUTDATA_18(0x10);	//22
00084e  2010              MOVS     r0,#0x10
000850  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2345   	SSD1963GPIOOUTDATA_18(0x3C);	//23
000854  203c              MOVS     r0,#0x3c
000856  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2346   	SSD1963GPIOOUTDATA_18(0x26);	//24
00085a  2026              MOVS     r0,#0x26
00085c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2347   	SSD1963GPIOOUTDATA_18(0x32);	//25
000860  2032              MOVS     r0,#0x32
000862  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2348   	SSD1963GPIOOUTDATA_18(0x07);	//26
000866  2007              MOVS     r0,#7
000868  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2349   	SSD1963GPIOOUTDATA_18(0x0C);	//27
00086c  200c              MOVS     r0,#0xc
00086e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2350   	SSD1963GPIOOUTDATA_18(0x10);	//28
000872  2010              MOVS     r0,#0x10
000874  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2351   	SSD1963GPIOOUTDATA_18(0x13);	//29
000878  2013              MOVS     r0,#0x13
00087a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2352   	SSD1963GPIOOUTDATA_18(0x16);	//30
00087e  2016              MOVS     r0,#0x16
000880  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2353   	SSD1963GPIOOUTDATA_18(0x14);	//31
000884  2014              MOVS     r0,#0x14
000886  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2354   	SSD1963GPIOOUTDATA_18(0x15);	//32
00088a  2015              MOVS     r0,#0x15
00088c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2355   	SSD1963GPIOOUTDATA_18(0x13);	//33
000890  2013              MOVS     r0,#0x13
000892  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2356   	SSD1963GPIOOUTDATA_18(0x15);	//34
000896  2015              MOVS     r0,#0x15
000898  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2357   	SSD1963GPIOOUTDATA_18(0x01);	//35
00089c  2001              MOVS     r0,#1
00089e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2358   
;;;2359   	////////sleep out
;;;2360   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0008a2  20bc              MOVS     r0,#0xbc
0008a4  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2361   	SSD1963GPIOOUTDATA_16(0x0001);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0008a8  2001              MOVS     r0,#1
0008aa  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2362   			SSD1963GPIOOUTCOM(0xbf);
0008ae  20bf              MOVS     r0,#0xbf
0008b0  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2363   	SSD1963GPIOOUTDATA_18(0x11);	  //
0008b4  2011              MOVS     r0,#0x11
0008b6  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2364   	Delay(20); 			  ////delay 200ms
0008ba  2014              MOVS     r0,#0x14
0008bc  f7fffffe          BL       Delay
;;;2365   	
;;;2366   	////////display on
;;;2367   			SSD1963GPIOOUTCOM(0xBC);		                  // Packet Size Control Register
0008c0  20bc              MOVS     r0,#0xbc
0008c2  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2368   	SSD1963GPIOOUTDATA_16(0x0001);						  //½ÓÏÂÀ´Ð´ÈëµÄÊý¾Ý
0008c6  2001              MOVS     r0,#1
0008c8  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2369   			SSD1963GPIOOUTCOM(0xbf);
0008cc  20bf              MOVS     r0,#0xbf
0008ce  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2370   	SSD1963GPIOOUTDATA_18(0x29);	  //
0008d2  2029              MOVS     r0,#0x29
0008d4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2371   	Delay(5); 			   ///delay 50ms
0008d8  e8bd4010          POP      {r4,lr}
0008dc  2005              MOVS     r0,#5
0008de  f7ffbffe          B.W      Delay
;;;2372   }
;;;2373   
                          ENDP


                          AREA ||i.SSD2825_CLAN043LL_SC7789_A||, CODE, READONLY, ALIGN=2

                  SSD2825_CLAN043LL_SC7789_A PROC
;;;1897   
;;;1898   void SSD2825_CLAN043LL_SC7789_A(void)
000000  b510              PUSH     {r4,lr}
;;;1899   {
;;;1900   	///////FOR CLAN043LL USE
;;;1901   /*//////#password(Enable user command) 
;;;1902   			SSD1963GPIOOUTCOM(0xBC);		               
;;;1903   	SSD1963GPIOOUTDATA_16(0x0004);						 
;;;1904   			SSD1963GPIOOUTCOM(0xbf);
;;;1905   	SSD1963GPIOOUTDATA_18(0xB9);
;;;1906   	SSD1963GPIOOUTDATA_18(0xf1);	  //
;;;1907   	SSD1963GPIOOUTDATA_18(0x08);	  //
;;;1908   	SSD1963GPIOOUTDATA_18(0x00);
;;;1909   	*/
;;;1910   	
;;;1911   	SEND_MIPI_DATA(4,SC7789_A_B9);
000002  4935              LDR      r1,|L50.216|
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       SEND_MIPI_DATA
;;;1912   	SEND_MIPI_DATA(2,SC7789_A_BC);
00000a  4934              LDR      r1,|L50.220|
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       SEND_MIPI_DATA
;;;1913   	SEND_MIPI_DATA(19,SC7789_A_BA);
000012  4933              LDR      r1,|L50.224|
000014  2013              MOVS     r0,#0x13
000016  f7fffffe          BL       SEND_MIPI_DATA
;;;1914   	SEND_MIPI_DATA(4,SC7789_A_C6);
00001a  4932              LDR      r1,|L50.228|
00001c  2004              MOVS     r0,#4
00001e  f7fffffe          BL       SEND_MIPI_DATA
;;;1915   	SEND_MIPI_DATA(2,SC7789_A_CC_B);
000022  4931              LDR      r1,|L50.232|
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       SEND_MIPI_DATA
;;;1916   //	SEND_MIPI_DATA(2,SC7789_A_CC_F);
;;;1917   	SEND_MIPI_DATA(2,SC7789_A_B2);
00002a  4930              LDR      r1,|L50.236|
00002c  2002              MOVS     r0,#2
00002e  f7fffffe          BL       SEND_MIPI_DATA
;;;1918   	SEND_MIPI_DATA(2,SC7789_A_B4);
000032  492f              LDR      r1,|L50.240|
000034  2002              MOVS     r0,#2
000036  f7fffffe          BL       SEND_MIPI_DATA
;;;1919   	SEND_MIPI_DATA(9,SC7789_A_B3);
00003a  492e              LDR      r1,|L50.244|
00003c  2009              MOVS     r0,#9
00003e  f7fffffe          BL       SEND_MIPI_DATA
;;;1920   	SEND_MIPI_DATA(52,SC7789_A_E9);
000042  492d              LDR      r1,|L50.248|
000044  2034              MOVS     r0,#0x34
000046  f7fffffe          BL       SEND_MIPI_DATA
;;;1921   	SEND_MIPI_DATA(37,SC7789_A_EA);
00004a  492c              LDR      r1,|L50.252|
00004c  2025              MOVS     r0,#0x25
00004e  f7fffffe          BL       SEND_MIPI_DATA
;;;1922   	SEND_MIPI_DATA(8,SC7789_A_B1);
000052  492b              LDR      r1,|L50.256|
000054  2008              MOVS     r0,#8
000056  f7fffffe          BL       SEND_MIPI_DATA
;;;1923   	SEND_MIPI_DATA(8,SC7789_A_E3);
00005a  492a              LDR      r1,|L50.260|
00005c  2008              MOVS     r0,#8
00005e  f7fffffe          BL       SEND_MIPI_DATA
;;;1924   	SEND_MIPI_DATA(3,SC7789_A_B8);
000062  4929              LDR      r1,|L50.264|
000064  2003              MOVS     r0,#3
000066  f7fffffe          BL       SEND_MIPI_DATA
;;;1925   	SEND_MIPI_DATA(3,SC7789_A_B5);
00006a  4928              LDR      r1,|L50.268|
00006c  2003              MOVS     r0,#3
00006e  f7fffffe          BL       SEND_MIPI_DATA
;;;1926   	SEND_MIPI_DATA(6,SC7789_A_C0);
000072  4927              LDR      r1,|L50.272|
000074  2006              MOVS     r0,#6
000076  f7fffffe          BL       SEND_MIPI_DATA
;;;1927   	SEND_MIPI_DATA(35,SC7789_A_E0);
00007a  4926              LDR      r1,|L50.276|
00007c  2023              MOVS     r0,#0x23
00007e  f7fffffe          BL       SEND_MIPI_DATA
;;;1928   	SEND_MIPI_DATA(128,SC7789_A_C1);
000082  4925              LDR      r1,|L50.280|
000084  2080              MOVS     r0,#0x80
000086  f7fffffe          BL       SEND_MIPI_DATA
;;;1929   
;;;1930   	
;;;1931   	
;;;1932   //////#setting sleep out	
;;;1933   	SSD1963GPIOOUTCOM(0xBC);		               
00008a  20bc              MOVS     r0,#0xbc
00008c  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1934   	SSD1963GPIOOUTDATA_16(0x0001);						 
000090  2001              MOVS     r0,#1
000092  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1935   			SSD1963GPIOOUTCOM(0xbf);
000096  20bf              MOVS     r0,#0xbf
000098  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1936   	SSD1963GPIOOUTDATA_18(0x11);
00009c  2011              MOVS     r0,#0x11
00009e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1937   	SSD1963GPIOOUTDATA_18(0x00);
0000a2  2000              MOVS     r0,#0
0000a4  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1938   	Delay(20);
0000a8  2014              MOVS     r0,#0x14
0000aa  f7fffffe          BL       Delay
;;;1939   
;;;1940   ///////#setting Display	
;;;1941   	SSD1963GPIOOUTCOM(0xBC);		               
0000ae  20bc              MOVS     r0,#0xbc
0000b0  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1942   	SSD1963GPIOOUTDATA_16(0x0001);						 
0000b4  2001              MOVS     r0,#1
0000b6  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1943   			SSD1963GPIOOUTCOM(0xbf);
0000ba  20bf              MOVS     r0,#0xbf
0000bc  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1944   	SSD1963GPIOOUTDATA_18(0x29);
0000c0  2029              MOVS     r0,#0x29
0000c2  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1945   	SSD1963GPIOOUTDATA_18(0x00);
0000c6  2000              MOVS     r0,#0
0000c8  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1946   	Delay(5);
0000cc  e8bd4010          POP      {r4,lr}
0000d0  2005              MOVS     r0,#5
0000d2  f7ffbffe          B.W      Delay
;;;1947   }
;;;1948   
                          ENDP

0000d6  0000              DCW      0x0000
                  |L50.216|
                          DCD      ||.data||+0x2c
                  |L50.220|
                          DCD      ||.data||+0x1c
                  |L50.224|
                          DCD      ||.data||+0x437
                  |L50.228|
                          DCD      ||.data||+0x30
                  |L50.232|
                          DCD      ||.data||+0x1e
                  |L50.236|
                          DCD      ||.data||+0x22
                  |L50.240|
                          DCD      ||.data||+0x24
                  |L50.244|
                          DCD      ||.data||+0x44a
                  |L50.248|
                          DCD      ||.data||+0x453
                  |L50.252|
                          DCD      ||.data||+0x487
                  |L50.256|
                          DCD      ||.data||+0x3f
                  |L50.260|
                          DCD      ||.data||+0x34
                  |L50.264|
                          DCD      ||.data||+0x26
                  |L50.268|
                          DCD      ||.data||+0x29
                  |L50.272|
                          DCD      ||.data||+0x39
                  |L50.276|
                          DCD      ||.data||+0x4ac
                  |L50.280|
                          DCD      ||.data||+0x4cf

                          AREA ||i.SSD2825_READ||, CODE, READONLY, ALIGN=2

                  SSD2825_READ PROC
;;;852    
;;;853    u16 SSD2825_READ(u8 CMD)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;854    {
;;;855    	u8 i;
;;;856    	u8 mm_L,mm_H;
;;;857    	u8 Parameter=0xfa;
;;;858    		
;;;859    	mm = 0;
000004  f8dfa1f8          LDR      r10,|L51.512|
000008  4605              MOV      r5,r0                 ;854
00000a  2000              MOVS     r0,#0
00000c  f8aa001a          STRH     r0,[r10,#0x1a]
000010  f04f0840          MOV      r8,#0x40
000014  f8df91ec          LDR      r9,|L51.516|
000018  f8ad8000          STRH     r8,[sp,#0]
00001c  f04f0b48          MOV      r11,#0x48
000020  24fa              MOVS     r4,#0xfa              ;857
000022  f88db003          STRB     r11,[sp,#3]           ;857
000026  4669              MOV      r1,sp                 ;857
000028  4648              MOV      r0,r9                 ;857
00002a  f7fffffe          BL       GPIO_Init
00002e  f8ad8000          STRH     r8,[sp,#0]            ;857
000032  f88db003          STRB     r11,[sp,#3]           ;857
000036  4669              MOV      r1,sp                 ;857
000038  4648              MOV      r0,r9                 ;857
00003a  f7fffffe          BL       GPIO_Init
;;;860    
;;;861    	SPISDASetInput();
;;;862    	SPISDASetInput();
;;;863    
;;;864    	SSD1963Command_8(0xBa); 
00003e  20ba              MOVS     r0,#0xba
000040  f7fffffe          BL       SSD1963Command_8
;;;865    	SSD1963Data_8(0x07);   //CS=0
000044  2007              MOVS     r0,#7
000046  f7fffffe          BL       SSD1963Data_8
;;;866    	
;;;867    	SSD1963Command_8(0xBa); 
00004a  20ba              MOVS     r0,#0xba
00004c  f7fffffe          BL       SSD1963Command_8
;;;868        SSD1963Data_8(0x05);    //SDI=0
000050  2005              MOVS     r0,#5
000052  f7fffffe          BL       SSD1963Data_8
;;;869        SSD1963Command_8(0xBa); 
000056  20ba              MOVS     r0,#0xba
000058  f7fffffe          BL       SSD1963Command_8
;;;870        SSD1963Data_8(0x01);    //sck=0
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       SSD1963Data_8
;;;871    
;;;872        SSD1963Command_8(0xBa);  
000062  20ba              MOVS     r0,#0xba
000064  f7fffffe          BL       SSD1963Command_8
;;;873        SSD1963Data_8(0x05);     //sck=1
000068  2005              MOVS     r0,#5
00006a  f7fffffe          BL       SSD1963Data_8
;;;874    
;;;875    	for (i=0;i<8;i++)     // 
00006e  f04f0b00          MOV      r11,#0
                  |L51.114|
;;;876             { 
;;;877              if( !(CMD & 0x80))
000072  f0150f80          TST      r5,#0x80
;;;878                  { 
;;;879    			  	SSD1963Command_8(0xBa); 
;;;880                    SSD1963Data_8(0x05);    //SDI=0
;;;881                    SSD1963Command_8(0xBa); 
;;;882                    SSD1963Data_8(0x01);    //sck=0
;;;883      
;;;884                    SSD1963Command_8(0xBa);  
;;;885                    SSD1963Data_8(0x05);     //sck=1
;;;886                  }
;;;887              else
;;;888              	  { 
;;;889    			  	SSD1963Command_8(0xBa); 
000076  f04f00ba          MOV      r0,#0xba
00007a  d07c              BEQ      |L51.374|
00007c  f7fffffe          BL       SSD1963Command_8
;;;890                    SSD1963Data_8(0x07);    //SDI=1
000080  2007              MOVS     r0,#7
000082  f7fffffe          BL       SSD1963Data_8
;;;891                    SSD1963Command_8(0xBa); 
000086  20ba              MOVS     r0,#0xba
000088  f7fffffe          BL       SSD1963Command_8
;;;892                    SSD1963Data_8(0x03);    //sck=0
00008c  2003              MOVS     r0,#3
00008e  f7fffffe          BL       SSD1963Data_8
;;;893      
;;;894                    SSD1963Command_8(0xBa);  
000092  20ba              MOVS     r0,#0xba
000094  f7fffffe          BL       SSD1963Command_8
;;;895                    SSD1963Data_8(0x07);     //sck=1
000098  2007              MOVS     r0,#7
                  |L51.154|
00009a  f7fffffe          BL       SSD1963Data_8
;;;896                   }
;;;897                    
;;;898              CMD=CMD<<1;
00009e  0668              LSLS     r0,r5,#25
0000a0  0e05              LSRS     r5,r0,#24
0000a2  f10b0001          ADD      r0,r11,#1             ;875
0000a6  f0000bff          AND      r11,r0,#0xff          ;875
0000aa  f1bb0f08          CMP      r11,#8                ;875
0000ae  d3e0              BCC      |L51.114|
;;;899             }	
;;;900    
;;;901    	SSD1963Command_8(0xBa); 
0000b0  20ba              MOVS     r0,#0xba
0000b2  f7fffffe          BL       SSD1963Command_8
;;;902        SSD1963Data_8(0x05);    //SDI=0
0000b6  2005              MOVS     r0,#5
0000b8  f7fffffe          BL       SSD1963Data_8
;;;903        SSD1963Command_8(0xBa); 
0000bc  20ba              MOVS     r0,#0xba
0000be  f7fffffe          BL       SSD1963Command_8
;;;904        SSD1963Data_8(0x01);    //sck=0
0000c2  2001              MOVS     r0,#1
0000c4  f7fffffe          BL       SSD1963Data_8
;;;905    
;;;906        SSD1963Command_8(0xBa);  
0000c8  20ba              MOVS     r0,#0xba
0000ca  f7fffffe          BL       SSD1963Command_8
;;;907        SSD1963Data_8(0x05);     //sck=1
0000ce  2005              MOVS     r0,#5
0000d0  f7fffffe          BL       SSD1963Data_8
;;;908    		 
;;;909    	for (i=0;i<8;i++)     // 
0000d4  2500              MOVS     r5,#0
                  |L51.214|
;;;910             { 
;;;911              if( !(Parameter & 0x80))
0000d6  f0140f80          TST      r4,#0x80
;;;912                  { 
;;;913    			  	SSD1963Command_8(0xBa); 
;;;914                    SSD1963Data_8(0x05);    //SDI=0
;;;915                    SSD1963Command_8(0xBa); 
;;;916                    SSD1963Data_8(0x01);    //sck=0
;;;917      
;;;918                    SSD1963Command_8(0xBa);  
;;;919                    SSD1963Data_8(0x05);     //sck=1
;;;920                  }
;;;921              else
;;;922              	  { 
;;;923    			  	SSD1963Command_8(0xBa); 
0000da  f04f00ba          MOV      r0,#0xba
0000de  d07e              BEQ      |L51.478|
0000e0  f7fffffe          BL       SSD1963Command_8
;;;924                    SSD1963Data_8(0x07);    //SDI=1
0000e4  2007              MOVS     r0,#7
0000e6  f7fffffe          BL       SSD1963Data_8
;;;925                    SSD1963Command_8(0xBa); 
0000ea  20ba              MOVS     r0,#0xba
0000ec  f7fffffe          BL       SSD1963Command_8
;;;926                    SSD1963Data_8(0x03);    //sck=0
0000f0  2003              MOVS     r0,#3
0000f2  f7fffffe          BL       SSD1963Data_8
;;;927      
;;;928                    SSD1963Command_8(0xBa);  
0000f6  20ba              MOVS     r0,#0xba
0000f8  f7fffffe          BL       SSD1963Command_8
;;;929                    SSD1963Data_8(0x07);     //sck=1
0000fc  2007              MOVS     r0,#7
                  |L51.254|
0000fe  f7fffffe          BL       SSD1963Data_8
;;;930                   }
;;;931                    
;;;932              Parameter=Parameter<<1;
000102  0660              LSLS     r0,r4,#25
000104  0e04              LSRS     r4,r0,#24
000106  1c68              ADDS     r0,r5,#1              ;909
000108  b2c5              UXTB     r5,r0                 ;909
00010a  2d08              CMP      r5,#8                 ;909
;;;933             }
;;;934    		 
;;;935    	for (i=0;i<8;i++)     // 
00010c  bf28              IT       CS
00010e  2400              MOVCS    r4,#0
000110  d3e1              BCC      |L51.214|
                  |L51.274|
;;;936             { 
;;;937                    SSD1963Command_8(0xBa); 
000112  20ba              MOVS     r0,#0xba
000114  f7fffffe          BL       SSD1963Command_8
;;;938                    SSD1963Data_8(0x01);    //sck=0
000118  2001              MOVS     r0,#1
00011a  f7fffffe          BL       SSD1963Data_8
;;;939    //				MDelay(1);
;;;940    				mm_L<<=1;
00011e  007d              LSLS     r5,r7,#1
;;;941                    SSD1963Command_8(0xBa);  
000120  20ba              MOVS     r0,#0xba
000122  f7fffffe          BL       SSD1963Command_8
;;;942                    SSD1963Data_8(0x05);     //sck=1
000126  2005              MOVS     r0,#5
000128  f7fffffe          BL       SSD1963Data_8
;;;943    				
;;;944    				mm_L=mm_L+GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_6);
00012c  2140              MOVS     r1,#0x40
00012e  4648              MOV      r0,r9
000130  f7fffffe          BL       GPIO_ReadInputDataBit
000134  4428              ADD      r0,r0,r5
000136  b2c7              UXTB     r7,r0
000138  1c60              ADDS     r0,r4,#1              ;935
00013a  b2c4              UXTB     r4,r0                 ;935
00013c  2c08              CMP      r4,#8                 ;935
00013e  d3e8              BCC      |L51.274|
;;;945    //				MDelay(1);
;;;946             }
;;;947    	for (i=0;i<8;i++)     // 
000140  2400              MOVS     r4,#0
                  |L51.322|
;;;948             { 
;;;949                    SSD1963Command_8(0xBa); 
000142  20ba              MOVS     r0,#0xba
000144  f7fffffe          BL       SSD1963Command_8
;;;950                    SSD1963Data_8(0x01);    //sck=0
000148  2001              MOVS     r0,#1
00014a  f7fffffe          BL       SSD1963Data_8
;;;951    //				MDelay(1);
;;;952    				mm_H<<=1;
00014e  0075              LSLS     r5,r6,#1
;;;953                    SSD1963Command_8(0xBa);  
000150  20ba              MOVS     r0,#0xba
000152  f7fffffe          BL       SSD1963Command_8
;;;954                    SSD1963Data_8(0x05);     //sck=1
000156  2005              MOVS     r0,#5
000158  f7fffffe          BL       SSD1963Data_8
;;;955    				
;;;956    				mm_H=mm_H+GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_6);
00015c  2140              MOVS     r1,#0x40
00015e  4648              MOV      r0,r9
000160  f7fffffe          BL       GPIO_ReadInputDataBit
000164  4428              ADD      r0,r0,r5
000166  b2c6              UXTB     r6,r0
000168  1c60              ADDS     r0,r4,#1              ;947
00016a  b2c4              UXTB     r4,r0                 ;947
00016c  2c08              CMP      r4,#8                 ;947
00016e  d3e8              BCC      |L51.322|
;;;957    //				MDelay(1);
;;;958             }
;;;959    	mm = mm_H;
;;;960    	mm = mm_L + (mm<<8);
000170  eb072006          ADD      r0,r7,r6,LSL #8
000174  e000              B        |L51.376|
                  |L51.374|
000176  e021              B        |L51.444|
                  |L51.376|
000178  f8aa001a          STRH     r0,[r10,#0x1a]
;;;961    
;;;962    	SSD1963Command_8(0xBa); 
00017c  20ba              MOVS     r0,#0xba
00017e  f7fffffe          BL       SSD1963Command_8
;;;963    	SSD1963Data_8(0x0f);   //CS=1
000182  200f              MOVS     r0,#0xf
000184  f7fffffe          BL       SSD1963Data_8
000188  f8ad8000          STRH     r8,[sp,#0]
00018c  2401              MOVS     r4,#1
00018e  f88d4002          STRB     r4,[sp,#2]
000192  2510              MOVS     r5,#0x10
000194  f88d5003          STRB     r5,[sp,#3]
000198  4669              MOV      r1,sp
00019a  4648              MOV      r0,r9
00019c  f7fffffe          BL       GPIO_Init
0001a0  f8ad8000          STRH     r8,[sp,#0]
0001a4  f88d4002          STRB     r4,[sp,#2]
0001a8  f88d5003          STRB     r5,[sp,#3]
0001ac  4669              MOV      r1,sp
0001ae  4648              MOV      r0,r9
0001b0  f7fffffe          BL       GPIO_Init
;;;964    
;;;965    	SPISDASetOutput();
;;;966    	SPISDASetOutput();
;;;967    
;;;968    	return mm;		 	 		 	
0001b4  f8ba001a          LDRH     r0,[r10,#0x1a]  ; mm
;;;969    }
0001b8  e8bd8ff8          POP      {r3-r11,pc}
                  |L51.444|
0001bc  f7fffffe          BL       SSD1963Command_8
0001c0  2005              MOVS     r0,#5                 ;880
0001c2  f7fffffe          BL       SSD1963Data_8
0001c6  20ba              MOVS     r0,#0xba              ;881
0001c8  f7fffffe          BL       SSD1963Command_8
0001cc  2001              MOVS     r0,#1                 ;882
0001ce  f7fffffe          BL       SSD1963Data_8
0001d2  20ba              MOVS     r0,#0xba              ;884
0001d4  f7fffffe          BL       SSD1963Command_8
0001d8  2005              MOVS     r0,#5                 ;885
0001da  e75e              B        |L51.154|
0001dc  e7ff              B        |L51.478|
                  |L51.478|
0001de  f7fffffe          BL       SSD1963Command_8
0001e2  2005              MOVS     r0,#5                 ;914
0001e4  f7fffffe          BL       SSD1963Data_8
0001e8  20ba              MOVS     r0,#0xba              ;915
0001ea  f7fffffe          BL       SSD1963Command_8
0001ee  2001              MOVS     r0,#1                 ;916
0001f0  f7fffffe          BL       SSD1963Data_8
0001f4  20ba              MOVS     r0,#0xba              ;918
0001f6  f7fffffe          BL       SSD1963Command_8
0001fa  2005              MOVS     r0,#5                 ;919
0001fc  e77f              B        |L51.254|
;;;970    
                          ENDP

0001fe  0000              DCW      0x0000
                  |L51.512|
                          DCD      ||.data||
                  |L51.516|
                          DCD      0x40010800

                          AREA ||i.SSD2825_READ_CONTINUE||, CODE, READONLY, ALIGN=2

                  SSD2825_READ_CONTINUE PROC
;;;970    
;;;971    u16 SSD2825_READ_CONTINUE(u8 CMD)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;972    {
;;;973    	u8 i;
;;;974    	u8 mm_L,mm_H;
;;;975    //	u8 Parameter = 0xfa;
;;;976    		
;;;977    	mm = 0;
000004  f8df9168          LDR      r9,|L52.368|
000008  4605              MOV      r5,r0                 ;972
00000a  2000              MOVS     r0,#0
00000c  f8a9001a          STRH     r0,[r9,#0x1a]
000010  f04f0840          MOV      r8,#0x40
000014  f8dfa15c          LDR      r10,|L52.372|
000018  f8ad8000          STRH     r8,[sp,#0]
00001c  2448              MOVS     r4,#0x48
00001e  f88d4003          STRB     r4,[sp,#3]
000022  4669              MOV      r1,sp
000024  4650              MOV      r0,r10
000026  f7fffffe          BL       GPIO_Init
00002a  f8ad8000          STRH     r8,[sp,#0]
00002e  f88d4003          STRB     r4,[sp,#3]
000032  4669              MOV      r1,sp
000034  4650              MOV      r0,r10
000036  f7fffffe          BL       GPIO_Init
;;;978    
;;;979    	SPISDASetInput();
;;;980    	SPISDASetInput();
;;;981    
;;;982    	SSD1963Command_8(0xBa); 
00003a  20ba              MOVS     r0,#0xba
00003c  f7fffffe          BL       SSD1963Command_8
;;;983    	SSD1963Data_8(0x07);   //CS=0
000040  2007              MOVS     r0,#7
000042  f7fffffe          BL       SSD1963Data_8
;;;984    	
;;;985    	SSD1963Command_8(0xBa); 
000046  20ba              MOVS     r0,#0xba
000048  f7fffffe          BL       SSD1963Command_8
;;;986        SSD1963Data_8(0x05);    //SDI=0
00004c  2005              MOVS     r0,#5
00004e  f7fffffe          BL       SSD1963Data_8
;;;987        SSD1963Command_8(0xBa); 
000052  20ba              MOVS     r0,#0xba
000054  f7fffffe          BL       SSD1963Command_8
;;;988        SSD1963Data_8(0x01);    //sck=0
000058  2001              MOVS     r0,#1
00005a  f7fffffe          BL       SSD1963Data_8
;;;989    
;;;990        SSD1963Command_8(0xBa);  
00005e  20ba              MOVS     r0,#0xba
000060  f7fffffe          BL       SSD1963Command_8
;;;991        SSD1963Data_8(0x05);     //sck=1
000064  2005              MOVS     r0,#5
000066  f7fffffe          BL       SSD1963Data_8
;;;992    
;;;993    	for (i=0;i<8;i++)     // 
00006a  2400              MOVS     r4,#0
                  |L52.108|
;;;994             { 
;;;995              if( !(CMD & 0x80))
00006c  f0150f80          TST      r5,#0x80
;;;996                  { 
;;;997    			  	SSD1963Command_8(0xBa); 
;;;998                    SSD1963Data_8(0x05);    //SDI=0
;;;999                    SSD1963Command_8(0xBa); 
;;;1000                   SSD1963Data_8(0x01);    //sck=0
;;;1001     
;;;1002                   SSD1963Command_8(0xBa);  
;;;1003                   SSD1963Data_8(0x05);     //sck=1
;;;1004                 }
;;;1005             else
;;;1006             	  { 
;;;1007   			  	SSD1963Command_8(0xBa); 
000070  f04f00ba          MOV      r0,#0xba
000074  d06b              BEQ      |L52.334|
000076  f7fffffe          BL       SSD1963Command_8
;;;1008                   SSD1963Data_8(0x07);    //SDI=1
00007a  2007              MOVS     r0,#7
00007c  f7fffffe          BL       SSD1963Data_8
;;;1009                   SSD1963Command_8(0xBa); 
000080  20ba              MOVS     r0,#0xba
000082  f7fffffe          BL       SSD1963Command_8
;;;1010                   SSD1963Data_8(0x03);    //sck=0
000086  2003              MOVS     r0,#3
000088  f7fffffe          BL       SSD1963Data_8
;;;1011     
;;;1012                   SSD1963Command_8(0xBa);  
00008c  20ba              MOVS     r0,#0xba
00008e  f7fffffe          BL       SSD1963Command_8
;;;1013                   SSD1963Data_8(0x07);     //sck=1
000092  2007              MOVS     r0,#7
                  |L52.148|
000094  f7fffffe          BL       SSD1963Data_8
;;;1014                  }
;;;1015                   
;;;1016             CMD=CMD<<1;
000098  0668              LSLS     r0,r5,#25
00009a  0e05              LSRS     r5,r0,#24
00009c  1c60              ADDS     r0,r4,#1              ;993
00009e  b2c4              UXTB     r4,r0                 ;993
0000a0  2c08              CMP      r4,#8                 ;993
;;;1017            }	
;;;1018   		 
;;;1019   	for (i=0;i<8;i++)     // 
0000a2  bf28              IT       CS
0000a4  2400              MOVCS    r4,#0
0000a6  d3e1              BCC      |L52.108|
                  |L52.168|
;;;1020            { 
;;;1021                   SSD1963Command_8(0xBa); 
0000a8  20ba              MOVS     r0,#0xba
0000aa  f7fffffe          BL       SSD1963Command_8
;;;1022                   SSD1963Data_8(0x01);    //sck=0
0000ae  2001              MOVS     r0,#1
0000b0  f7fffffe          BL       SSD1963Data_8
;;;1023   //				MDelay(1);
;;;1024   				mm_L<<=1;
0000b4  007d              LSLS     r5,r7,#1
;;;1025                   SSD1963Command_8(0xBa);  
0000b6  20ba              MOVS     r0,#0xba
0000b8  f7fffffe          BL       SSD1963Command_8
;;;1026                   SSD1963Data_8(0x05);     //sck=1
0000bc  2005              MOVS     r0,#5
0000be  f7fffffe          BL       SSD1963Data_8
;;;1027   				
;;;1028   				mm_L=mm_L+GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_6);
0000c2  2140              MOVS     r1,#0x40
0000c4  4650              MOV      r0,r10
0000c6  f7fffffe          BL       GPIO_ReadInputDataBit
0000ca  4428              ADD      r0,r0,r5
0000cc  b2c7              UXTB     r7,r0
0000ce  1c60              ADDS     r0,r4,#1              ;1019
0000d0  b2c4              UXTB     r4,r0                 ;1019
0000d2  2c08              CMP      r4,#8                 ;1019
0000d4  d3e8              BCC      |L52.168|
;;;1029   //				MDelay(1);
;;;1030            }
;;;1031   	for (i=0;i<8;i++)     // 
0000d6  2400              MOVS     r4,#0
                  |L52.216|
;;;1032            { 
;;;1033                   SSD1963Command_8(0xBa); 
0000d8  20ba              MOVS     r0,#0xba
0000da  f7fffffe          BL       SSD1963Command_8
;;;1034                   SSD1963Data_8(0x01);    //sck=0
0000de  2001              MOVS     r0,#1
0000e0  f7fffffe          BL       SSD1963Data_8
;;;1035   //				MDelay(1);
;;;1036   				mm_H<<=1;
0000e4  0075              LSLS     r5,r6,#1
;;;1037                   SSD1963Command_8(0xBa);  
0000e6  20ba              MOVS     r0,#0xba
0000e8  f7fffffe          BL       SSD1963Command_8
;;;1038                   SSD1963Data_8(0x05);     //sck=1
0000ec  2005              MOVS     r0,#5
0000ee  f7fffffe          BL       SSD1963Data_8
;;;1039   				
;;;1040   				mm_H=mm_H+GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_6);
0000f2  2140              MOVS     r1,#0x40
0000f4  4650              MOV      r0,r10
0000f6  f7fffffe          BL       GPIO_ReadInputDataBit
0000fa  4428              ADD      r0,r0,r5
0000fc  b2c6              UXTB     r6,r0
0000fe  1c60              ADDS     r0,r4,#1              ;1031
000100  b2c4              UXTB     r4,r0                 ;1031
000102  2c08              CMP      r4,#8                 ;1031
000104  d3e8              BCC      |L52.216|
;;;1041   //				MDelay(1);
;;;1042            }
;;;1043   	mm = mm_H;
;;;1044   	mm = mm_L + (mm<<8);
000106  eb072006          ADD      r0,r7,r6,LSL #8
00010a  f8a9001a          STRH     r0,[r9,#0x1a]
;;;1045   
;;;1046   	SSD1963Command_8(0xBa); 
00010e  20ba              MOVS     r0,#0xba
000110  f7fffffe          BL       SSD1963Command_8
;;;1047   	SSD1963Data_8(0x0f);   //CS=1
000114  200f              MOVS     r0,#0xf
000116  f7fffffe          BL       SSD1963Data_8
00011a  f8ad8000          STRH     r8,[sp,#0]
00011e  2501              MOVS     r5,#1
000120  f88d5002          STRB     r5,[sp,#2]
000124  2410              MOVS     r4,#0x10
000126  f88d4003          STRB     r4,[sp,#3]
00012a  4669              MOV      r1,sp
00012c  4650              MOV      r0,r10
00012e  f7fffffe          BL       GPIO_Init
000132  f8ad8000          STRH     r8,[sp,#0]
000136  f88d5002          STRB     r5,[sp,#2]
00013a  f88d4003          STRB     r4,[sp,#3]
00013e  4669              MOV      r1,sp
000140  4650              MOV      r0,r10
000142  f7fffffe          BL       GPIO_Init
;;;1048   
;;;1049   	SPISDASetOutput();
;;;1050   	SPISDASetOutput();
;;;1051   
;;;1052   	return mm;		 	 		 	
000146  f8b9001a          LDRH     r0,[r9,#0x1a]  ; mm
;;;1053   }
00014a  e8bd8ff8          POP      {r3-r11,pc}
                  |L52.334|
00014e  f7fffffe          BL       SSD1963Command_8
000152  2005              MOVS     r0,#5                 ;998
000154  f7fffffe          BL       SSD1963Data_8
000158  20ba              MOVS     r0,#0xba              ;999
00015a  f7fffffe          BL       SSD1963Command_8
00015e  2001              MOVS     r0,#1                 ;1000
000160  f7fffffe          BL       SSD1963Data_8
000164  20ba              MOVS     r0,#0xba              ;1002
000166  f7fffffe          BL       SSD1963Command_8
00016a  2005              MOVS     r0,#5                 ;1003
00016c  e792              B        |L52.148|
;;;1054   
                          ENDP

00016e  0000              DCW      0x0000
                  |L52.368|
                          DCD      ||.data||
                  |L52.372|
                          DCD      0x40010800

                          AREA ||i.STM32_SSD1963_Init||, CODE, READONLY, ALIGN=2

                  STM32_SSD1963_Init PROC
;;;135    *******************************************************************************/
;;;136    void STM32_SSD1963_Init(void) //Initializes the SSD1963.
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;137    { 
;;;138    	u16   VT,HT,VPS,HPS;
;;;139    	float temp ;
;;;140    	u32  LCDC_FPR;
;;;141    	
;;;142    	
;;;143    	VT=VBP+VFP+VDP;
000004  4d98              LDR      r5,|L53.616|
000006  89af              LDRH     r7,[r5,#0xc]  ; VBP
000008  89e8              LDRH     r0,[r5,#0xe]  ; VFP
00000a  8969              LDRH     r1,[r5,#0xa]  ; VDP
00000c  4438              ADD      r0,r0,r7
00000e  4408              ADD      r0,r0,r1
000010  b286              UXTH     r6,r0
;;;144    	HT=HBP+HFP+HDP;
000012  f8b59012          LDRH     r9,[r5,#0x12]  ; HBP
000016  8aa8              LDRH     r0,[r5,#0x14]  ; HFP
000018  8a29              LDRH     r1,[r5,#0x10]  ; HDP
00001a  4448              ADD      r0,r0,r9
00001c  4408              ADD      r0,r0,r1
00001e  fa1ffa80          UXTH     r10,r0
;;;145    	HPS=HBP;
;;;146    	VPS=VBP;
;;;147    	
;;;148    	DotclkValue = Frame_rate*HT*VT/1000000;  
000022  7828              LDRB     r0,[r5,#0]  ; Frame_rate
000024  4991              LDR      r1,|L53.620|
000026  fb00f00a          MUL      r0,r0,r10
00002a  4370              MULS     r0,r6,r0
00002c  fb90f0f1          SDIV     r0,r0,r1
000030  b2c0              UXTB     r0,r0
000032  7068              STRB     r0,[r5,#1]
;;;149    	
;;;150    	temp=((DotclkValue<<20)/100-1);
000034  498e              LDR      r1,|L53.624|
000036  0500              LSLS     r0,r0,#20
000038  fba11000          UMULL    r1,r0,r1,r0
00003c  1e40              SUBS     r0,r0,#1
00003e  f7fffffe          BL       __aeabi_i2f
;;;151    	LCDC_FPR=(u32)temp;
000042  f7fffffe          BL       __aeabi_f2uiz
000046  4680              MOV      r8,r0
;;;152    	
;;;153    	Delay(5);
000048  2005              MOVS     r0,#5
00004a  f7fffffe          BL       Delay
;;;154    	/* Configure the LCD Control pins -LCD Ïà¹Ø¿ØÖÆ¶Ë¿Ú³õÊ¼»¯----------------------*/
;;;155    	LCD_CtrlLinesConfig();
00004e  f7fffffe          BL       LCD_CtrlLinesConfig
;;;156    	
;;;157    	Delay(5); /* delay 50 ms */
000052  2005              MOVS     r0,#5
000054  f7fffffe          BL       Delay
;;;158      
;;;159    /* Start Initial Sequence ----------------------------------------------------*/
;;;160    {//³õÊ¼»¯SSD1963    
;;;161    	
;;;162    	LCD_RST(0);//Ó²¼þ¸´Î»
000058  4c86              LDR      r4,|L53.628|
00005a  6820              LDR      r0,[r4,#0]
00005c  f0200001          BIC      r0,r0,#1
000060  6020              STR      r0,[r4,#0]
;;;163    	         SSD1963_CS(1); 
000062  6820              LDR      r0,[r4,#0]
000064  f0400004          ORR      r0,r0,#4
000068  6020              STR      r0,[r4,#0]
;;;164    	         LCD_RS(1); 
00006a  6820              LDR      r0,[r4,#0]
00006c  f0400008          ORR      r0,r0,#8
000070  6020              STR      r0,[r4,#0]
;;;165    	         LCD_WR(1); 
000072  6820              LDR      r0,[r4,#0]
000074  f0400020          ORR      r0,r0,#0x20
000078  6020              STR      r0,[r4,#0]
;;;166    			 LCD_RD(1);	LCD_CS(0);
00007a  6820              LDR      r0,[r4,#0]
00007c  f0400010          ORR      r0,r0,#0x10
000080  6020              STR      r0,[r4,#0]
000082  6820              LDR      r0,[r4,#0]
000084  f0200002          BIC      r0,r0,#2
000088  6020              STR      r0,[r4,#0]
;;;167    	Delay(5);
00008a  2005              MOVS     r0,#5
00008c  f7fffffe          BL       Delay
;;;168    	LCD_RST(1) ;
000090  6820              LDR      r0,[r4,#0]
000092  f0400001          ORR      r0,r0,#1
000096  6020              STR      r0,[r4,#0]
;;;169    	LCD_RD(1);
000098  6820              LDR      r0,[r4,#0]
00009a  f0400010          ORR      r0,r0,#0x10
00009e  6020              STR      r0,[r4,#0]
;;;170    	Delay(20);
0000a0  2014              MOVS     r0,#0x14
0000a2  f7fffffe          BL       Delay
;;;171    
;;;172    	{
;;;173    	  //software reset
;;;174    	   SSD1963Command_8(0x01); 
0000a6  2001              MOVS     r0,#1
0000a8  f7fffffe          BL       SSD1963Command_8
;;;175    	   Delay(20);
0000ac  2014              MOVS     r0,#0x14
0000ae  f7fffffe          BL       Delay
;;;176    //	   SSD1963Command_8(0x01); 
;;;177    //	   Delay(20);   
;;;178    	                       
;;;179    	   //set_pixel_data_interface-ÉèÖÃMCUµ½1963µÄÊý¾Ý¸ñÊ½
;;;180    	   SSD1963Command_8(0xf0);
0000b2  20f0              MOVS     r0,#0xf0
0000b4  f7fffffe          BL       SSD1963Command_8
;;;181    	   SSD1963Data_8(0x00);   //0x00: 8-bit; 0x03:16-bit (565 format)
0000b8  2000              MOVS     r0,#0
0000ba  f7fffffe          BL       SSD1963Data_8
;;;182    	   
;;;183    	    SSD1963Command_8(0xB8);  //Set the GPIOs configuration. If the GPIOs are not used for LCD, set the direction. Otherwise, they are toggled with  LCD signals by 0xC0 ¨C 0xCF.
0000be  20b8              MOVS     r0,#0xb8
0000c0  f7fffffe          BL       SSD1963Command_8
;;;184    	    SSD1963Data_8(0x0F);     //
0000c4  200f              MOVS     r0,#0xf
0000c6  f7fffffe          BL       SSD1963Data_8
;;;185    	    SSD1963Data_8(0x01);     // 
0000ca  2001              MOVS     r0,#1
0000cc  f7fffffe          BL       SSD1963Data_8
;;;186    	    
;;;187    	   //set_pll_mn;  m= 3 m= 2  ÉèÖÃ1963ÄÚ²¿PLL£¬»ù±¾²»ÐëÐÞ¸Ä
;;;188    	   SSD1963Command_8(0xe2); //VCO = Reference input clock x (M + 1);PLL frequency = VCO / (N + 1)
0000d0  20e2              MOVS     r0,#0xe2
0000d2  f7fffffe          BL       SSD1963Command_8
;;;189    	   //* Note : 250MHz < VCO < 800MHz     
;;;190    	   SSD1963Data_8(49);   //Multiplier (M) of PLL. (POR = 00101101) ,M<256
0000d6  2031              MOVS     r0,#0x31
0000d8  f7fffffe          BL       SSD1963Data_8
;;;191    	   SSD1963Data_8(3);   //Divider (N) of PLL. (POR = 0011),N<16
0000dc  2003              MOVS     r0,#3
0000de  f7fffffe          BL       SSD1963Data_8
;;;192    	   SSD1963Data_8(0x04); // Effectuate the multiplier and divider value
0000e2  2004              MOVS     r0,#4
0000e4  f7fffffe          BL       SSD1963Data_8
;;;193    	   
;;;194    	   //Start the PLL. Before the start, the system was operated with the crystal oscillator or clock input.
;;;195    	   SSD1963Command_8(0xe0);
0000e8  20e0              MOVS     r0,#0xe0
0000ea  f7fffffe          BL       SSD1963Command_8
;;;196    	   SSD1963Data_8(0x01);
0000ee  2001              MOVS     r0,#1
0000f0  f7fffffe          BL       SSD1963Data_8
;;;197    	   Delay(10);
0000f4  200a              MOVS     r0,#0xa
0000f6  f7fffffe          BL       Delay
;;;198    	   SSD1963Command_8(0xe0);  
0000fa  20e0              MOVS     r0,#0xe0
0000fc  f7fffffe          BL       SSD1963Command_8
;;;199    	   SSD1963Data_8(0x03); 
000100  2003              MOVS     r0,#3
000102  f7fffffe          BL       SSD1963Data_8
;;;200    		Delay(28);
000106  201c              MOVS     r0,#0x1c
000108  f7fffffe          BL       Delay
;;;201    
;;;202    
;;;203    	   //dotclk setting,Set the LSHIFT (pixel clock) frequency --For parallel LCD interface:
;;;204    	   SSD1963Command_8(0xe6);  //:Configure the pixel clock 
00010c  20e6              MOVS     r0,#0xe6
00010e  f7fffffe          BL       SSD1963Command_8
;;;205    	   // For parallel LCD interface DOTCLK Freq =PLL freq x ((LCDC_FPR + 1) / 1048576)
;;;206    	   SSD1963Data_8(LCDC_FPR>>16);
000112  f3c84007          UBFX     r0,r8,#16,#8
000116  f7fffffe          BL       SSD1963Data_8
;;;207    	   SSD1963Data_8(LCDC_FPR>>8); 
00011a  f3c82007          UBFX     r0,r8,#8,#8
00011e  f7fffffe          BL       SSD1963Data_8
;;;208    	   SSD1963Data_8(LCDC_FPR);
000122  f00800ff          AND      r0,r8,#0xff
000126  f7fffffe          BL       SSD1963Data_8
;;;209    	
;;;210    	
;;;211    	   //Set_lcd_mode,Panel setting
;;;212    	   SSD1963Command_8(0xb0);  // Delay(10);
00012a  20b0              MOVS     r0,#0xb0
00012c  f7fffffe          BL       SSD1963Command_8
;;;213    	   SSD1963Data_8(0x34);   // Set the LCD panel mode and resolution;TFT color depth enhancement enable;;
000130  2034              MOVS     r0,#0x34
000132  f7fffffe          BL       SSD1963Data_8
;;;214    	   //LSHIFT polarity;Set the horizontal sync pulse polarity;LFRAME polarity (POR = 0)
;;;215    	   //´Ë´¦vs hs dotclkµÄ¼«ÐÔÉèÖÃÓÚ1963¹æ¸ñÊéËµÃ÷Ïà·´£¬¹À¼Æ×ÊÁÏ´íÎó
;;;216    	   SSD1963Data_8(0x00);   //B[7] : LCD panel mode (POR = 0)
000136  2000              MOVS     r0,#0
000138  f7fffffe          BL       SSD1963Data_8
;;;217    	                          //     0 Hsync+Vsync +DE mode
;;;218    	                          //     1 TTL mode
;;;219    	                          // B[6:5] : TFT type (POR = 01)
;;;220    	                          //  00, 01 TFT mode
;;;221    	                         //  10 Serial RGB mode
;;;222    	                         //  11 Serial RGB+dummy mode
;;;223    	   
;;;224    	   //Horizontal panel size = (HDP + 1) pixels
;;;225    	   SSD1963Data_8((HDP-1)>>8); //High byte of the horizontal panel size       
00013c  8a28              LDRH     r0,[r5,#0x10]  ; HDP
00013e  1e40              SUBS     r0,r0,#1
000140  f3c02007          UBFX     r0,r0,#8,#8
000144  f7fffffe          BL       SSD1963Data_8
;;;226    	   SSD1963Data_8(HDP-1);  //Low byte of the horizontal panel size;
000148  7c28              LDRB     r0,[r5,#0x10]  ; HDP
00014a  1e40              SUBS     r0,r0,#1
00014c  b2c0              UXTB     r0,r0
00014e  f7fffffe          BL       SSD1963Data_8
;;;227    	   
;;;228    	   SSD1963Data_8((VDP-1)>>8); //High byte of the vertical panel size
000152  8968              LDRH     r0,[r5,#0xa]  ; VDP
000154  1e40              SUBS     r0,r0,#1
000156  f3c02007          UBFX     r0,r0,#8,#8
00015a  f7fffffe          BL       SSD1963Data_8
;;;229    	   //Vertical panel size = (VDP + 1) lines
;;;230    	   SSD1963Data_8(VDP-1); //Low byte of the vertical panel size (POR = 11011111)
00015e  7aa8              LDRB     r0,[r5,#0xa]  ; VDP
000160  1e40              SUBS     r0,r0,#1
000162  b2c0              UXTB     r0,r0
000164  f7fffffe          BL       SSD1963Data_8
;;;231    	   
;;;232    	   SSD1963Data_8(0x23); //RGB sequence for serial TFT interface
000168  2023              MOVS     r0,#0x23
00016a  f7fffffe          BL       SSD1963Data_8
;;;233    	
;;;234    	   //hsync setting
;;;235    	   SSD1963Command_8(0xb4); 
00016e  20b4              MOVS     r0,#0xb4
000170  f7fffffe          BL       SSD1963Command_8
;;;236    	   SSD1963Data_8((HT-1)>>8);  //HT[10:8];(display + non-display),
000174  f1aa0401          SUB      r4,r10,#1
000178  f3c42007          UBFX     r0,r4,#8,#8
00017c  f7fffffe          BL       SSD1963Data_8
;;;237    	   SSD1963Data_8(HT-1);   //HT[7:0];Horizontal total period = (HT + 1) pixels
000180  b2e0              UXTB     r0,r4
000182  f7fffffe          BL       SSD1963Data_8
;;;238    	   SSD1963Data_8(HPS>>8);  //HPS[10:8] : High byte of the non-display period between the start of the horizontal sync (LLINE) signal and the first display data. (POR = 000)
000186  ea4f2019          LSR      r0,r9,#8
00018a  f7fffffe          BL       SSD1963Data_8
;;;239    	   SSD1963Data_8(HPS);   //HPS[7:0]
00018e  f00900ff          AND      r0,r9,#0xff
000192  f7fffffe          BL       SSD1963Data_8
;;;240    	   SSD1963Data_8(HPW);   //HPW[6:0] : Set the horizontal sync pulse width (LLINE) in pixel clock. (POR = 000111)
000196  7e28              LDRB     r0,[r5,#0x18]  ; HPW
000198  f7fffffe          BL       SSD1963Data_8
;;;241    	                          //Horizontal Sync Pulse Width = (HPW + 1) pixels
;;;242    	   SSD1963Data_8(0x00);  //LPS[10:8] :Set the horizontal sync pulse (LLINE) start location in pixel clock. (POR = 000)
00019c  2000              MOVS     r0,#0
00019e  f7fffffe          BL       SSD1963Data_8
;;;243    	   SSD1963Data_8(0x00);   //LPS[7:0] :Set the horizontal sync pulse width (LLINE) in start. (POR = 00000000)
0001a2  2000              MOVS     r0,#0
0001a4  f7fffffe          BL       SSD1963Data_8
;;;244    	   SSD1963Data_8(0x00);  //Set the horizontal sync pulse subpixel start position (POR = 00)
0001a8  2000              MOVS     r0,#0
0001aa  f7fffffe          BL       SSD1963Data_8
;;;245    	
;;;246    	   
;;;247    	
;;;248    	   //vsync setting
;;;249    	   SSD1963Command_8(0xb6); //Set the vertical blanking interval between last scan line and next LFRAME pulse
0001ae  20b6              MOVS     r0,#0xb6
0001b0  f7fffffe          BL       SSD1963Command_8
;;;250    	   SSD1963Data_8(VT>>8);    //VT:High byte of the vertical total (display + non-display) period in lines (POR = 001)
0001b4  0a30              LSRS     r0,r6,#8
0001b6  f7fffffe          BL       SSD1963Data_8
;;;251    	   SSD1963Data_8(VT-1);   //Low byte of the vertical total (display + non-display) period in lines (POR = 11101111)
0001ba  1e70              SUBS     r0,r6,#1
0001bc  b2c0              UXTB     r0,r0
0001be  f7fffffe          BL       SSD1963Data_8
;;;252    	                          //Vertical Total = (VT + 1) lines
;;;253    	   SSD1963Data_8(VPS>>8);    //VPS[10:8] :High byte the non-display period in lines between the start of the frame and the first display data in line.
0001c2  0a38              LSRS     r0,r7,#8
0001c4  f7fffffe          BL       SSD1963Data_8
;;;254    	   SSD1963Data_8(VPS);     //VPS[7:0] :The non-display period in lines between the start of the frame and the first display data in line.
0001c8  b2f8              UXTB     r0,r7
0001ca  f7fffffe          BL       SSD1963Data_8
;;;255    	                          //Vertical Sync Pulse Start Position = VPS lines
;;;256    	   SSD1963Data_8(VPW);    //VPW[6:0] :Set the vertical sync pulse width (LFRAME) in lines. (POR = 000001)
0001ce  7da8              LDRB     r0,[r5,#0x16]  ; VPW
0001d0  f7fffffe          BL       SSD1963Data_8
;;;257    	                          //Vertical Sync Pulse Width = (VPW + 1) lines
;;;258    	   SSD1963Data_8(0x00);   // FPS[10:8] : High byte of the vertical sync pulse (LFRAME) start location in lines. (POR = 000)
0001d4  2000              MOVS     r0,#0
0001d6  f7fffffe          BL       SSD1963Data_8
;;;259    	   SSD1963Data_8(0x00);   // FPS[7:0] :Low byte of the vertical sync pulse (LFRAME) start location in lines. (POR = 00000000)
0001da  2000              MOVS     r0,#0
0001dc  f7fffffe          BL       SSD1963Data_8
;;;260    	                           //Vertical Display Period Start Position = FPS lines 
;;;261    	
;;;262    	    
;;;263    	
;;;264    	   SSD1963Command_8(0x36);//Set the read order from host processor to frame buffer by A[7:5] and A[3] and from frame buffer to the display panel by A[2:0] and A[4].
0001e0  2036              MOVS     r0,#0x36
0001e2  f7fffffe          BL       SSD1963Command_8
;;;265    	   SSD1963Data_8(0x00);   //Êý¾Ý²Ù×÷Ë³ÐòÎª×óÖÁÓÒ£¬´ÓÉÏµ½ÏÂ
0001e6  2000              MOVS     r0,#0
0001e8  f7fffffe          BL       SSD1963Data_8
;;;266    	
;;;267    	  
;;;268    	   SSD1963Command_8(0x29); ////display on
0001ec  2029              MOVS     r0,#0x29
0001ee  f7fffffe          BL       SSD1963Command_8
;;;269    	     
;;;270    	 
;;;271    	   SSD1963Command_8(0x2a);  //Set the column address of frame buffer
0001f2  202a              MOVS     r0,#0x2a
0001f4  f7fffffe          BL       SSD1963Command_8
;;;272    	   SSD1963Data_8(0x00);
0001f8  2000              MOVS     r0,#0
0001fa  f7fffffe          BL       SSD1963Data_8
;;;273    	   SSD1963Data_8(0x00);
0001fe  2000              MOVS     r0,#0
000200  f7fffffe          BL       SSD1963Data_8
;;;274    	   SSD1963Data_8(0x1);
000204  2001              MOVS     r0,#1
000206  f7fffffe          BL       SSD1963Data_8
;;;275    	   SSD1963Data_8(0x67);// 
00020a  2067              MOVS     r0,#0x67
00020c  f7fffffe          BL       SSD1963Data_8
;;;276    	
;;;277    	   //row start_end
;;;278    	   SSD1963Command_8(0x2b);   //Set the page address of the frame
000210  202b              MOVS     r0,#0x2b
000212  f7fffffe          BL       SSD1963Command_8
;;;279    	   SSD1963Data_8(0x00);
000216  2000              MOVS     r0,#0
000218  f7fffffe          BL       SSD1963Data_8
;;;280    	   SSD1963Data_8(0x00);
00021c  2000              MOVS     r0,#0
00021e  f7fffffe          BL       SSD1963Data_8
;;;281    	   SSD1963Data_8(0x02);
000222  2002              MOVS     r0,#2
000224  f7fffffe          BL       SSD1963Data_8
;;;282    	   SSD1963Data_8(0x7f);// 
000228  207f              MOVS     r0,#0x7f
00022a  f7fffffe          BL       SSD1963Data_8
;;;283    	}
;;;284    	} 
;;;285    //	SSD1963Command_8(0xB8);  //Set the GPIOs configuration. If the GPIOs are not used for LCD, set the direction. Otherwise, they are toggled with  LCD signals by 0xC0 ¨C 0xCF.
;;;286    //	    SSD1963Data_8(0x0F);     //
;;;287    //	    SSD1963Data_8(0x01);     //
;;;288        
;;;289    	  SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
00022e  20ba              MOVS     r0,#0xba
000230  f7fffffe          BL       SSD1963Command_8
;;;290    	   SSD1963Data_8(0x0F); 
000234  200f              MOVS     r0,#0xf
000236  f7fffffe          BL       SSD1963Data_8
;;;291           Delay(20);
00023a  2014              MOVS     r0,#0x14
00023c  f7fffffe          BL       Delay
;;;292        
;;;293    	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
000240  20ba              MOVS     r0,#0xba
000242  f7fffffe          BL       SSD1963Command_8
;;;294    	   SSD1963Data_8(0x0e);
000246  200e              MOVS     r0,#0xe
000248  f7fffffe          BL       SSD1963Data_8
;;;295    	   Delay(5);   
00024c  2005              MOVS     r0,#5
00024e  f7fffffe          BL       Delay
;;;296    	   
;;;297    	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
000252  20ba              MOVS     r0,#0xba
000254  f7fffffe          BL       SSD1963Command_8
;;;298    	   SSD1963Data_8(0x0F); 
000258  200f              MOVS     r0,#0xf
00025a  f7fffffe          BL       SSD1963Data_8
;;;299    //	   Delay(5);
;;;300    
;;;301    //////////////=============================================================================
;;;302        LCD2353INITTION();
00025e  e8bd47f0          POP      {r4-r10,lr}
000262  f7ffbffe          B.W      LCD2353INITTION
;;;303    //    GPIO_SetBits(GPIOA, GPIO_Pin_8);      ////////exit sleep
;;;304        
;;;305    //////////////ÔÚSSD1963µÄI/O¹¤×÷Õý³£ºó¿ÉÒÔ¶ÔSSD2825½øÐÐÅäÖÃ¡£ÒÔ±ãºóÐø¶ÔIC½øÐÐ³õÊ¼»¯ÅäÖÃ
;;;306    //	value_HighSpeed = DotclkValue*24*12/value_Lane_select/10;      /////Alan  add  2016-9-7   ±¶ÂÊ1.2
;;;307    //	
;;;308    //	//¶ÔHX8369 IC½øÐÐ³õÊ¼»¯
;;;309    //	SSD1963INITSSD2825(); 
;;;310    
;;;311    ////	while(READ_IC(0X0a,0x00)!=0x08)
;;;312    ////	{
;;;313    ////	   Delay(20);
;;;314    ////	}
;;;315    //	ENTER_LP_mode(); 
;;;316    
;;;317    //	INITIALOTM8018B();					   /////GPM1461A0  USE
;;;318    ////	SSD2825_CLAN043LL_SC7789_A();
;;;319    ////	SSD2825INITIAL_HX8369B();
;;;320    /////////////´Ë´¦¶ÔSSD2825ÖØÐÂÅäÖÃÎªVIDEOÄ£Ê½£¬Ò»¶¨ÒªÔÚSSD1963Ê±ÐòÉú³ÉOKºó½øÐÐÅäÖÃ2825£¬
;;;321    //	VIDEO_ON();
;;;322    
;;;323    }
;;;324    
                          ENDP

000266  0000              DCW      0x0000
                  |L53.616|
                          DCD      ||.data||
                  |L53.620|
                          DCD      0x000f4240
                  |L53.624|
                          DCD      0x028f5c29
                  |L53.628|
                          DCD      0x4001080c

                          AREA ||i.STM32_SSD1963_Init_QC||, CODE, READONLY, ALIGN=2

                  STM32_SSD1963_Init_QC PROC
;;;324    
;;;325    void STM32_SSD1963_Init_QC(void) //Initializes the SSD1963.
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;326    { 
;;;327    	u16   VT,HT,VPS,HPS;
;;;328    	float temp ;
;;;329    	u32  LCDC_FPR;
;;;330    	
;;;331    	
;;;332    	VT=VBP+VFP+VDP;
000004  4ca5              LDR      r4,|L54.668|
000006  89a7              LDRH     r7,[r4,#0xc]  ; VBP
000008  89e0              LDRH     r0,[r4,#0xe]  ; VFP
00000a  8961              LDRH     r1,[r4,#0xa]  ; VDP
00000c  4438              ADD      r0,r0,r7
00000e  4408              ADD      r0,r0,r1
000010  b286              UXTH     r6,r0
;;;333    	HT=HBP+HFP+HDP;
000012  f8b49012          LDRH     r9,[r4,#0x12]  ; HBP
000016  8aa0              LDRH     r0,[r4,#0x14]  ; HFP
000018  8a21              LDRH     r1,[r4,#0x10]  ; HDP
00001a  4448              ADD      r0,r0,r9
00001c  4408              ADD      r0,r0,r1
00001e  fa1ffa80          UXTH     r10,r0
;;;334    	HPS=HBP;
;;;335    	VPS=VBP;
;;;336    	
;;;337    	DotclkValue = Frame_rate*HT*VT/1000000;  
000022  7820              LDRB     r0,[r4,#0]  ; Frame_rate
000024  499e              LDR      r1,|L54.672|
000026  fb00f00a          MUL      r0,r0,r10
00002a  4370              MULS     r0,r6,r0
00002c  fb90f0f1          SDIV     r0,r0,r1
000030  b2c0              UXTB     r0,r0
000032  7060              STRB     r0,[r4,#1]
;;;338    	
;;;339    	temp=((DotclkValue<<20)/100-1);
000034  499b              LDR      r1,|L54.676|
000036  0500              LSLS     r0,r0,#20
000038  fba11000          UMULL    r1,r0,r1,r0
00003c  1e40              SUBS     r0,r0,#1
00003e  f7fffffe          BL       __aeabi_i2f
;;;340    	LCDC_FPR=(u32)temp;
000042  f7fffffe          BL       __aeabi_f2uiz
000046  4680              MOV      r8,r0
;;;341    	
;;;342    	Delay(5);
000048  2005              MOVS     r0,#5
00004a  f7fffffe          BL       Delay
;;;343    	/* Configure the LCD Control pins -LCD Ïà¹Ø¿ØÖÆ¶Ë¿Ú³õÊ¼»¯----------------------*/
;;;344    	LCD_CtrlLinesConfig();
00004e  f7fffffe          BL       LCD_CtrlLinesConfig
;;;345    	
;;;346    	Delay(5); /* delay 50 ms */
000052  2005              MOVS     r0,#5
000054  f7fffffe          BL       Delay
;;;347      
;;;348    /* Start Initial Sequence ----------------------------------------------------*/
;;;349    {//³õÊ¼»¯SSD1963    
;;;350    	
;;;351    	LCD_RST(0);//Ó²¼þ¸´Î»
000058  4d93              LDR      r5,|L54.680|
00005a  6828              LDR      r0,[r5,#0]
00005c  f0200001          BIC      r0,r0,#1
000060  6028              STR      r0,[r5,#0]
;;;352    	         SSD1963_CS(1); 
000062  6828              LDR      r0,[r5,#0]
000064  f0400004          ORR      r0,r0,#4
000068  6028              STR      r0,[r5,#0]
;;;353    	         LCD_RS(1); 
00006a  6828              LDR      r0,[r5,#0]
00006c  f0400008          ORR      r0,r0,#8
000070  6028              STR      r0,[r5,#0]
;;;354    	         LCD_WR(1); 
000072  6828              LDR      r0,[r5,#0]
000074  f0400020          ORR      r0,r0,#0x20
000078  6028              STR      r0,[r5,#0]
;;;355    			 LCD_RD(1);	LCD_CS(0);
00007a  6828              LDR      r0,[r5,#0]
00007c  f0400010          ORR      r0,r0,#0x10
000080  6028              STR      r0,[r5,#0]
000082  6828              LDR      r0,[r5,#0]
000084  f0200002          BIC      r0,r0,#2
000088  6028              STR      r0,[r5,#0]
;;;356    	Delay(5);
00008a  2005              MOVS     r0,#5
00008c  f7fffffe          BL       Delay
;;;357    	LCD_RST(1) ;
000090  6828              LDR      r0,[r5,#0]
000092  f0400001          ORR      r0,r0,#1
000096  6028              STR      r0,[r5,#0]
;;;358    	LCD_RD(1);
000098  6828              LDR      r0,[r5,#0]
00009a  f0400010          ORR      r0,r0,#0x10
00009e  6028              STR      r0,[r5,#0]
;;;359    	Delay(20);
0000a0  2014              MOVS     r0,#0x14
0000a2  f7fffffe          BL       Delay
;;;360    
;;;361    	{
;;;362    	  //software reset
;;;363    	   SSD1963Command_8(0x01); 
0000a6  2001              MOVS     r0,#1
0000a8  f7fffffe          BL       SSD1963Command_8
;;;364    	   Delay(20);
0000ac  2014              MOVS     r0,#0x14
0000ae  f7fffffe          BL       Delay
;;;365    //	   SSD1963Command_8(0x01); 
;;;366    //	   Delay(20);   
;;;367    	                       
;;;368    	   //set_pixel_data_interface-ÉèÖÃMCUµ½1963µÄÊý¾Ý¸ñÊ½
;;;369    	   SSD1963Command_8(0xf0);
0000b2  20f0              MOVS     r0,#0xf0
0000b4  f7fffffe          BL       SSD1963Command_8
;;;370    	   SSD1963Data_8(0x00);   //0x00: 8-bit; 0x03:16-bit (565 format)
0000b8  2000              MOVS     r0,#0
0000ba  f7fffffe          BL       SSD1963Data_8
;;;371    	   
;;;372    	     
;;;373    	    
;;;374    	   //set_pll_mn;  m= 3 m= 2  ÉèÖÃ1963ÄÚ²¿PLL£¬»ù±¾²»ÐëÐÞ¸Ä
;;;375    	   SSD1963Command_8(0xe2); //VCO = Reference input clock x (M + 1);PLL frequency = VCO / (N + 1)
0000be  20e2              MOVS     r0,#0xe2
0000c0  f7fffffe          BL       SSD1963Command_8
;;;376    	   //* Note : 250MHz < VCO < 800MHz     
;;;377    	   SSD1963Data_8(49);   //Multiplier (M) of PLL. (POR = 00101101) ,M<256
0000c4  2031              MOVS     r0,#0x31
0000c6  f7fffffe          BL       SSD1963Data_8
;;;378    	   SSD1963Data_8(3);   //Divider (N) of PLL. (POR = 0011),N<16
0000ca  2003              MOVS     r0,#3
0000cc  f7fffffe          BL       SSD1963Data_8
;;;379    	   SSD1963Data_8(0x04); // Effectuate the multiplier and divider value
0000d0  2004              MOVS     r0,#4
0000d2  f7fffffe          BL       SSD1963Data_8
;;;380    	   
;;;381    	   //Start the PLL. Before the start, the system was operated with the crystal oscillator or clock input.
;;;382    	   SSD1963Command_8(0xe0);
0000d6  20e0              MOVS     r0,#0xe0
0000d8  f7fffffe          BL       SSD1963Command_8
;;;383    	   SSD1963Data_8(0x01);
0000dc  2001              MOVS     r0,#1
0000de  f7fffffe          BL       SSD1963Data_8
;;;384    	   Delay(10);
0000e2  200a              MOVS     r0,#0xa
0000e4  f7fffffe          BL       Delay
;;;385    	   SSD1963Command_8(0xe0);  
0000e8  20e0              MOVS     r0,#0xe0
0000ea  f7fffffe          BL       SSD1963Command_8
;;;386    	   SSD1963Data_8(0x03); 
0000ee  2003              MOVS     r0,#3
0000f0  f7fffffe          BL       SSD1963Data_8
;;;387    		Delay(28);
0000f4  201c              MOVS     r0,#0x1c
0000f6  f7fffffe          BL       Delay
;;;388    
;;;389    
;;;390    	   //dotclk setting,Set the LSHIFT (pixel clock) frequency --For parallel LCD interface:
;;;391    	   SSD1963Command_8(0xe6);  //:Configure the pixel clock 
0000fa  20e6              MOVS     r0,#0xe6
0000fc  f7fffffe          BL       SSD1963Command_8
;;;392    	   // For parallel LCD interface DOTCLK Freq =PLL freq x ((LCDC_FPR + 1) / 1048576)
;;;393    	   SSD1963Data_8(LCDC_FPR>>16);
000100  f3c84007          UBFX     r0,r8,#16,#8
000104  f7fffffe          BL       SSD1963Data_8
;;;394    	   SSD1963Data_8(LCDC_FPR>>8); 
000108  f3c82007          UBFX     r0,r8,#8,#8
00010c  f7fffffe          BL       SSD1963Data_8
;;;395    	   SSD1963Data_8(LCDC_FPR);
000110  f00800ff          AND      r0,r8,#0xff
000114  f7fffffe          BL       SSD1963Data_8
;;;396    	
;;;397    	
;;;398    	   //Set_lcd_mode,Panel setting
;;;399    	   SSD1963Command_8(0xb0);  // Delay(10);
000118  20b0              MOVS     r0,#0xb0
00011a  f7fffffe          BL       SSD1963Command_8
;;;400    	   SSD1963Data_8(0x30);   // Set the LCD panel mode and resolution;TFT color depth enhancement enable;;
00011e  2030              MOVS     r0,#0x30
000120  f7fffffe          BL       SSD1963Data_8
;;;401    	   //LSHIFT polarity;Set the horizontal sync pulse polarity;LFRAME polarity (POR = 0)
;;;402    	   //´Ë´¦vs hs dotclkµÄ¼«ÐÔÉèÖÃÓÚ1963¹æ¸ñÊéËµÃ÷Ïà·´£¬¹À¼Æ×ÊÁÏ´íÎó
;;;403    	   SSD1963Data_8(0x00);   //B[7] : LCD panel mode (POR = 0)
000124  2000              MOVS     r0,#0
000126  f7fffffe          BL       SSD1963Data_8
;;;404    	                          //     0 Hsync+Vsync +DE mode
;;;405    	                          //     1 TTL mode
;;;406    	                          // B[6:5] : TFT type (POR = 01)
;;;407    	                          //  00, 01 TFT mode
;;;408    	                         //  10 Serial RGB mode
;;;409    	                         //  11 Serial RGB+dummy mode
;;;410    	   
;;;411    	   //Horizontal panel size = (HDP + 1) pixels
;;;412    	   SSD1963Data_8((HDP-1)>>8); //High byte of the horizontal panel size       
00012a  8a20              LDRH     r0,[r4,#0x10]  ; HDP
00012c  1e40              SUBS     r0,r0,#1
00012e  f3c02007          UBFX     r0,r0,#8,#8
000132  f7fffffe          BL       SSD1963Data_8
;;;413    	   SSD1963Data_8(HDP-1);  //Low byte of the horizontal panel size;
000136  7c20              LDRB     r0,[r4,#0x10]  ; HDP
000138  1e40              SUBS     r0,r0,#1
00013a  b2c0              UXTB     r0,r0
00013c  f7fffffe          BL       SSD1963Data_8
;;;414    	   
;;;415    	   SSD1963Data_8((VDP-1)>>8); //High byte of the vertical panel size
000140  8960              LDRH     r0,[r4,#0xa]  ; VDP
000142  1e40              SUBS     r0,r0,#1
000144  f3c02007          UBFX     r0,r0,#8,#8
000148  f7fffffe          BL       SSD1963Data_8
;;;416    	   //Vertical panel size = (VDP + 1) lines
;;;417    	   SSD1963Data_8(VDP-1); //Low byte of the vertical panel size (POR = 11011111)
00014c  7aa0              LDRB     r0,[r4,#0xa]  ; VDP
00014e  1e40              SUBS     r0,r0,#1
000150  b2c0              UXTB     r0,r0
000152  f7fffffe          BL       SSD1963Data_8
;;;418    	   
;;;419    	   SSD1963Data_8(0x23); //RGB sequence for serial TFT interface
000156  2023              MOVS     r0,#0x23
000158  f7fffffe          BL       SSD1963Data_8
;;;420    	
;;;421    	   //hsync setting
;;;422    	   SSD1963Command_8(0xb4); 
00015c  20b4              MOVS     r0,#0xb4
00015e  f7fffffe          BL       SSD1963Command_8
;;;423    	   SSD1963Data_8((HT-1)>>8);  //HT[10:8];(display + non-display),
000162  f1aa0501          SUB      r5,r10,#1
000166  f3c52007          UBFX     r0,r5,#8,#8
00016a  f7fffffe          BL       SSD1963Data_8
;;;424    	   SSD1963Data_8(HT-1);   //HT[7:0];Horizontal total period = (HT + 1) pixels
00016e  b2e8              UXTB     r0,r5
000170  f7fffffe          BL       SSD1963Data_8
;;;425    	   SSD1963Data_8(HPS>>8);  //HPS[10:8] : High byte of the non-display period between the start of the horizontal sync (LLINE) signal and the first display data. (POR = 000)
000174  ea4f2019          LSR      r0,r9,#8
000178  f7fffffe          BL       SSD1963Data_8
;;;426    	   SSD1963Data_8(HPS);   //HPS[7:0]
00017c  f00900ff          AND      r0,r9,#0xff
000180  f7fffffe          BL       SSD1963Data_8
;;;427    	   SSD1963Data_8(HPW);   //HPW[6:0] : Set the horizontal sync pulse width (LLINE) in pixel clock. (POR = 000111)
000184  7e20              LDRB     r0,[r4,#0x18]  ; HPW
000186  f7fffffe          BL       SSD1963Data_8
;;;428    	                          //Horizontal Sync Pulse Width = (HPW + 1) pixels
;;;429    	   SSD1963Data_8(0x00);  //LPS[10:8] :Set the horizontal sync pulse (LLINE) start location in pixel clock. (POR = 000)
00018a  2000              MOVS     r0,#0
00018c  f7fffffe          BL       SSD1963Data_8
;;;430    	   SSD1963Data_8(0x00);   //LPS[7:0] :Set the horizontal sync pulse width (LLINE) in start. (POR = 00000000)
000190  2000              MOVS     r0,#0
000192  f7fffffe          BL       SSD1963Data_8
;;;431    	   SSD1963Data_8(0x00);  //Set the horizontal sync pulse subpixel start position (POR = 00)
000196  2000              MOVS     r0,#0
000198  f7fffffe          BL       SSD1963Data_8
;;;432    	
;;;433    	   
;;;434    	
;;;435    	   //vsync setting
;;;436    	   SSD1963Command_8(0xb6); //Set the vertical blanking interval between last scan line and next LFRAME pulse
00019c  20b6              MOVS     r0,#0xb6
00019e  f7fffffe          BL       SSD1963Command_8
;;;437    	   SSD1963Data_8(VT>>8);    //VT:High byte of the vertical total (display + non-display) period in lines (POR = 001)
0001a2  0a30              LSRS     r0,r6,#8
0001a4  f7fffffe          BL       SSD1963Data_8
;;;438    	   SSD1963Data_8(VT-1);   //Low byte of the vertical total (display + non-display) period in lines (POR = 11101111)
0001a8  1e70              SUBS     r0,r6,#1
0001aa  b2c0              UXTB     r0,r0
0001ac  f7fffffe          BL       SSD1963Data_8
;;;439    	                          //Vertical Total = (VT + 1) lines
;;;440    	   SSD1963Data_8(VPS>>8);    //VPS[10:8] :High byte the non-display period in lines between the start of the frame and the first display data in line.
0001b0  0a38              LSRS     r0,r7,#8
0001b2  f7fffffe          BL       SSD1963Data_8
;;;441    	   SSD1963Data_8(VPS);     //VPS[7:0] :The non-display period in lines between the start of the frame and the first display data in line.
0001b6  b2f8              UXTB     r0,r7
0001b8  f7fffffe          BL       SSD1963Data_8
;;;442    	                          //Vertical Sync Pulse Start Position = VPS lines
;;;443    	   SSD1963Data_8(VPW);    //VPW[6:0] :Set the vertical sync pulse width (LFRAME) in lines. (POR = 000001)
0001bc  7da0              LDRB     r0,[r4,#0x16]  ; VPW
0001be  f7fffffe          BL       SSD1963Data_8
;;;444    	                          //Vertical Sync Pulse Width = (VPW + 1) lines
;;;445    	   SSD1963Data_8(0x00);   // FPS[10:8] : High byte of the vertical sync pulse (LFRAME) start location in lines. (POR = 000)
0001c2  2000              MOVS     r0,#0
0001c4  f7fffffe          BL       SSD1963Data_8
;;;446    	   SSD1963Data_8(0x00);   // FPS[7:0] :Low byte of the vertical sync pulse (LFRAME) start location in lines. (POR = 00000000)
0001c8  2000              MOVS     r0,#0
0001ca  f7fffffe          BL       SSD1963Data_8
;;;447    	                           //Vertical Display Period Start Position = FPS lines 
;;;448    	
;;;449    	    
;;;450    	
;;;451    	   SSD1963Command_8(0x36);//Set the read order from host processor to frame buffer by A[7:5] and A[3] and from frame buffer to the display panel by A[2:0] and A[4].
0001ce  2036              MOVS     r0,#0x36
0001d0  f7fffffe          BL       SSD1963Command_8
;;;452    	   SSD1963Data_8(0x00);   //Êý¾Ý²Ù×÷Ë³ÐòÎª×óÖÁÓÒ£¬´ÓÉÏµ½ÏÂ
0001d4  2000              MOVS     r0,#0
0001d6  f7fffffe          BL       SSD1963Data_8
;;;453    	
;;;454    	  
;;;455    	   SSD1963Command_8(0x29); ////display on
0001da  2029              MOVS     r0,#0x29
0001dc  f7fffffe          BL       SSD1963Command_8
;;;456    	     
;;;457    	 
;;;458    	   SSD1963Command_8(0x2a);  //Set the column address of frame buffer
0001e0  202a              MOVS     r0,#0x2a
0001e2  f7fffffe          BL       SSD1963Command_8
;;;459    	   SSD1963Data_8(0x00);
0001e6  2000              MOVS     r0,#0
0001e8  f7fffffe          BL       SSD1963Data_8
;;;460    	   SSD1963Data_8(0x00);
0001ec  2000              MOVS     r0,#0
0001ee  f7fffffe          BL       SSD1963Data_8
;;;461    	   SSD1963Data_8(0x1);
0001f2  2001              MOVS     r0,#1
0001f4  f7fffffe          BL       SSD1963Data_8
;;;462    	   SSD1963Data_8(0x67);// 
0001f8  2067              MOVS     r0,#0x67
0001fa  f7fffffe          BL       SSD1963Data_8
;;;463    	
;;;464    	   //row start_end
;;;465    	   SSD1963Command_8(0x2b);   //Set the page address of the frame
0001fe  202b              MOVS     r0,#0x2b
000200  f7fffffe          BL       SSD1963Command_8
;;;466    	   SSD1963Data_8(0x00);
000204  2000              MOVS     r0,#0
000206  f7fffffe          BL       SSD1963Data_8
;;;467    	   SSD1963Data_8(0x00);
00020a  2000              MOVS     r0,#0
00020c  f7fffffe          BL       SSD1963Data_8
;;;468    	   SSD1963Data_8(0x02);
000210  2002              MOVS     r0,#2
000212  f7fffffe          BL       SSD1963Data_8
;;;469    	   SSD1963Data_8(0x7f);// 
000216  207f              MOVS     r0,#0x7f
000218  f7fffffe          BL       SSD1963Data_8
;;;470    	}
;;;471    	} 
;;;472    	SSD1963Command_8(0xB8);  //Set the GPIOs configuration. If the GPIOs are not used for LCD, set the direction. Otherwise, they are toggled with  LCD signals by 0xC0 ¨C 0xCF.
00021c  20b8              MOVS     r0,#0xb8
00021e  f7fffffe          BL       SSD1963Command_8
;;;473    	    SSD1963Data_8(0x0F);     //
000222  200f              MOVS     r0,#0xf
000224  f7fffffe          BL       SSD1963Data_8
;;;474    	    SSD1963Data_8(0x01);     //
000228  2001              MOVS     r0,#1
00022a  f7fffffe          BL       SSD1963Data_8
;;;475    	  
;;;476    	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
00022e  20ba              MOVS     r0,#0xba
000230  f7fffffe          BL       SSD1963Command_8
;;;477    	   SSD1963Data_8(0x0e);
000234  200e              MOVS     r0,#0xe
000236  f7fffffe          BL       SSD1963Data_8
;;;478    	   Delay(5);   
00023a  2005              MOVS     r0,#5
00023c  f7fffffe          BL       Delay
;;;479    	   
;;;480    	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
000240  20ba              MOVS     r0,#0xba
000242  f7fffffe          BL       SSD1963Command_8
;;;481    	   SSD1963Data_8(0x0F); 
000246  200f              MOVS     r0,#0xf
000248  f7fffffe          BL       SSD1963Data_8
;;;482    	   Delay(20);
00024c  2014              MOVS     r0,#0x14
00024e  f7fffffe          BL       Delay
;;;483    
;;;484    ////////////=============================================================================
;;;485    ////////////ÔÚSSD1963µÄI/O¹¤×÷Õý³£ºó¿ÉÒÔ¶ÔSSD2825½øÐÐÅäÖÃ¡£ÒÔ±ãºóÐø¶ÔIC½øÐÐ³õÊ¼»¯ÅäÖÃ
;;;486    	value_HighSpeed = DotclkValue*24*12/value_Lane_select/10;      /////Alan  add  2016-9-7   ±¶ÂÊ1.2
000252  7860              LDRB     r0,[r4,#1]  ; DotclkValue
000254  eb0000c0          ADD      r0,r0,r0,LSL #3
000258  0141              LSLS     r1,r0,#5
00025a  8920              LDRH     r0,[r4,#8]  ; value_Lane_select
00025c  eb000080          ADD      r0,r0,r0,LSL #2
000260  0040              LSLS     r0,r0,#1
000262  fbb1f0f0          UDIV     r0,r1,r0
000266  80e0              STRH     r0,[r4,#6]
;;;487    	
;;;488    	//¶ÔHX8369 IC½øÐÐ³õÊ¼»¯
;;;489    	SSD1963INITSSD2825(); 
000268  f7fffffe          BL       SSD1963INITSSD2825
00026c  20b7              MOVS     r0,#0xb7
00026e  f7fffffe          BL       SSD1963GPIOOUTCOM
000272  f2407052          MOV      r0,#0x752
000276  f7fffffe          BL       SSD1963GPIOOUTDATA_16
00027a  2001              MOVS     r0,#1
00027c  f7fffffe          BL       Delay
;;;490    
;;;491    //	while(READ_IC(0X0a,0x00)!=0x08)
;;;492    //	{
;;;493    //	   Delay(20);
;;;494    //	}
;;;495    	ENTER_LP_mode(); 
;;;496    
;;;497    	INITIALOTM8018B_QC();					   /////GPM1461A0  USE
000280  f7fffffe          BL       INITIALOTM8018B_QC
000284  20b7              MOVS     r0,#0xb7
000286  f7fffffe          BL       SSD1963GPIOOUTCOM
00028a  f240700b          MOV      r0,#0x70b
00028e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000292  e8bd47f0          POP      {r4-r10,lr}
000296  2005              MOVS     r0,#5
000298  f7ffbffe          B.W      Delay
;;;498    //	SSD2825_CLAN043LL_SC7789_A();
;;;499    //	SSD2825INITIAL_HX8369B();
;;;500    ///////////´Ë´¦¶ÔSSD2825ÖØÐÂÅäÖÃÎªVIDEOÄ£Ê½£¬Ò»¶¨ÒªÔÚSSD1963Ê±ÐòÉú³ÉOKºó½øÐÐÅäÖÃ2825£¬
;;;501    	VIDEO_ON();
;;;502    
;;;503    }
;;;504    
                          ENDP

                  |L54.668|
                          DCD      ||.data||
                  |L54.672|
                          DCD      0x000f4240
                  |L54.676|
                          DCD      0x028f5c29
                  |L54.680|
                          DCD      0x4001080c

                          AREA ||i.Soft_reset||, CODE, READONLY, ALIGN=1

                  Soft_reset PROC
;;;2471   
;;;2472   void Soft_reset(void)
000000  b510              PUSH     {r4,lr}
;;;2473   {
;;;2474   	SSD1963Command_8(0xB8);  //Set the GPIOs configuration. If the GPIOs are not used for LCD, set the direction. Otherwise, they are toggled with  LCD signals by 0xC0 ¨C 0xCF.
000002  20b8              MOVS     r0,#0xb8
000004  f7fffffe          BL       SSD1963Command_8
;;;2475   	    SSD1963Data_8(0x0F);     //
000008  200f              MOVS     r0,#0xf
00000a  f7fffffe          BL       SSD1963Data_8
;;;2476   	    SSD1963Data_8(0x01);     //
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       SSD1963Data_8
;;;2477   	  
;;;2478   	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
000014  20ba              MOVS     r0,#0xba
000016  f7fffffe          BL       SSD1963Command_8
;;;2479   	   SSD1963Data_8(0x0e);
00001a  200e              MOVS     r0,#0xe
00001c  f7fffffe          BL       SSD1963Data_8
;;;2480   	   Delay(1);   
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       Delay
;;;2481   	   
;;;2482   	   SSD1963Command_8(0xba);  //Set GPIO value for GPIO configured as output,4¸öGPIOÈ«²¿Êä³ö1
000026  20ba              MOVS     r0,#0xba
000028  f7fffffe          BL       SSD1963Command_8
;;;2483   	   SSD1963Data_8(0x0F); 
00002c  200f              MOVS     r0,#0xf
00002e  f7fffffe          BL       SSD1963Data_8
;;;2484   	   Delay(15);
000032  200f              MOVS     r0,#0xf
000034  f7fffffe          BL       Delay
;;;2485   
;;;2486   ////////////=============================================================================
;;;2487   ////////////ÔÚSSD1963µÄI/O¹¤×÷Õý³£ºó¿ÉÒÔ¶ÔSSD2825½øÐÐÅäÖÃ¡£ÒÔ±ãºóÐø¶ÔIC½øÐÐ³õÊ¼»¯ÅäÖÃ
;;;2488   	
;;;2489   	//¶ÔHX8369 IC½øÐÐ³õÊ¼»¯
;;;2490   	SSD1963INITSSD2825(); 
000038  f7fffffe          BL       SSD1963INITSSD2825
;;;2491   
;;;2492   	INITIALOTM8018B_QC();					   /////GPM1461A0  USE
00003c  f7fffffe          BL       INITIALOTM8018B_QC
000040  20b7              MOVS     r0,#0xb7
000042  f7fffffe          BL       SSD1963GPIOOUTCOM
000046  f240700b          MOV      r0,#0x70b
00004a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
00004e  e8bd4010          POP      {r4,lr}
000052  2005              MOVS     r0,#5
000054  f7ffbffe          B.W      Delay
;;;2493   //	SSD2825_CLAN043LL_SC7789_A();
;;;2494   //	SSD2825INITIAL_HX8369B();
;;;2495   ///////////´Ë´¦¶ÔSSD2825ÖØÐÂÅäÖÃÎªVIDEOÄ£Ê½£¬Ò»¶¨ÒªÔÚSSD1963Ê±ÐòÉú³ÉOKºó½øÐÐÅäÖÃ2825£¬
;;;2496   	VIDEO_ON();
;;;2497   }
;;;2498   
                          ENDP


                          AREA ||i.TC358768_DCS_write_1A_0P||, CODE, READONLY, ALIGN=1

                  TC358768_DCS_write_1A_0P PROC
;;;1152   *******************************************************************************/
;;;1153   void TC358768_DCS_write_1A_0P(u8 cmd,u8 cmd1)
000000  b570              PUSH     {r4-r6,lr}
;;;1154   {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;1155   
;;;1156   	//////#password(Enable user command) 
;;;1157   			SSD1963GPIOOUTCOM(0xBC);		               
000006  20bc              MOVS     r0,#0xbc
000008  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1158   	SSD1963GPIOOUTDATA_16(0x0004);						 
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1159   			SSD1963GPIOOUTCOM(0xbf);
000012  20bf              MOVS     r0,#0xbf
000014  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1160   	SSD1963GPIOOUTDATA_18(0xB9);
000018  20b9              MOVS     r0,#0xb9
00001a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1161   	SSD1963GPIOOUTDATA_18(0xf1);	  //
00001e  20f1              MOVS     r0,#0xf1
000020  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1162   	SSD1963GPIOOUTDATA_18(0x08);	  //
000024  2008              MOVS     r0,#8
000026  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1163   	SSD1963GPIOOUTDATA_18(0x00);
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1164   //	Delay(1);
;;;1165   //	//////#password(Disable user command) 
;;;1166   //			SSD1963GPIOOUTCOM(0xBC);		               
;;;1167   //	SSD1963GPIOOUTDATA_16(0x0004);						 
;;;1168   //			SSD1963GPIOOUTCOM(0xbf);
;;;1169   //	SSD1963GPIOOUTDATA_18(0xB9);
;;;1170   //	SSD1963GPIOOUTDATA_18(0x00);
;;;1171   //	SSD1963GPIOOUTDATA_18(0x00);
;;;1172   //	SSD1963GPIOOUTDATA_18(0x00);
;;;1173   
;;;1174   	SSD1963GPIOOUTCOM(0xBC);		               
000030  20bc              MOVS     r0,#0xbc
000032  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1175   	SSD1963GPIOOUTDATA_16(0x0001);						 
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1176   			SSD1963GPIOOUTCOM(0xbf);
00003c  20bf              MOVS     r0,#0xbf
00003e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1177   	SSD1963GPIOOUTDATA_18(cmd);
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;1178   	SSD1963GPIOOUTDATA_18(cmd1);
000048  4620              MOV      r0,r4
00004a  e8bd4070          POP      {r4-r6,lr}
00004e  f7ffbffe          B.W      SSD1963GPIOOUTDATA_18
;;;1179   
;;;1180   }
;;;1181   /*******************************************************************************
                          ENDP


                          AREA ||i.VIDEO_ON||, CODE, READONLY, ALIGN=1

                  VIDEO_ON PROC
;;;1531   
;;;1532   void VIDEO_ON(void)
000000  b510              PUSH     {r4,lr}
;;;1533   {
;;;1534   			SSD1963GPIOOUTCOM(0xb7);		//Generic mode, HS video mode 
000002  20b7              MOVS     r0,#0xb7
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;1535   		SSD1963GPIOOUTDATA_16(0x070B);
000008  f240700b          MOV      r0,#0x70b
00000c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;1536   		
;;;1537   		Delay(5);
000010  e8bd4010          POP      {r4,lr}
000014  2005              MOVS     r0,#5
000016  f7ffbffe          B.W      Delay
;;;1538   }
;;;1539   
                          ENDP


                          AREA ||i.enter_sleep_mode||, CODE, READONLY, ALIGN=1

                  enter_sleep_mode PROC
;;;2376   
;;;2377   void enter_sleep_mode(void)
000000  b510              PUSH     {r4,lr}
000002  20b7              MOVS     r0,#0xb7
000004  f7fffffe          BL       SSD1963GPIOOUTCOM
000008  f2407052          MOV      r0,#0x752
00000c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       Delay
;;;2378   {
;;;2379   	ENTER_LP_mode(); //enter  LP mode
;;;2380   ////////ic  display off  and  in sleep mode  setting
;;;2381   
;;;2382   //	SSD1963GPIOOUTCOM(0xBC);
;;;2383   //	SSD1963GPIOOUTDATA_8(0x01,0x00);
;;;2384   //			SSD1963GPIOOUTCOM(0xbf); 
;;;2385   //	SSD1963GPIOOUTDATA_8(0x28,0x00);
;;;2386   //	Delay(15);
;;;2387   
;;;2388   	SSD1963GPIOOUTCOM(0xBC);		               
000016  20bc              MOVS     r0,#0xbc
000018  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2389   	SSD1963GPIOOUTDATA_16(0x0001);						 
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2390   			SSD1963GPIOOUTCOM(0xbf);
000022  20bf              MOVS     r0,#0xbf
000024  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2391   	SSD1963GPIOOUTDATA_18(0x28);
000028  2028              MOVS     r0,#0x28
00002a  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2392   	SSD1963GPIOOUTDATA_18(0x00);
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2393   	Delay(15);
000034  200f              MOVS     r0,#0xf
000036  f7fffffe          BL       Delay
;;;2394   
;;;2395   	SSD1963GPIOOUTCOM(0xBC);		               
00003a  20bc              MOVS     r0,#0xbc
00003c  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2396   	SSD1963GPIOOUTDATA_16(0x0001);						 
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2397   			SSD1963GPIOOUTCOM(0xbf);
000046  20bf              MOVS     r0,#0xbf
000048  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2398   	SSD1963GPIOOUTDATA_18(0x10);
00004c  2010              MOVS     r0,#0x10
00004e  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2399   	SSD1963GPIOOUTDATA_18(0x00);
000052  2000              MOVS     r0,#0
000054  f7fffffe          BL       SSD1963GPIOOUTDATA_18
;;;2400   	Delay(5);
000058  2005              MOVS     r0,#5
00005a  f7fffffe          BL       Delay
;;;2401   
;;;2402   //	SSD1963GPIOOUTCOM(0xBC);
;;;2403   //	SSD1963GPIOOUTDATA_8(0x01,0x00);
;;;2404   //			SSD1963GPIOOUTCOM(0xbf); 
;;;2405   //	SSD1963GPIOOUTDATA_8(0x10,0x00);
;;;2406   //	Delay(5);
;;;2407   
;;;2408   	 SSD1963GPIOOUTCOM(0xBC);				 	//soft reset  need mini 5ms
00005e  20bc              MOVS     r0,#0xbc
000060  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2409   	SSD1963GPIOOUTDATA_8(0x01,0x00);
000064  2100              MOVS     r1,#0
000066  2001              MOVS     r0,#1
000068  f7fffffe          BL       SSD1963GPIOOUTDATA_8
;;;2410   			SSD1963GPIOOUTCOM(0xbf); 
00006c  20bf              MOVS     r0,#0xbf
00006e  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2411   	SSD1963GPIOOUTDATA_8(0x01,0x00);
000072  2100              MOVS     r1,#0
000074  2001              MOVS     r0,#1
000076  f7fffffe          BL       SSD1963GPIOOUTDATA_8
;;;2412   	Delay(20); 
00007a  2014              MOVS     r0,#0x14
00007c  f7fffffe          BL       Delay
;;;2413   
;;;2414   
;;;2415     //2825 CHANGE MODE  IN SLEEP
;;;2416   	SSD1963GPIOOUTCOM(0xc0);		  //SSD2825 SOFT RESET
000080  20c0              MOVS     r0,#0xc0
000082  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2417   		SSD1963GPIOOUTDATA_16(0x0100);
000086  f44f7080          MOV      r0,#0x100
00008a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2418   		Delay(20);
00008e  2014              MOVS     r0,#0x14
000090  f7fffffe          BL       Delay
;;;2419   
;;;2420   			SSD1963GPIOOUTCOM(0xB6);		//Video mode and video pixel format
000094  20b6              MOVS     r0,#0xb6
000096  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2421   		SSD1963GPIOOUTDATA_16(0x0006);		//18bit 
00009a  2006              MOVS     r0,#6
00009c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2422   
;;;2423   			SSD1963GPIOOUTCOM(0xDE);		
0000a0  20de              MOVS     r0,#0xde
0000a2  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2424   		SSD1963GPIOOUTDATA_16(0x0001);		//MIPI lane select  
0000a6  2001              MOVS     r0,#1
0000a8  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2425   
;;;2426   			SSD1963GPIOOUTCOM(0xd6);	
0000ac  20d6              MOVS     r0,#0xd6
0000ae  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2427   		SSD1963GPIOOUTDATA_16(0x0000);		//Color order and endianess 
0000b2  2000              MOVS     r0,#0
0000b4  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2428   
;;;2429   			SSD1963GPIOOUTCOM(0xb7);	
0000b8  20b7              MOVS     r0,#0xb7
0000ba  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2430   		SSD1963GPIOOUTDATA_16(0x0342);		//DCS mode 
0000be  f2403042          MOV      r0,#0x342
0000c2  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2431   
;;;2432   			SSD1963GPIOOUTCOM(0xb8);		//VC register 
0000c6  20b8              MOVS     r0,#0xb8
0000c8  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2433   		SSD1963GPIOOUTDATA_16(0x0080);
0000cc  2080              MOVS     r0,#0x80
0000ce  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2434   
;;;2435   		SSD1963GPIOOUTCOM(0xb9);		//PLL disable 
0000d2  20b9              MOVS     r0,#0xb9
0000d4  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2436   		SSD1963GPIOOUTDATA_16(0x0000);
0000d8  2000              MOVS     r0,#0
0000da  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2437   
;;;2438   			SSD1963GPIOOUTCOM(0xba);		//PLL setting 
0000de  20ba              MOVS     r0,#0xba
0000e0  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2439   		SSD1963GPIOOUTDATA_16(0x400A);				//Fout=(Fin/MS)*NF,MS=0,NF=8,Fout=(12/1)*8=96MHZ
0000e4  f244000a          MOV      r0,#0x400a
0000e8  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2440   
;;;2441   			SSD1963GPIOOUTCOM(0xbb);		//LP clock divider 
0000ec  20bb              MOVS     r0,#0xbb
0000ee  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2442   		SSD1963GPIOOUTDATA_16(0x0001);				//LP clock=Fout/LPD/8,LPD=2,LP clock=96/2/8=6MHZ
0000f2  2001              MOVS     r0,#1
0000f4  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2443   
;;;2444   			SSD1963GPIOOUTCOM(0xb9);		//PLL enable 
0000f8  20b9              MOVS     r0,#0xb9
0000fa  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2445   		SSD1963GPIOOUTDATA_16(0x0001);
0000fe  2001              MOVS     r0,#1
000100  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2446   
;;;2447   			SSD1963GPIOOUTCOM(0xb8);		//VC register 
000104  20b8              MOVS     r0,#0xb8
000106  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2448   		SSD1963GPIOOUTDATA_16(0x0000);
00010a  2000              MOVS     r0,#0
00010c  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2449   
;;;2450   			SSD1963GPIOOUTCOM(0xb7);		//Generic mode, HS video mode
000110  20b7              MOVS     r0,#0xb7
000112  f7fffffe          BL       SSD1963GPIOOUTCOM
;;;2451   		SSD1963GPIOOUTDATA_16(0x0314);		//
000116  f44f7045          MOV      r0,#0x314
00011a  f7fffffe          BL       SSD1963GPIOOUTDATA_16
;;;2452   
;;;2453   		Delay(20);
00011e  2014              MOVS     r0,#0x14
000120  f7fffffe          BL       Delay
;;;2454   
;;;2455   		//ssd1963 into sleep mode
;;;2456   
;;;2457   		SSD1963Command_8(0x01);
000124  2001              MOVS     r0,#1
000126  f7fffffe          BL       SSD1963Command_8
;;;2458   	   Delay(20);
00012a  2014              MOVS     r0,#0x14
00012c  f7fffffe          BL       Delay
;;;2459   
;;;2460   		SSD1963Command_8(0x10);
000130  2010              MOVS     r0,#0x10
000132  f7fffffe          BL       SSD1963Command_8
;;;2461   
;;;2462   	   Delay(2);
000136  2002              MOVS     r0,#2
000138  f7fffffe          BL       Delay
;;;2463   	   SSD1963Command_8(0xe5); 
00013c  e8bd4010          POP      {r4,lr}
000140  20e5              MOVS     r0,#0xe5
000142  f7ffbffe          B.W      SSD1963Command_8
;;;2464   
;;;2465   }
;;;2466   
                          ENDP


                          AREA ||i.exit_sleep_mode||, CODE, READONLY, ALIGN=1

                  exit_sleep_mode PROC
;;;2466   
;;;2467   void exit_sleep_mode(void)
000000  f7ffbffe          B.W      STM32_SSD1963_Init
;;;2468   {	
;;;2469   		STM32_SSD1963_Init();
;;;2470   }
;;;2471   
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  MIPI_Array
                          %        600

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  ASCII_Table
000000  00000000          DCW      0x0000,0x0000
000004  00000000          DCW      0x0000,0x0000
000008  00000000          DCW      0x0000,0x0000
00000c  00000000          DCW      0x0000,0x0000
000010  00000000          DCW      0x0000,0x0000
000014  00000000          DCW      0x0000,0x0000
000018  00000000          DCW      0x0000,0x0000
00001c  00000000          DCW      0x0000,0x0000
000020  00000000          DCW      0x0000,0x0000
000024  00000000          DCW      0x0000,0x0000
000028  00000000          DCW      0x0000,0x0000
00002c  00000000          DCW      0x0000,0x0000
000030  00000180          DCW      0x0000,0x0180
000034  01800180          DCW      0x0180,0x0180
000038  01800180          DCW      0x0180,0x0180
00003c  01800180          DCW      0x0180,0x0180
000040  01800180          DCW      0x0180,0x0180
000044  01800180          DCW      0x0180,0x0180
000048  01800180          DCW      0x0180,0x0180
00004c  00000000          DCW      0x0000,0x0000
000050  01800180          DCW      0x0180,0x0180
000054  00000000          DCW      0x0000,0x0000
000058  00000000          DCW      0x0000,0x0000
00005c  00000000          DCW      0x0000,0x0000
000060  00000000          DCW      0x0000,0x0000
000064  00cc00cc          DCW      0x00cc,0x00cc
000068  00cc00cc          DCW      0x00cc,0x00cc
00006c  00cc00cc          DCW      0x00cc,0x00cc
000070  00000000          DCW      0x0000,0x0000
000074  00000000          DCW      0x0000,0x0000
000078  00000000          DCW      0x0000,0x0000
00007c  00000000          DCW      0x0000,0x0000
000080  00000000          DCW      0x0000,0x0000
000084  00000000          DCW      0x0000,0x0000
000088  00000000          DCW      0x0000,0x0000
00008c  00000000          DCW      0x0000,0x0000
000090  00000000          DCW      0x0000,0x0000
000094  00000000          DCW      0x0000,0x0000
000098  00000000          DCW      0x0000,0x0000
00009c  0c600c60          DCW      0x0c60,0x0c60
0000a0  0c600630          DCW      0x0c60,0x0630
0000a4  06301ffe          DCW      0x0630,0x1ffe
0000a8  1ffe0630          DCW      0x1ffe,0x0630
0000ac  07380318          DCW      0x0738,0x0318
0000b0  1ffe1ffe          DCW      0x1ffe,0x1ffe
0000b4  03180318          DCW      0x0318,0x0318
0000b8  018c018c          DCW      0x018c,0x018c
0000bc  018c0000          DCW      0x018c,0x0000
0000c0  00000080          DCW      0x0000,0x0080
0000c4  03e00ff8          DCW      0x03e0,0x0ff8
0000c8  0e9c1c8c          DCW      0x0e9c,0x1c8c
0000cc  188c008c          DCW      0x188c,0x008c
0000d0  009801f8          DCW      0x0098,0x01f8
0000d4  07e00e80          DCW      0x07e0,0x0e80
0000d8  1c80188c          DCW      0x1c80,0x188c
0000dc  188c189c          DCW      0x188c,0x189c
0000e0  0cb80ff0          DCW      0x0cb8,0x0ff0
0000e4  03e00080          DCW      0x03e0,0x0080
0000e8  00800000          DCW      0x0080,0x0000
0000ec  00000000          DCW      0x0000,0x0000
0000f0  00000000          DCW      0x0000,0x0000
0000f4  0000180e          DCW      0x0000,0x180e
0000f8  0c1b0c11          DCW      0x0c1b,0x0c11
0000fc  06110611          DCW      0x0611,0x0611
000100  03110311          DCW      0x0311,0x0311
000104  019b018e          DCW      0x019b,0x018e
000108  38c06cc0          DCW      0x38c0,0x6cc0
00010c  44604460          DCW      0x4460,0x4460
000110  44304430          DCW      0x4430,0x4430
000114  44186c18          DCW      0x4418,0x6c18
000118  380c0000          DCW      0x380c,0x0000
00011c  00000000          DCW      0x0000,0x0000
000120  000001e0          DCW      0x0000,0x01e0
000124  03f00738          DCW      0x03f0,0x0738
000128  06180618          DCW      0x0618,0x0618
00012c  033001f0          DCW      0x0330,0x01f0
000130  00f000f8          DCW      0x00f0,0x00f8
000134  319c330e          DCW      0x319c,0x330e
000138  1e061c06          DCW      0x1e06,0x1c06
00013c  1c063f06          DCW      0x1c06,0x3f06
000140  73fc21f0          DCW      0x73fc,0x21f0
000144  00000000          DCW      0x0000,0x0000
000148  00000000          DCW      0x0000,0x0000
00014c  00000000          DCW      0x0000,0x0000
000150  00000000          DCW      0x0000,0x0000
000154  000c000c          DCW      0x000c,0x000c
000158  000c000c          DCW      0x000c,0x000c
00015c  000c000c          DCW      0x000c,0x000c
000160  00000000          DCW      0x0000,0x0000
000164  00000000          DCW      0x0000,0x0000
000168  00000000          DCW      0x0000,0x0000
00016c  00000000          DCW      0x0000,0x0000
000170  00000000          DCW      0x0000,0x0000
000174  00000000          DCW      0x0000,0x0000
000178  00000000          DCW      0x0000,0x0000
00017c  00000000          DCW      0x0000,0x0000
000180  00000200          DCW      0x0000,0x0200
000184  03000180          DCW      0x0300,0x0180
000188  00c000c0          DCW      0x00c0,0x00c0
00018c  00600060          DCW      0x0060,0x0060
000190  00300030          DCW      0x0030,0x0030
000194  00300030          DCW      0x0030,0x0030
000198  00300030          DCW      0x0030,0x0030
00019c  00300030          DCW      0x0030,0x0030
0001a0  00600060          DCW      0x0060,0x0060
0001a4  00c000c0          DCW      0x00c0,0x00c0
0001a8  01800300          DCW      0x0180,0x0300
0001ac  02000000          DCW      0x0200,0x0000
0001b0  00000020          DCW      0x0000,0x0020
0001b4  006000c0          DCW      0x0060,0x00c0
0001b8  01800180          DCW      0x0180,0x0180
0001bc  03000300          DCW      0x0300,0x0300
0001c0  06000600          DCW      0x0600,0x0600
0001c4  06000600          DCW      0x0600,0x0600
0001c8  06000600          DCW      0x0600,0x0600
0001cc  06000600          DCW      0x0600,0x0600
0001d0  03000300          DCW      0x0300,0x0300
0001d4  01800180          DCW      0x0180,0x0180
0001d8  00c00060          DCW      0x00c0,0x0060
0001dc  00200000          DCW      0x0020,0x0000
0001e0  00000000          DCW      0x0000,0x0000
0001e4  00000000          DCW      0x0000,0x0000
0001e8  00000000          DCW      0x0000,0x0000
0001ec  00c000c0          DCW      0x00c0,0x00c0
0001f0  06d807f8          DCW      0x06d8,0x07f8
0001f4  01e00330          DCW      0x01e0,0x0330
0001f8  07380000          DCW      0x0738,0x0000
0001fc  00000000          DCW      0x0000,0x0000
000200  00000000          DCW      0x0000,0x0000
000204  00000000          DCW      0x0000,0x0000
000208  00000000          DCW      0x0000,0x0000
00020c  00000000          DCW      0x0000,0x0000
000210  00000000          DCW      0x0000,0x0000
000214  00000000          DCW      0x0000,0x0000
000218  00000000          DCW      0x0000,0x0000
00021c  01800180          DCW      0x0180,0x0180
000220  01800180          DCW      0x0180,0x0180
000224  01803ffc          DCW      0x0180,0x3ffc
000228  3ffc0180          DCW      0x3ffc,0x0180
00022c  01800180          DCW      0x0180,0x0180
000230  01800180          DCW      0x0180,0x0180
000234  00000000          DCW      0x0000,0x0000
000238  00000000          DCW      0x0000,0x0000
00023c  00000000          DCW      0x0000,0x0000
000240  00000000          DCW      0x0000,0x0000
000244  00000000          DCW      0x0000,0x0000
000248  00000000          DCW      0x0000,0x0000
00024c  00000000          DCW      0x0000,0x0000
000250  00000000          DCW      0x0000,0x0000
000254  00000000          DCW      0x0000,0x0000
000258  00000000          DCW      0x0000,0x0000
00025c  00000000          DCW      0x0000,0x0000
000260  00000180          DCW      0x0000,0x0180
000264  01800100          DCW      0x0180,0x0100
000268  01000080          DCW      0x0100,0x0080
00026c  00000000          DCW      0x0000,0x0000
000270  00000000          DCW      0x0000,0x0000
000274  00000000          DCW      0x0000,0x0000
000278  00000000          DCW      0x0000,0x0000
00027c  00000000          DCW      0x0000,0x0000
000280  00000000          DCW      0x0000,0x0000
000284  00000000          DCW      0x0000,0x0000
000288  07e007e0          DCW      0x07e0,0x07e0
00028c  00000000          DCW      0x0000,0x0000
000290  00000000          DCW      0x0000,0x0000
000294  00000000          DCW      0x0000,0x0000
000298  00000000          DCW      0x0000,0x0000
00029c  00000000          DCW      0x0000,0x0000
0002a0  00000000          DCW      0x0000,0x0000
0002a4  00000000          DCW      0x0000,0x0000
0002a8  00000000          DCW      0x0000,0x0000
0002ac  00000000          DCW      0x0000,0x0000
0002b0  00000000          DCW      0x0000,0x0000
0002b4  00000000          DCW      0x0000,0x0000
0002b8  00000000          DCW      0x0000,0x0000
0002bc  00000000          DCW      0x0000,0x0000
0002c0  000000c0          DCW      0x0000,0x00c0
0002c4  00c00000          DCW      0x00c0,0x0000
0002c8  00000000          DCW      0x0000,0x0000
0002cc  00000000          DCW      0x0000,0x0000
0002d0  00000c00          DCW      0x0000,0x0c00
0002d4  0c000600          DCW      0x0c00,0x0600
0002d8  06000600          DCW      0x0600,0x0600
0002dc  03000300          DCW      0x0300,0x0300
0002e0  03000380          DCW      0x0300,0x0380
0002e4  01800180          DCW      0x0180,0x0180
0002e8  018000c0          DCW      0x0180,0x00c0
0002ec  00c000c0          DCW      0x00c0,0x00c0
0002f0  00600060          DCW      0x0060,0x0060
0002f4  00000000          DCW      0x0000,0x0000
0002f8  00000000          DCW      0x0000,0x0000
0002fc  00000000          DCW      0x0000,0x0000
000300  000003e0          DCW      0x0000,0x03e0
000304  07f00e38          DCW      0x07f0,0x0e38
000308  0c18180c          DCW      0x0c18,0x180c
00030c  180c180c          DCW      0x180c,0x180c
000310  180c180c          DCW      0x180c,0x180c
000314  180c180c          DCW      0x180c,0x180c
000318  180c180c          DCW      0x180c,0x180c
00031c  0c180e38          DCW      0x0c18,0x0e38
000320  07f003e0          DCW      0x07f0,0x03e0
000324  00000000          DCW      0x0000,0x0000
000328  00000000          DCW      0x0000,0x0000
00032c  00000000          DCW      0x0000,0x0000
000330  00000100          DCW      0x0000,0x0100
000334  018001c0          DCW      0x0180,0x01c0
000338  01f00198          DCW      0x01f0,0x0198
00033c  01880180          DCW      0x0188,0x0180
000340  01800180          DCW      0x0180,0x0180
000344  01800180          DCW      0x0180,0x0180
000348  01800180          DCW      0x0180,0x0180
00034c  01800180          DCW      0x0180,0x0180
000350  01800180          DCW      0x0180,0x0180
000354  00000000          DCW      0x0000,0x0000
000358  00000000          DCW      0x0000,0x0000
00035c  00000000          DCW      0x0000,0x0000
000360  000003e0          DCW      0x0000,0x03e0
000364  0ff80c18          DCW      0x0ff8,0x0c18
000368  180c180c          DCW      0x180c,0x180c
00036c  18001800          DCW      0x1800,0x1800
000370  0c000600          DCW      0x0c00,0x0600
000374  03000180          DCW      0x0300,0x0180
000378  00c00060          DCW      0x00c0,0x0060
00037c  00300018          DCW      0x0030,0x0018
000380  1ffc1ffc          DCW      0x1ffc,0x1ffc
000384  00000000          DCW      0x0000,0x0000
000388  00000000          DCW      0x0000,0x0000
00038c  00000000          DCW      0x0000,0x0000
000390  000001e0          DCW      0x0000,0x01e0
000394  07f80e18          DCW      0x07f8,0x0e18
000398  0c0c0c0c          DCW      0x0c0c,0x0c0c
00039c  0c000600          DCW      0x0c00,0x0600
0003a0  03c007c0          DCW      0x03c0,0x07c0
0003a4  0c001800          DCW      0x0c00,0x1800
0003a8  1800180c          DCW      0x1800,0x180c
0003ac  180c0c18          DCW      0x180c,0x0c18
0003b0  07f803e0          DCW      0x07f8,0x03e0
0003b4  00000000          DCW      0x0000,0x0000
0003b8  00000000          DCW      0x0000,0x0000
0003bc  00000000          DCW      0x0000,0x0000
0003c0  00000c00          DCW      0x0000,0x0c00
0003c4  0e000f00          DCW      0x0e00,0x0f00
0003c8  0f000d80          DCW      0x0f00,0x0d80
0003cc  0cc00c60          DCW      0x0cc0,0x0c60
0003d0  0c600c30          DCW      0x0c60,0x0c30
0003d4  0c180c0c          DCW      0x0c18,0x0c0c
0003d8  3ffc3ffc          DCW      0x3ffc,0x3ffc
0003dc  0c000c00          DCW      0x0c00,0x0c00
0003e0  0c000c00          DCW      0x0c00,0x0c00
0003e4  00000000          DCW      0x0000,0x0000
0003e8  00000000          DCW      0x0000,0x0000
0003ec  00000000          DCW      0x0000,0x0000
0003f0  00000ff8          DCW      0x0000,0x0ff8
0003f4  0ff80018          DCW      0x0ff8,0x0018
0003f8  0018000c          DCW      0x0018,0x000c
0003fc  03ec07fc          DCW      0x03ec,0x07fc
000400  0e1c1c00          DCW      0x0e1c,0x1c00
000404  18001800          DCW      0x1800,0x1800
000408  1800180c          DCW      0x1800,0x180c
00040c  0c1c0e18          DCW      0x0c1c,0x0e18
000410  07f803e0          DCW      0x07f8,0x03e0
000414  00000000          DCW      0x0000,0x0000
000418  00000000          DCW      0x0000,0x0000
00041c  00000000          DCW      0x0000,0x0000
000420  000007c0          DCW      0x0000,0x07c0
000424  0ff01c38          DCW      0x0ff0,0x1c38
000428  18180018          DCW      0x1818,0x0018
00042c  000c03cc          DCW      0x000c,0x03cc
000430  0fec0e3c          DCW      0x0fec,0x0e3c
000434  1c1c180c          DCW      0x1c1c,0x180c
000438  180c180c          DCW      0x180c,0x180c
00043c  1c180e38          DCW      0x1c18,0x0e38
000440  07f003e0          DCW      0x07f0,0x03e0
000444  00000000          DCW      0x0000,0x0000
000448  00000000          DCW      0x0000,0x0000
00044c  00000000          DCW      0x0000,0x0000
000450  00001ffc          DCW      0x0000,0x1ffc
000454  1ffc0c00          DCW      0x1ffc,0x0c00
000458  06000600          DCW      0x0600,0x0600
00045c  03000380          DCW      0x0300,0x0380
000460  018001c0          DCW      0x0180,0x01c0
000464  00c000e0          DCW      0x00c0,0x00e0
000468  00600060          DCW      0x0060,0x0060
00046c  00700030          DCW      0x0070,0x0030
000470  00300030          DCW      0x0030,0x0030
000474  00000000          DCW      0x0000,0x0000
000478  00000000          DCW      0x0000,0x0000
00047c  00000000          DCW      0x0000,0x0000
000480  000003e0          DCW      0x0000,0x03e0
000484  07f00e38          DCW      0x07f0,0x0e38
000488  0c180c18          DCW      0x0c18,0x0c18
00048c  0c180638          DCW      0x0c18,0x0638
000490  07f007f0          DCW      0x07f0,0x07f0
000494  0c18180c          DCW      0x0c18,0x180c
000498  180c180c          DCW      0x180c,0x180c
00049c  180c0c38          DCW      0x180c,0x0c38
0004a0  0ff803e0          DCW      0x0ff8,0x03e0
0004a4  00000000          DCW      0x0000,0x0000
0004a8  00000000          DCW      0x0000,0x0000
0004ac  00000000          DCW      0x0000,0x0000
0004b0  000003e0          DCW      0x0000,0x03e0
0004b4  07f00e38          DCW      0x07f0,0x0e38
0004b8  0c1c180c          DCW      0x0c1c,0x180c
0004bc  180c180c          DCW      0x180c,0x180c
0004c0  1c1c1e38          DCW      0x1c1c,0x1e38
0004c4  1bf819e0          DCW      0x1bf8,0x19e0
0004c8  18000c00          DCW      0x1800,0x0c00
0004cc  0c000e1c          DCW      0x0c00,0x0e1c
0004d0  07f801f0          DCW      0x07f8,0x01f0
0004d4  00000000          DCW      0x0000,0x0000
0004d8  00000000          DCW      0x0000,0x0000
0004dc  00000000          DCW      0x0000,0x0000
0004e0  00000000          DCW      0x0000,0x0000
0004e4  00000000          DCW      0x0000,0x0000
0004e8  00000000          DCW      0x0000,0x0000
0004ec  01800180          DCW      0x0180,0x0180
0004f0  00000000          DCW      0x0000,0x0000
0004f4  00000000          DCW      0x0000,0x0000
0004f8  00000000          DCW      0x0000,0x0000
0004fc  00000000          DCW      0x0000,0x0000
000500  01800180          DCW      0x0180,0x0180
000504  00000000          DCW      0x0000,0x0000
000508  00000000          DCW      0x0000,0x0000
00050c  00000000          DCW      0x0000,0x0000
000510  00000000          DCW      0x0000,0x0000
000514  00000000          DCW      0x0000,0x0000
000518  00000000          DCW      0x0000,0x0000
00051c  01800180          DCW      0x0180,0x0180
000520  00000000          DCW      0x0000,0x0000
000524  00000000          DCW      0x0000,0x0000
000528  00000000          DCW      0x0000,0x0000
00052c  00000000          DCW      0x0000,0x0000
000530  01800180          DCW      0x0180,0x0180
000534  01000100          DCW      0x0100,0x0100
000538  00800000          DCW      0x0080,0x0000
00053c  00000000          DCW      0x0000,0x0000
000540  00000000          DCW      0x0000,0x0000
000544  00000000          DCW      0x0000,0x0000
000548  00000000          DCW      0x0000,0x0000
00054c  00000000          DCW      0x0000,0x0000
000550  10001c00          DCW      0x1000,0x1c00
000554  0f8003e0          DCW      0x0f80,0x03e0
000558  00f80018          DCW      0x00f8,0x0018
00055c  00f803e0          DCW      0x00f8,0x03e0
000560  0f801c00          DCW      0x0f80,0x1c00
000564  10000000          DCW      0x1000,0x0000
000568  00000000          DCW      0x0000,0x0000
00056c  00000000          DCW      0x0000,0x0000
000570  00000000          DCW      0x0000,0x0000
000574  00000000          DCW      0x0000,0x0000
000578  00000000          DCW      0x0000,0x0000
00057c  00000000          DCW      0x0000,0x0000
000580  1ff80000          DCW      0x1ff8,0x0000
000584  00000000          DCW      0x0000,0x0000
000588  1ff80000          DCW      0x1ff8,0x0000
00058c  00000000          DCW      0x0000,0x0000
000590  00000000          DCW      0x0000,0x0000
000594  00000000          DCW      0x0000,0x0000
000598  00000000          DCW      0x0000,0x0000
00059c  00000000          DCW      0x0000,0x0000
0005a0  00000000          DCW      0x0000,0x0000
0005a4  00000000          DCW      0x0000,0x0000
0005a8  00000000          DCW      0x0000,0x0000
0005ac  00000000          DCW      0x0000,0x0000
0005b0  00080038          DCW      0x0008,0x0038
0005b4  01f007c0          DCW      0x01f0,0x07c0
0005b8  1f001800          DCW      0x1f00,0x1800
0005bc  1f0007c0          DCW      0x1f00,0x07c0
0005c0  01f00038          DCW      0x01f0,0x0038
0005c4  00080000          DCW      0x0008,0x0000
0005c8  00000000          DCW      0x0000,0x0000
0005cc  00000000          DCW      0x0000,0x0000
0005d0  000003e0          DCW      0x0000,0x03e0
0005d4  0ff80c18          DCW      0x0ff8,0x0c18
0005d8  180c180c          DCW      0x180c,0x180c
0005dc  18000c00          DCW      0x1800,0x0c00
0005e0  06000300          DCW      0x0600,0x0300
0005e4  018000c0          DCW      0x0180,0x00c0
0005e8  00c000c0          DCW      0x00c0,0x00c0
0005ec  00000000          DCW      0x0000,0x0000
0005f0  00c000c0          DCW      0x00c0,0x00c0
0005f4  00000000          DCW      0x0000,0x0000
0005f8  00000000          DCW      0x0000,0x0000
0005fc  00000000          DCW      0x0000,0x0000
000600  00000000          DCW      0x0000,0x0000
000604  07e01818          DCW      0x07e0,0x1818
000608  200429c2          DCW      0x2004,0x29c2
00060c  4a224411          DCW      0x4a22,0x4411
000610  44094409          DCW      0x4409,0x4409
000614  44092209          DCW      0x4409,0x2209
000618  13110ce2          DCW      0x1311,0x0ce2
00061c  40022004          DCW      0x4002,0x2004
000620  181807e0          DCW      0x1818,0x07e0
000624  00000000          DCW      0x0000,0x0000
000628  00000000          DCW      0x0000,0x0000
00062c  00000000          DCW      0x0000,0x0000
000630  00000380          DCW      0x0000,0x0380
000634  038006c0          DCW      0x0380,0x06c0
000638  06c006c0          DCW      0x06c0,0x06c0
00063c  0c600c60          DCW      0x0c60,0x0c60
000640  18301830          DCW      0x1830,0x1830
000644  18303ff8          DCW      0x1830,0x3ff8
000648  3ff8701c          DCW      0x3ff8,0x701c
00064c  600c600c          DCW      0x600c,0x600c
000650  c006c006          DCW      0xc006,0xc006
000654  00000000          DCW      0x0000,0x0000
000658  00000000          DCW      0x0000,0x0000
00065c  00000000          DCW      0x0000,0x0000
000660  000003fc          DCW      0x0000,0x03fc
000664  0ffc0c0c          DCW      0x0ffc,0x0c0c
000668  180c180c          DCW      0x180c,0x180c
00066c  180c0c0c          DCW      0x180c,0x0c0c
000670  07fc0ffc          DCW      0x07fc,0x0ffc
000674  180c300c          DCW      0x180c,0x300c
000678  300c300c          DCW      0x300c,0x300c
00067c  300c180c          DCW      0x300c,0x180c
000680  1ffc07fc          DCW      0x1ffc,0x07fc
000684  00000000          DCW      0x0000,0x0000
000688  00000000          DCW      0x0000,0x0000
00068c  00000000          DCW      0x0000,0x0000
000690  000007c0          DCW      0x0000,0x07c0
000694  1ff03838          DCW      0x1ff0,0x3838
000698  301c700c          DCW      0x301c,0x700c
00069c  60060006          DCW      0x6006,0x0006
0006a0  00060006          DCW      0x0006,0x0006
0006a4  00060006          DCW      0x0006,0x0006
0006a8  00066006          DCW      0x0006,0x6006
0006ac  700c301c          DCW      0x700c,0x301c
0006b0  1ff007e0          DCW      0x1ff0,0x07e0
0006b4  00000000          DCW      0x0000,0x0000
0006b8  00000000          DCW      0x0000,0x0000
0006bc  00000000          DCW      0x0000,0x0000
0006c0  000003fe          DCW      0x0000,0x03fe
0006c4  0ffe0e06          DCW      0x0ffe,0x0e06
0006c8  18061806          DCW      0x1806,0x1806
0006cc  30063006          DCW      0x3006,0x3006
0006d0  30063006          DCW      0x3006,0x3006
0006d4  30063006          DCW      0x3006,0x3006
0006d8  30061806          DCW      0x3006,0x1806
0006dc  18060e06          DCW      0x1806,0x0e06
0006e0  0ffe03fe          DCW      0x0ffe,0x03fe
0006e4  00000000          DCW      0x0000,0x0000
0006e8  00000000          DCW      0x0000,0x0000
0006ec  00000000          DCW      0x0000,0x0000
0006f0  00003ffc          DCW      0x0000,0x3ffc
0006f4  3ffc000c          DCW      0x3ffc,0x000c
0006f8  000c000c          DCW      0x000c,0x000c
0006fc  000c000c          DCW      0x000c,0x000c
000700  1ffc1ffc          DCW      0x1ffc,0x1ffc
000704  000c000c          DCW      0x000c,0x000c
000708  000c000c          DCW      0x000c,0x000c
00070c  000c000c          DCW      0x000c,0x000c
000710  3ffc3ffc          DCW      0x3ffc,0x3ffc
000714  00000000          DCW      0x0000,0x0000
000718  00000000          DCW      0x0000,0x0000
00071c  00000000          DCW      0x0000,0x0000
000720  00003ff8          DCW      0x0000,0x3ff8
000724  3ff80018          DCW      0x3ff8,0x0018
000728  00180018          DCW      0x0018,0x0018
00072c  00180018          DCW      0x0018,0x0018
000730  1ff81ff8          DCW      0x1ff8,0x1ff8
000734  00180018          DCW      0x0018,0x0018
000738  00180018          DCW      0x0018,0x0018
00073c  00180018          DCW      0x0018,0x0018
000740  00180018          DCW      0x0018,0x0018
000744  00000000          DCW      0x0000,0x0000
000748  00000000          DCW      0x0000,0x0000
00074c  00000000          DCW      0x0000,0x0000
000750  00000fe0          DCW      0x0000,0x0fe0
000754  3ff8783c          DCW      0x3ff8,0x783c
000758  600ee006          DCW      0x600e,0xe006
00075c  c0070003          DCW      0xc007,0x0003
000760  0003fe03          DCW      0x0003,0xfe03
000764  fe03c003          DCW      0xfe03,0xc003
000768  c007c006          DCW      0xc007,0xc006
00076c  c00ef03c          DCW      0xc00e,0xf03c
000770  3ff80fe0          DCW      0x3ff8,0x0fe0
000774  00000000          DCW      0x0000,0x0000
000778  00000000          DCW      0x0000,0x0000
00077c  00000000          DCW      0x0000,0x0000
000780  0000300c          DCW      0x0000,0x300c
000784  300c300c          DCW      0x300c,0x300c
000788  300c300c          DCW      0x300c,0x300c
00078c  300c300c          DCW      0x300c,0x300c
000790  3ffc3ffc          DCW      0x3ffc,0x3ffc
000794  300c300c          DCW      0x300c,0x300c
000798  300c300c          DCW      0x300c,0x300c
00079c  300c300c          DCW      0x300c,0x300c
0007a0  300c300c          DCW      0x300c,0x300c
0007a4  00000000          DCW      0x0000,0x0000
0007a8  00000000          DCW      0x0000,0x0000
0007ac  00000000          DCW      0x0000,0x0000
0007b0  00000180          DCW      0x0000,0x0180
0007b4  01800180          DCW      0x0180,0x0180
0007b8  01800180          DCW      0x0180,0x0180
0007bc  01800180          DCW      0x0180,0x0180
0007c0  01800180          DCW      0x0180,0x0180
0007c4  01800180          DCW      0x0180,0x0180
0007c8  01800180          DCW      0x0180,0x0180
0007cc  01800180          DCW      0x0180,0x0180
0007d0  01800180          DCW      0x0180,0x0180
0007d4  00000000          DCW      0x0000,0x0000
0007d8  00000000          DCW      0x0000,0x0000
0007dc  00000000          DCW      0x0000,0x0000
0007e0  00000600          DCW      0x0000,0x0600
0007e4  06000600          DCW      0x0600,0x0600
0007e8  06000600          DCW      0x0600,0x0600
0007ec  06000600          DCW      0x0600,0x0600
0007f0  06000600          DCW      0x0600,0x0600
0007f4  06000600          DCW      0x0600,0x0600
0007f8  06000618          DCW      0x0600,0x0618
0007fc  06180738          DCW      0x0618,0x0738
000800  03f001e0          DCW      0x03f0,0x01e0
000804  00000000          DCW      0x0000,0x0000
000808  00000000          DCW      0x0000,0x0000
00080c  00000000          DCW      0x0000,0x0000
000810  00003006          DCW      0x0000,0x3006
000814  18060c06          DCW      0x1806,0x0c06
000818  06060306          DCW      0x0606,0x0306
00081c  018600c6          DCW      0x0186,0x00c6
000820  00660076          DCW      0x0066,0x0076
000824  00de018e          DCW      0x00de,0x018e
000828  03060606          DCW      0x0306,0x0606
00082c  0c061806          DCW      0x0c06,0x1806
000830  30066006          DCW      0x3006,0x6006
000834  00000000          DCW      0x0000,0x0000
000838  00000000          DCW      0x0000,0x0000
00083c  00000000          DCW      0x0000,0x0000
000840  00000018          DCW      0x0000,0x0018
000844  00180018          DCW      0x0018,0x0018
000848  00180018          DCW      0x0018,0x0018
00084c  00180018          DCW      0x0018,0x0018
000850  00180018          DCW      0x0018,0x0018
000854  00180018          DCW      0x0018,0x0018
000858  00180018          DCW      0x0018,0x0018
00085c  00180018          DCW      0x0018,0x0018
000860  1ff81ff8          DCW      0x1ff8,0x1ff8
000864  00000000          DCW      0x0000,0x0000
000868  00000000          DCW      0x0000,0x0000
00086c  00000000          DCW      0x0000,0x0000
000870  0000e00e          DCW      0x0000,0xe00e
000874  f01ef01e          DCW      0xf01e,0xf01e
000878  f01ed836          DCW      0xf01e,0xd836
00087c  d836d836          DCW      0xd836,0xd836
000880  d836cc66          DCW      0xd836,0xcc66
000884  cc66cc66          DCW      0xcc66,0xcc66
000888  c6c6c6c6          DCW      0xc6c6,0xc6c6
00088c  c6c6c6c6          DCW      0xc6c6,0xc6c6
000890  c386c386          DCW      0xc386,0xc386
000894  00000000          DCW      0x0000,0x0000
000898  00000000          DCW      0x0000,0x0000
00089c  00000000          DCW      0x0000,0x0000
0008a0  0000300c          DCW      0x0000,0x300c
0008a4  301c303c          DCW      0x301c,0x303c
0008a8  303c306c          DCW      0x303c,0x306c
0008ac  306c30cc          DCW      0x306c,0x30cc
0008b0  30cc318c          DCW      0x30cc,0x318c
0008b4  330c330c          DCW      0x330c,0x330c
0008b8  360c360c          DCW      0x360c,0x360c
0008bc  3c0c3c0c          DCW      0x3c0c,0x3c0c
0008c0  380c300c          DCW      0x380c,0x300c
0008c4  00000000          DCW      0x0000,0x0000
0008c8  00000000          DCW      0x0000,0x0000
0008cc  00000000          DCW      0x0000,0x0000
0008d0  000007e0          DCW      0x0000,0x07e0
0008d4  1ff8381c          DCW      0x1ff8,0x381c
0008d8  700e6006          DCW      0x700e,0x6006
0008dc  c003c003          DCW      0xc003,0xc003
0008e0  c003c003          DCW      0xc003,0xc003
0008e4  c003c003          DCW      0xc003,0xc003
0008e8  c0036006          DCW      0xc003,0x6006
0008ec  700e381c          DCW      0x700e,0x381c
0008f0  1ff807e0          DCW      0x1ff8,0x07e0
0008f4  00000000          DCW      0x0000,0x0000
0008f8  00000000          DCW      0x0000,0x0000
0008fc  00000000          DCW      0x0000,0x0000
000900  00000ffc          DCW      0x0000,0x0ffc
000904  1ffc380c          DCW      0x1ffc,0x380c
000908  300c300c          DCW      0x300c,0x300c
00090c  300c300c          DCW      0x300c,0x300c
000910  180c1ffc          DCW      0x180c,0x1ffc
000914  07fc000c          DCW      0x07fc,0x000c
000918  000c000c          DCW      0x000c,0x000c
00091c  000c000c          DCW      0x000c,0x000c
000920  000c000c          DCW      0x000c,0x000c
000924  00000000          DCW      0x0000,0x0000
000928  00000000          DCW      0x0000,0x0000
00092c  00000000          DCW      0x0000,0x0000
000930  000007e0          DCW      0x0000,0x07e0
000934  1ff8381c          DCW      0x1ff8,0x381c
000938  700e6006          DCW      0x700e,0x6006
00093c  e003c003          DCW      0xe003,0xc003
000940  c003c003          DCW      0xc003,0xc003
000944  c003c003          DCW      0xc003,0xc003
000948  e0076306          DCW      0xe007,0x6306
00094c  3f0e3c1c          DCW      0x3f0e,0x3c1c
000950  3ff8f7e0          DCW      0x3ff8,0xf7e0
000954  c0000000          DCW      0xc000,0x0000
000958  00000000          DCW      0x0000,0x0000
00095c  00000000          DCW      0x0000,0x0000
000960  00000ffe          DCW      0x0000,0x0ffe
000964  1ffe3806          DCW      0x1ffe,0x3806
000968  30063006          DCW      0x3006,0x3006
00096c  30063806          DCW      0x3006,0x3806
000970  1ffe07fe          DCW      0x1ffe,0x07fe
000974  03060606          DCW      0x0306,0x0606
000978  0c061806          DCW      0x0c06,0x1806
00097c  18063006          DCW      0x1806,0x3006
000980  30066006          DCW      0x3006,0x6006
000984  00000000          DCW      0x0000,0x0000
000988  00000000          DCW      0x0000,0x0000
00098c  00000000          DCW      0x0000,0x0000
000990  000003e0          DCW      0x0000,0x03e0
000994  0ff80c1c          DCW      0x0ff8,0x0c1c
000998  180c180c          DCW      0x180c,0x180c
00099c  000c001c          DCW      0x000c,0x001c
0009a0  03f80fe0          DCW      0x03f8,0x0fe0
0009a4  1e003800          DCW      0x1e00,0x3800
0009a8  30063006          DCW      0x3006,0x3006
0009ac  300e1c1c          DCW      0x300e,0x1c1c
0009b0  0ff807e0          DCW      0x0ff8,0x07e0
0009b4  00000000          DCW      0x0000,0x0000
0009b8  00000000          DCW      0x0000,0x0000
0009bc  00000000          DCW      0x0000,0x0000
0009c0  00007ffe          DCW      0x0000,0x7ffe
0009c4  7ffe0180          DCW      0x7ffe,0x0180
0009c8  01800180          DCW      0x0180,0x0180
0009cc  01800180          DCW      0x0180,0x0180
0009d0  01800180          DCW      0x0180,0x0180
0009d4  01800180          DCW      0x0180,0x0180
0009d8  01800180          DCW      0x0180,0x0180
0009dc  01800180          DCW      0x0180,0x0180
0009e0  01800180          DCW      0x0180,0x0180
0009e4  00000000          DCW      0x0000,0x0000
0009e8  00000000          DCW      0x0000,0x0000
0009ec  00000000          DCW      0x0000,0x0000
0009f0  0000300c          DCW      0x0000,0x300c
0009f4  300c300c          DCW      0x300c,0x300c
0009f8  300c300c          DCW      0x300c,0x300c
0009fc  300c300c          DCW      0x300c,0x300c
000a00  300c300c          DCW      0x300c,0x300c
000a04  300c300c          DCW      0x300c,0x300c
000a08  300c300c          DCW      0x300c,0x300c
000a0c  300c1818          DCW      0x300c,0x1818
000a10  1ff807e0          DCW      0x1ff8,0x07e0
000a14  00000000          DCW      0x0000,0x0000
000a18  00000000          DCW      0x0000,0x0000
000a1c  00000000          DCW      0x0000,0x0000
000a20  00006003          DCW      0x0000,0x6003
000a24  30063006          DCW      0x3006,0x3006
000a28  3006180c          DCW      0x3006,0x180c
000a2c  180c180c          DCW      0x180c,0x180c
000a30  0c180c18          DCW      0x0c18,0x0c18
000a34  0e380630          DCW      0x0e38,0x0630
000a38  06300770          DCW      0x0630,0x0770
000a3c  03600360          DCW      0x0360,0x0360
000a40  01c001c0          DCW      0x01c0,0x01c0
000a44  00000000          DCW      0x0000,0x0000
000a48  00000000          DCW      0x0000,0x0000
000a4c  00000000          DCW      0x0000,0x0000
000a50  00006003          DCW      0x0000,0x6003
000a54  61c361c3          DCW      0x61c3,0x61c3
000a58  61c33366          DCW      0x61c3,0x3366
000a5c  33663366          DCW      0x3366,0x3366
000a60  33663366          DCW      0x3366,0x3366
000a64  33661b6c          DCW      0x3366,0x1b6c
000a68  1b6c1b6c          DCW      0x1b6c,0x1b6c
000a6c  1a2c1e3c          DCW      0x1a2c,0x1e3c
000a70  0e380e38          DCW      0x0e38,0x0e38
000a74  00000000          DCW      0x0000,0x0000
000a78  00000000          DCW      0x0000,0x0000
000a7c  00000000          DCW      0x0000,0x0000
000a80  0000e00f          DCW      0x0000,0xe00f
000a84  700c3018          DCW      0x700c,0x3018
000a88  18300c70          DCW      0x1830,0x0c70
000a8c  0e6007c0          DCW      0x0e60,0x07c0
000a90  03800380          DCW      0x0380,0x0380
000a94  03c006e0          DCW      0x03c0,0x06e0
000a98  0c701c30          DCW      0x0c70,0x1c30
000a9c  1818300c          DCW      0x1818,0x300c
000aa0  600ee007          DCW      0x600e,0xe007
000aa4  00000000          DCW      0x0000,0x0000
000aa8  00000000          DCW      0x0000,0x0000
000aac  00000000          DCW      0x0000,0x0000
000ab0  0000c003          DCW      0x0000,0xc003
000ab4  6006300c          DCW      0x6006,0x300c
000ab8  381c1838          DCW      0x381c,0x1838
000abc  0c300660          DCW      0x0c30,0x0660
000ac0  07e003c0          DCW      0x07e0,0x03c0
000ac4  01800180          DCW      0x0180,0x0180
000ac8  01800180          DCW      0x0180,0x0180
000acc  01800180          DCW      0x0180,0x0180
000ad0  01800180          DCW      0x0180,0x0180
000ad4  00000000          DCW      0x0000,0x0000
000ad8  00000000          DCW      0x0000,0x0000
000adc  00000000          DCW      0x0000,0x0000
000ae0  00007ffc          DCW      0x0000,0x7ffc
000ae4  7ffc6000          DCW      0x7ffc,0x6000
000ae8  30001800          DCW      0x3000,0x1800
000aec  0c000600          DCW      0x0c00,0x0600
000af0  03000180          DCW      0x0300,0x0180
000af4  00c00060          DCW      0x00c0,0x0060
000af8  00300018          DCW      0x0030,0x0018
000afc  000c0006          DCW      0x000c,0x0006
000b00  7ffe7ffe          DCW      0x7ffe,0x7ffe
000b04  00000000          DCW      0x0000,0x0000
000b08  00000000          DCW      0x0000,0x0000
000b0c  00000000          DCW      0x0000,0x0000
000b10  000003e0          DCW      0x0000,0x03e0
000b14  03e00060          DCW      0x03e0,0x0060
000b18  00600060          DCW      0x0060,0x0060
000b1c  00600060          DCW      0x0060,0x0060
000b20  00600060          DCW      0x0060,0x0060
000b24  00600060          DCW      0x0060,0x0060
000b28  00600060          DCW      0x0060,0x0060
000b2c  00600060          DCW      0x0060,0x0060
000b30  00600060          DCW      0x0060,0x0060
000b34  00600060          DCW      0x0060,0x0060
000b38  006003e0          DCW      0x0060,0x03e0
000b3c  03e00000          DCW      0x03e0,0x0000
000b40  00000030          DCW      0x0000,0x0030
000b44  00300060          DCW      0x0030,0x0060
000b48  00600060          DCW      0x0060,0x0060
000b4c  00c000c0          DCW      0x00c0,0x00c0
000b50  00c001c0          DCW      0x00c0,0x01c0
000b54  01800180          DCW      0x0180,0x0180
000b58  01800300          DCW      0x0180,0x0300
000b5c  03000300          DCW      0x0300,0x0300
000b60  06000600          DCW      0x0600,0x0600
000b64  00000000          DCW      0x0000,0x0000
000b68  00000000          DCW      0x0000,0x0000
000b6c  00000000          DCW      0x0000,0x0000
000b70  000003e0          DCW      0x0000,0x03e0
000b74  03e00300          DCW      0x03e0,0x0300
000b78  03000300          DCW      0x0300,0x0300
000b7c  03000300          DCW      0x0300,0x0300
000b80  03000300          DCW      0x0300,0x0300
000b84  03000300          DCW      0x0300,0x0300
000b88  03000300          DCW      0x0300,0x0300
000b8c  03000300          DCW      0x0300,0x0300
000b90  03000300          DCW      0x0300,0x0300
000b94  03000300          DCW      0x0300,0x0300
000b98  030003e0          DCW      0x0300,0x03e0
000b9c  03e00000          DCW      0x03e0,0x0000
000ba0  00000000          DCW      0x0000,0x0000
000ba4  01c001c0          DCW      0x01c0,0x01c0
000ba8  03600360          DCW      0x0360,0x0360
000bac  03600630          DCW      0x0360,0x0630
000bb0  06300c18          DCW      0x0630,0x0c18
000bb4  0c180000          DCW      0x0c18,0x0000
000bb8  00000000          DCW      0x0000,0x0000
000bbc  00000000          DCW      0x0000,0x0000
000bc0  00000000          DCW      0x0000,0x0000
000bc4  00000000          DCW      0x0000,0x0000
000bc8  00000000          DCW      0x0000,0x0000
000bcc  00000000          DCW      0x0000,0x0000
000bd0  00000000          DCW      0x0000,0x0000
000bd4  00000000          DCW      0x0000,0x0000
000bd8  00000000          DCW      0x0000,0x0000
000bdc  00000000          DCW      0x0000,0x0000
000be0  00000000          DCW      0x0000,0x0000
000be4  00000000          DCW      0x0000,0x0000
000be8  00000000          DCW      0x0000,0x0000
000bec  00000000          DCW      0x0000,0x0000
000bf0  0000ffff          DCW      0x0000,0xffff
000bf4  ffff0000          DCW      0xffff,0x0000
000bf8  00000000          DCW      0x0000,0x0000
000bfc  00000000          DCW      0x0000,0x0000
000c00  0000000c          DCW      0x0000,0x000c
000c04  000c000c          DCW      0x000c,0x000c
000c08  000c000c          DCW      0x000c,0x000c
000c0c  000c0000          DCW      0x000c,0x0000
000c10  00000000          DCW      0x0000,0x0000
000c14  00000000          DCW      0x0000,0x0000
000c18  00000000          DCW      0x0000,0x0000
000c1c  00000000          DCW      0x0000,0x0000
000c20  00000000          DCW      0x0000,0x0000
000c24  00000000          DCW      0x0000,0x0000
000c28  00000000          DCW      0x0000,0x0000
000c2c  00000000          DCW      0x0000,0x0000
000c30  00000000          DCW      0x0000,0x0000
000c34  00000000          DCW      0x0000,0x0000
000c38  00000000          DCW      0x0000,0x0000
000c3c  03f007f8          DCW      0x03f0,0x07f8
000c40  0c1c0c0c          DCW      0x0c1c,0x0c0c
000c44  0f000ff0          DCW      0x0f00,0x0ff0
000c48  0cf80c0c          DCW      0x0cf8,0x0c0c
000c4c  0c0c0f1c          DCW      0x0c0c,0x0f1c
000c50  0ff818f0          DCW      0x0ff8,0x18f0
000c54  00000000          DCW      0x0000,0x0000
000c58  00000000          DCW      0x0000,0x0000
000c5c  00000000          DCW      0x0000,0x0000
000c60  00000018          DCW      0x0000,0x0018
000c64  00180018          DCW      0x0018,0x0018
000c68  00180018          DCW      0x0018,0x0018
000c6c  03d80ff8          DCW      0x03d8,0x0ff8
000c70  0c381818          DCW      0x0c38,0x1818
000c74  18181818          DCW      0x1818,0x1818
000c78  18181818          DCW      0x1818,0x1818
000c7c  18180c38          DCW      0x1818,0x0c38
000c80  0ff803d8          DCW      0x0ff8,0x03d8
000c84  00000000          DCW      0x0000,0x0000
000c88  00000000          DCW      0x0000,0x0000
000c8c  00000000          DCW      0x0000,0x0000
000c90  00000000          DCW      0x0000,0x0000
000c94  00000000          DCW      0x0000,0x0000
000c98  00000000          DCW      0x0000,0x0000
000c9c  03c007f0          DCW      0x03c0,0x07f0
000ca0  0e300c18          DCW      0x0e30,0x0c18
000ca4  00180018          DCW      0x0018,0x0018
000ca8  00180018          DCW      0x0018,0x0018
000cac  0c180e30          DCW      0x0c18,0x0e30
000cb0  07f003c0          DCW      0x07f0,0x03c0
000cb4  00000000          DCW      0x0000,0x0000
000cb8  00000000          DCW      0x0000,0x0000
000cbc  00000000          DCW      0x0000,0x0000
000cc0  00001800          DCW      0x0000,0x1800
000cc4  18001800          DCW      0x1800,0x1800
000cc8  18001800          DCW      0x1800,0x1800
000ccc  1bc01ff0          DCW      0x1bc0,0x1ff0
000cd0  1c301818          DCW      0x1c30,0x1818
000cd4  18181818          DCW      0x1818,0x1818
000cd8  18181818          DCW      0x1818,0x1818
000cdc  18181c30          DCW      0x1818,0x1c30
000ce0  1ff01bc0          DCW      0x1ff0,0x1bc0
000ce4  00000000          DCW      0x0000,0x0000
000ce8  00000000          DCW      0x0000,0x0000
000cec  00000000          DCW      0x0000,0x0000
000cf0  00000000          DCW      0x0000,0x0000
000cf4  00000000          DCW      0x0000,0x0000
000cf8  00000000          DCW      0x0000,0x0000
000cfc  03c00ff0          DCW      0x03c0,0x0ff0
000d00  0c301818          DCW      0x0c30,0x1818
000d04  1ff81ff8          DCW      0x1ff8,0x1ff8
000d08  00180018          DCW      0x0018,0x0018
000d0c  18381c30          DCW      0x1838,0x1c30
000d10  0ff007c0          DCW      0x0ff0,0x07c0
000d14  00000000          DCW      0x0000,0x0000
000d18  00000000          DCW      0x0000,0x0000
000d1c  00000000          DCW      0x0000,0x0000
000d20  00000f80          DCW      0x0000,0x0f80
000d24  0fc000c0          DCW      0x0fc0,0x00c0
000d28  00c000c0          DCW      0x00c0,0x00c0
000d2c  07f007f0          DCW      0x07f0,0x07f0
000d30  00c000c0          DCW      0x00c0,0x00c0
000d34  00c000c0          DCW      0x00c0,0x00c0
000d38  00c000c0          DCW      0x00c0,0x00c0
000d3c  00c000c0          DCW      0x00c0,0x00c0
000d40  00c000c0          DCW      0x00c0,0x00c0
000d44  00000000          DCW      0x0000,0x0000
000d48  00000000          DCW      0x0000,0x0000
000d4c  00000000          DCW      0x0000,0x0000
000d50  00000000          DCW      0x0000,0x0000
000d54  00000000          DCW      0x0000,0x0000
000d58  00000000          DCW      0x0000,0x0000
000d5c  0de00ff8          DCW      0x0de0,0x0ff8
000d60  0e180c0c          DCW      0x0e18,0x0c0c
000d64  0c0c0c0c          DCW      0x0c0c,0x0c0c
000d68  0c0c0c0c          DCW      0x0c0c,0x0c0c
000d6c  0c0c0e18          DCW      0x0c0c,0x0e18
000d70  0ff80de0          DCW      0x0ff8,0x0de0
000d74  0c000c0c          DCW      0x0c00,0x0c0c
000d78  061c07f8          DCW      0x061c,0x07f8
000d7c  01f00000          DCW      0x01f0,0x0000
000d80  00000018          DCW      0x0000,0x0018
000d84  00180018          DCW      0x0018,0x0018
000d88  00180018          DCW      0x0018,0x0018
000d8c  07d80ff8          DCW      0x07d8,0x0ff8
000d90  1c381818          DCW      0x1c38,0x1818
000d94  18181818          DCW      0x1818,0x1818
000d98  18181818          DCW      0x1818,0x1818
000d9c  18181818          DCW      0x1818,0x1818
000da0  18181818          DCW      0x1818,0x1818
000da4  00000000          DCW      0x0000,0x0000
000da8  00000000          DCW      0x0000,0x0000
000dac  00000000          DCW      0x0000,0x0000
000db0  000000c0          DCW      0x0000,0x00c0
000db4  00c00000          DCW      0x00c0,0x0000
000db8  00000000          DCW      0x0000,0x0000
000dbc  00c000c0          DCW      0x00c0,0x00c0
000dc0  00c000c0          DCW      0x00c0,0x00c0
000dc4  00c000c0          DCW      0x00c0,0x00c0
000dc8  00c000c0          DCW      0x00c0,0x00c0
000dcc  00c000c0          DCW      0x00c0,0x00c0
000dd0  00c000c0          DCW      0x00c0,0x00c0
000dd4  00000000          DCW      0x0000,0x0000
000dd8  00000000          DCW      0x0000,0x0000
000ddc  00000000          DCW      0x0000,0x0000
000de0  000000c0          DCW      0x0000,0x00c0
000de4  00c00000          DCW      0x00c0,0x0000
000de8  00000000          DCW      0x0000,0x0000
000dec  00c000c0          DCW      0x00c0,0x00c0
000df0  00c000c0          DCW      0x00c0,0x00c0
000df4  00c000c0          DCW      0x00c0,0x00c0
000df8  00c000c0          DCW      0x00c0,0x00c0
000dfc  00c000c0          DCW      0x00c0,0x00c0
000e00  00c000c0          DCW      0x00c0,0x00c0
000e04  00c000c0          DCW      0x00c0,0x00c0
000e08  00c000f8          DCW      0x00c0,0x00f8
000e0c  00780000          DCW      0x0078,0x0000
000e10  0000000c          DCW      0x0000,0x000c
000e14  000c000c          DCW      0x000c,0x000c
000e18  000c000c          DCW      0x000c,0x000c
000e1c  0c0c060c          DCW      0x0c0c,0x060c
000e20  030c018c          DCW      0x030c,0x018c
000e24  00cc006c          DCW      0x00cc,0x006c
000e28  00fc019c          DCW      0x00fc,0x019c
000e2c  038c030c          DCW      0x038c,0x030c
000e30  060c0c0c          DCW      0x060c,0x0c0c
000e34  00000000          DCW      0x0000,0x0000
000e38  00000000          DCW      0x0000,0x0000
000e3c  00000000          DCW      0x0000,0x0000
000e40  000000c0          DCW      0x0000,0x00c0
000e44  00c000c0          DCW      0x00c0,0x00c0
000e48  00c000c0          DCW      0x00c0,0x00c0
000e4c  00c000c0          DCW      0x00c0,0x00c0
000e50  00c000c0          DCW      0x00c0,0x00c0
000e54  00c000c0          DCW      0x00c0,0x00c0
000e58  00c000c0          DCW      0x00c0,0x00c0
000e5c  00c000c0          DCW      0x00c0,0x00c0
000e60  00c000c0          DCW      0x00c0,0x00c0
000e64  00000000          DCW      0x0000,0x0000
000e68  00000000          DCW      0x0000,0x0000
000e6c  00000000          DCW      0x0000,0x0000
000e70  00000000          DCW      0x0000,0x0000
000e74  00000000          DCW      0x0000,0x0000
000e78  00000000          DCW      0x0000,0x0000
000e7c  3c7c7eff          DCW      0x3c7c,0x7eff
000e80  e3c7c183          DCW      0xe3c7,0xc183
000e84  c183c183          DCW      0xc183,0xc183
000e88  c183c183          DCW      0xc183,0xc183
000e8c  c183c183          DCW      0xc183,0xc183
000e90  c183c183          DCW      0xc183,0xc183
000e94  00000000          DCW      0x0000,0x0000
000e98  00000000          DCW      0x0000,0x0000
000e9c  00000000          DCW      0x0000,0x0000
000ea0  00000000          DCW      0x0000,0x0000
000ea4  00000000          DCW      0x0000,0x0000
000ea8  00000000          DCW      0x0000,0x0000
000eac  07980ff8          DCW      0x0798,0x0ff8
000eb0  1c381818          DCW      0x1c38,0x1818
000eb4  18181818          DCW      0x1818,0x1818
000eb8  18181818          DCW      0x1818,0x1818
000ebc  18181818          DCW      0x1818,0x1818
000ec0  18181818          DCW      0x1818,0x1818
000ec4  00000000          DCW      0x0000,0x0000
000ec8  00000000          DCW      0x0000,0x0000
000ecc  00000000          DCW      0x0000,0x0000
000ed0  00000000          DCW      0x0000,0x0000
000ed4  00000000          DCW      0x0000,0x0000
000ed8  00000000          DCW      0x0000,0x0000
000edc  03c00ff0          DCW      0x03c0,0x0ff0
000ee0  0c301818          DCW      0x0c30,0x1818
000ee4  18181818          DCW      0x1818,0x1818
000ee8  18181818          DCW      0x1818,0x1818
000eec  18180c30          DCW      0x1818,0x0c30
000ef0  0ff003c0          DCW      0x0ff0,0x03c0
000ef4  00000000          DCW      0x0000,0x0000
000ef8  00000000          DCW      0x0000,0x0000
000efc  00000000          DCW      0x0000,0x0000
000f00  00000000          DCW      0x0000,0x0000
000f04  00000000          DCW      0x0000,0x0000
000f08  00000000          DCW      0x0000,0x0000
000f0c  03d80ff8          DCW      0x03d8,0x0ff8
000f10  0c381818          DCW      0x0c38,0x1818
000f14  18181818          DCW      0x1818,0x1818
000f18  18181818          DCW      0x1818,0x1818
000f1c  18180c38          DCW      0x1818,0x0c38
000f20  0ff803d8          DCW      0x0ff8,0x03d8
000f24  00180018          DCW      0x0018,0x0018
000f28  00180018          DCW      0x0018,0x0018
000f2c  00180000          DCW      0x0018,0x0000
000f30  00000000          DCW      0x0000,0x0000
000f34  00000000          DCW      0x0000,0x0000
000f38  00000000          DCW      0x0000,0x0000
000f3c  1bc01ff0          DCW      0x1bc0,0x1ff0
000f40  1c301818          DCW      0x1c30,0x1818
000f44  18181818          DCW      0x1818,0x1818
000f48  18181818          DCW      0x1818,0x1818
000f4c  18181c30          DCW      0x1818,0x1c30
000f50  1ff01bc0          DCW      0x1ff0,0x1bc0
000f54  18001800          DCW      0x1800,0x1800
000f58  18001800          DCW      0x1800,0x1800
000f5c  18000000          DCW      0x1800,0x0000
000f60  00000000          DCW      0x0000,0x0000
000f64  00000000          DCW      0x0000,0x0000
000f68  00000000          DCW      0x0000,0x0000
000f6c  07b003f0          DCW      0x07b0,0x03f0
000f70  00700030          DCW      0x0070,0x0030
000f74  00300030          DCW      0x0030,0x0030
000f78  00300030          DCW      0x0030,0x0030
000f7c  00300030          DCW      0x0030,0x0030
000f80  00300030          DCW      0x0030,0x0030
000f84  00000000          DCW      0x0000,0x0000
000f88  00000000          DCW      0x0000,0x0000
000f8c  00000000          DCW      0x0000,0x0000
000f90  00000000          DCW      0x0000,0x0000
000f94  00000000          DCW      0x0000,0x0000
000f98  00000000          DCW      0x0000,0x0000
000f9c  03e003f0          DCW      0x03e0,0x03f0
000fa0  0e380c18          DCW      0x0e38,0x0c18
000fa4  003803f0          DCW      0x0038,0x03f0
000fa8  07c00c00          DCW      0x07c0,0x0c00
000fac  0c180e38          DCW      0x0c18,0x0e38
000fb0  07f003e0          DCW      0x07f0,0x03e0
000fb4  00000000          DCW      0x0000,0x0000
000fb8  00000000          DCW      0x0000,0x0000
000fbc  00000000          DCW      0x0000,0x0000
000fc0  00000000          DCW      0x0000,0x0000
000fc4  008000c0          DCW      0x0080,0x00c0
000fc8  00c000c0          DCW      0x00c0,0x00c0
000fcc  07f007f0          DCW      0x07f0,0x07f0
000fd0  00c000c0          DCW      0x00c0,0x00c0
000fd4  00c000c0          DCW      0x00c0,0x00c0
000fd8  00c000c0          DCW      0x00c0,0x00c0
000fdc  00c000c0          DCW      0x00c0,0x00c0
000fe0  07c00780          DCW      0x07c0,0x0780
000fe4  00000000          DCW      0x0000,0x0000
000fe8  00000000          DCW      0x0000,0x0000
000fec  00000000          DCW      0x0000,0x0000
000ff0  00000000          DCW      0x0000,0x0000
000ff4  00000000          DCW      0x0000,0x0000
000ff8  00000000          DCW      0x0000,0x0000
000ffc  18181818          DCW      0x1818,0x1818
001000  18181818          DCW      0x1818,0x1818
001004  18181818          DCW      0x1818,0x1818
001008  18181818          DCW      0x1818,0x1818
00100c  18181c38          DCW      0x1818,0x1c38
001010  1ff019e0          DCW      0x1ff0,0x19e0
001014  00000000          DCW      0x0000,0x0000
001018  00000000          DCW      0x0000,0x0000
00101c  00000000          DCW      0x0000,0x0000
001020  00000000          DCW      0x0000,0x0000
001024  00000000          DCW      0x0000,0x0000
001028  00000000          DCW      0x0000,0x0000
00102c  180c0c18          DCW      0x180c,0x0c18
001030  0c180c18          DCW      0x0c18,0x0c18
001034  06300630          DCW      0x0630,0x0630
001038  06300360          DCW      0x0630,0x0360
00103c  03600360          DCW      0x0360,0x0360
001040  01c001c0          DCW      0x01c0,0x01c0
001044  00000000          DCW      0x0000,0x0000
001048  00000000          DCW      0x0000,0x0000
00104c  00000000          DCW      0x0000,0x0000
001050  00000000          DCW      0x0000,0x0000
001054  00000000          DCW      0x0000,0x0000
001058  00000000          DCW      0x0000,0x0000
00105c  41c141c1          DCW      0x41c1,0x41c1
001060  61c36363          DCW      0x61c3,0x6363
001064  63636363          DCW      0x6363,0x6363
001068  36363636          DCW      0x3636,0x3636
00106c  36361c1c          DCW      0x3636,0x1c1c
001070  1c1c1c1c          DCW      0x1c1c,0x1c1c
001074  00000000          DCW      0x0000,0x0000
001078  00000000          DCW      0x0000,0x0000
00107c  00000000          DCW      0x0000,0x0000
001080  00000000          DCW      0x0000,0x0000
001084  00000000          DCW      0x0000,0x0000
001088  00000000          DCW      0x0000,0x0000
00108c  381c1c38          DCW      0x381c,0x1c38
001090  0c300660          DCW      0x0c30,0x0660
001094  03600360          DCW      0x0360,0x0360
001098  03600360          DCW      0x0360,0x0360
00109c  06600c30          DCW      0x0660,0x0c30
0010a0  1c38381c          DCW      0x1c38,0x381c
0010a4  00000000          DCW      0x0000,0x0000
0010a8  00000000          DCW      0x0000,0x0000
0010ac  00000000          DCW      0x0000,0x0000
0010b0  00000000          DCW      0x0000,0x0000
0010b4  00000000          DCW      0x0000,0x0000
0010b8  00000000          DCW      0x0000,0x0000
0010bc  30181830          DCW      0x3018,0x1830
0010c0  18301870          DCW      0x1830,0x1870
0010c4  0c600c60          DCW      0x0c60,0x0c60
0010c8  0ce006c0          DCW      0x0ce0,0x06c0
0010cc  06c00380          DCW      0x06c0,0x0380
0010d0  03800380          DCW      0x0380,0x0380
0010d4  01800180          DCW      0x0180,0x0180
0010d8  01c000f0          DCW      0x01c0,0x00f0
0010dc  00700000          DCW      0x0070,0x0000
0010e0  00000000          DCW      0x0000,0x0000
0010e4  00000000          DCW      0x0000,0x0000
0010e8  00000000          DCW      0x0000,0x0000
0010ec  1ffc1ffc          DCW      0x1ffc,0x1ffc
0010f0  0c000600          DCW      0x0c00,0x0600
0010f4  03000180          DCW      0x0300,0x0180
0010f8  00c00060          DCW      0x00c0,0x0060
0010fc  00300018          DCW      0x0030,0x0018
001100  1ffc1ffc          DCW      0x1ffc,0x1ffc
001104  00000000          DCW      0x0000,0x0000
001108  00000000          DCW      0x0000,0x0000
00110c  00000000          DCW      0x0000,0x0000
001110  00000300          DCW      0x0000,0x0300
001114  018000c0          DCW      0x0180,0x00c0
001118  00c000c0          DCW      0x00c0,0x00c0
00111c  00c000c0          DCW      0x00c0,0x00c0
001120  00c00060          DCW      0x00c0,0x0060
001124  00600030          DCW      0x0060,0x0030
001128  00600040          DCW      0x0060,0x0040
00112c  00c000c0          DCW      0x00c0,0x00c0
001130  00c000c0          DCW      0x00c0,0x00c0
001134  00c000c0          DCW      0x00c0,0x00c0
001138  01800300          DCW      0x0180,0x0300
00113c  00000000          DCW      0x0000,0x0000
001140  00000180          DCW      0x0000,0x0180
001144  01800180          DCW      0x0180,0x0180
001148  01800180          DCW      0x0180,0x0180
00114c  01800180          DCW      0x0180,0x0180
001150  01800180          DCW      0x0180,0x0180
001154  01800180          DCW      0x0180,0x0180
001158  01800180          DCW      0x0180,0x0180
00115c  01800180          DCW      0x0180,0x0180
001160  01800180          DCW      0x0180,0x0180
001164  01800180          DCW      0x0180,0x0180
001168  01800180          DCW      0x0180,0x0180
00116c  01800000          DCW      0x0180,0x0000
001170  00000060          DCW      0x0000,0x0060
001174  00c001c0          DCW      0x00c0,0x01c0
001178  01800180          DCW      0x0180,0x0180
00117c  01800180          DCW      0x0180,0x0180
001180  01800300          DCW      0x0180,0x0300
001184  03000600          DCW      0x0300,0x0600
001188  03000100          DCW      0x0300,0x0100
00118c  01800180          DCW      0x0180,0x0180
001190  01800180          DCW      0x0180,0x0180
001194  01800180          DCW      0x0180,0x0180
001198  00c00060          DCW      0x00c0,0x0060
00119c  00000000          DCW      0x0000,0x0000
0011a0  00000000          DCW      0x0000,0x0000
0011a4  00000000          DCW      0x0000,0x0000
0011a8  00000000          DCW      0x0000,0x0000
0011ac  00000000          DCW      0x0000,0x0000
0011b0  10f01ff8          DCW      0x10f0,0x1ff8
0011b4  0f080000          DCW      0x0f08,0x0000
0011b8  00000000          DCW      0x0000,0x0000
0011bc  00000000          DCW      0x0000,0x0000
0011c0  00000000          DCW      0x0000,0x0000
0011c4  00000000          DCW      0x0000,0x0000
0011c8  00000000          DCW      0x0000,0x0000
0011cc  00000000          DCW      0x0000,0x0000

                          AREA ||.data||, DATA, ALIGN=1

                  Frame_rate
000000  3c                DCB      0x3c
                  DotclkValue
000001  1b                DCB      0x1b
                  Freq_OSC
000002  18                DCB      0x18
                  FontR
000003  00                DCB      0x00
                  FontG
000004  00                DCB      0x00
                  FontB
000005  00                DCB      0x00
                  value_HighSpeed
000006  0189              DCW      0x0189
                  value_Lane_select
000008  0002              DCW      0x0002
                  VDP
00000a  00f0              DCW      0x00f0
                  VBP
00000c  000c              DCW      0x000c
                  VFP
00000e  000c              DCW      0x000c
                  HDP
000010  01e0              DCW      0x01e0
                  HBP
000012  0028              DCW      0x0028
                  HFP
000014  0059              DCW      0x0059
                  VPW
000016  0004              DCW      0x0004
                  HPW
000018  0006              DCW      0x0006
                  ||mm||
00001a  0000              DCW      0x0000
                  SC7789_A_BC
00001c  bc67              DCB      0xbc,0x67
                  SC7789_A_CC_B
00001e  cc0c              DCB      0xcc,0x0c
                  SC7789_A_CC_F
000020  cc00              DCB      0xcc,0x00
                  SC7789_A_B2
000022  b223              DCB      0xb2,0x23
                  SC7789_A_B4
000024  b400              DCB      0xb4,0x00
                  SC7789_A_B8
000026  b807              DCB      0xb8,0x07
000028  22                DCB      0x22
                  SC7789_A_B5
000029  b50909            DCB      0xb5,0x09,0x09
                  SC7789_A_B9
00002c  b9f10800          DCB      0xb9,0xf1,0x08,0x00
                  SC7789_A_C6
000030  c60000ff          DCB      0xc6,0x00,0x00,0xff
                  SC7789_A_E3
000034  e3020202          DCB      0xe3,0x02,0x02,0x02
000038  02                DCB      0x02
                  SC7789_A_C0
000039  c07350            DCB      0xc0,0x73,0x50
00003c  000870            DCB      0x00,0x08,0x70
                  SC7789_A_B1
00003f  b1                DCB      0xb1
000040  221b1bb7          DCB      0x22,0x1b,0x1b,0xb7
000044  2202a8            DCB      0x22,0x02,0xa8
                  ASCII_Table1
000047  00                DCB      0x00
000048  00000000          DCB      0x00,0x00,0x00,0x00
00004c  00000000          DCB      0x00,0x00,0x00,0x00
000050  00000000          DCB      0x00,0x00,0x00,0x00
000054  00000000          DCB      0x00,0x00,0x00,0x00
000058  00000000          DCB      0x00,0x00,0x00,0x00
00005c  00000000          DCB      0x00,0x00,0x00,0x00
000060  00000000          DCB      0x00,0x00,0x00,0x00
000064  00000000          DCB      0x00,0x00,0x00,0x00
000068  00000000          DCB      0x00,0x00,0x00,0x00
00006c  00000000          DCB      0x00,0x00,0x00,0x00
000070  00000000          DCB      0x00,0x00,0x00,0x00
000074  00000000          DCB      0x00,0x00,0x00,0x00
000078  00000204          DCB      0x00,0x00,0x02,0x04
00007c  04080208          DCB      0x04,0x08,0x02,0x08
000080  62c81f00          DCB      0x62,0xc8,0x1f,0x00
000084  02803f00          DCB      0x02,0x80,0x3f,0x00
000088  020842ce          DCB      0x02,0x08,0x42,0xce
00008c  3d080088          DCB      0x3d,0x08,0x00,0x88
000090  3f881088          DCB      0x3f,0x88,0x10,0x88
000094  10881fa8          DCB      0x10,0x88,0x1f,0xa8
000098  10981098          DCB      0x10,0x98,0x10,0x98
00009c  1f881088          DCB      0x1f,0x88,0x10,0x88
0000a0  10801c80          DCB      0x10,0x80,0x1c,0x80
0000a4  10000000          DCB      0x10,0x00,0x00,0x00
0000a8  00000008          DCB      0x00,0x00,0x00,0x08
0000ac  02080408          DCB      0x02,0x08,0x04,0x08
0000b0  048840a8          DCB      0x04,0x88,0x40,0xa8
0000b4  7ffe2048          DCB      0x7f,0xfe,0x20,0x48
0000b8  06080208          DCB      0x06,0x08,0x02,0x08
0000bc  023801c8          DCB      0x02,0x38,0x01,0xc8
0000c0  3f0c118e          DCB      0x3f,0x0c,0x11,0x8e
0000c4  10880888          DCB      0x10,0x88,0x08,0x88
0000c8  08080b08          DCB      0x08,0x08,0x0b,0x08
0000cc  0c081c08          DCB      0x0c,0x08,0x1c,0x08
0000d0  320e21c8          DCB      0x32,0x0e,0x21,0xc8
0000d4  00000000          DCB      0x00,0x00,0x00,0x00
0000d8  00000000          DCB      0x00,0x00,0x00,0x00
0000dc  000060fe          DCB      0x00,0x00,0x60,0xfe
0000e0  1f800080          DCB      0x1f,0x80,0x00,0x80
0000e4  00800080          DCB      0x00,0x80,0x00,0x80
0000e8  00800180          DCB      0x00,0x80,0x01,0x80
0000ec  06800c80          DCB      0x06,0x80,0x0c,0x80
0000f0  18801080          DCB      0x18,0x80,0x10,0x80
0000f4  00800080          DCB      0x00,0x80,0x00,0x80
0000f8  00800080          DCB      0x00,0x80,0x00,0x80
0000fc  00800080          DCB      0x00,0x80,0x00,0x80
000100  00800080          DCB      0x00,0x80,0x00,0x80
000104  00000000          DCB      0x00,0x00,0x00,0x00
000108  00000000          DCB      0x00,0x00,0x00,0x00
00010c  00000000          DCB      0x00,0x00,0x00,0x00
000110  00f00098          DCB      0x00,0xf0,0x00,0x98
000114  010c030c          DCB      0x01,0x0c,0x03,0x0c
000118  02060606          DCB      0x02,0x06,0x06,0x06
00011c  06060606          DCB      0x06,0x06,0x06,0x06
000120  06060606          DCB      0x06,0x06,0x06,0x06
000124  06060606          DCB      0x06,0x06,0x06,0x06
000128  060c020c          DCB      0x06,0x0c,0x02,0x0c
00012c  039801f0          DCB      0x03,0x98,0x01,0xf0
000130  00000000          DCB      0x00,0x00,0x00,0x00
000134  00000000          DCB      0x00,0x00,0x00,0x00
000138  00000000          DCB      0x00,0x00,0x00,0x00
00013c  00000000          DCB      0x00,0x00,0x00,0x00
000140  00fe0762          DCB      0x00,0xfe,0x07,0x62
000144  04610861          DCB      0x04,0x61,0x08,0x61
000148  08600060          DCB      0x08,0x60,0x00,0x60
00014c  00600060          DCB      0x00,0x60,0x00,0x60
000150  00600060          DCB      0x00,0x60,0x00,0x60
000154  00600060          DCB      0x00,0x60,0x00,0x60
000158  00600060          DCB      0x00,0x60,0x00,0x60
00015c  006000f0          DCB      0x00,0x60,0x00,0xf0
000160  00000000          DCB      0x00,0x00,0x00,0x00
000164  00000000          DCB      0x00,0x00,0x00,0x00
000168  00000000          DCB      0x00,0x00,0x00,0x00
00016c  00000000          DCB      0x00,0x00,0x00,0x00
000170  00ff0106          DCB      0x00,0xff,0x01,0x06
000174  03060606          DCB      0x03,0x06,0x06,0x06
000178  06060606          DCB      0x06,0x06,0x06,0x06
00017c  06060606          DCB      0x06,0x06,0x06,0x06
000180  03fe0106          DCB      0x03,0xfe,0x01,0x06
000184  00060006          DCB      0x00,0x06,0x00,0x06
000188  00060006          DCB      0x00,0x06,0x00,0x06
00018c  0006000f          DCB      0x00,0x06,0x00,0x0f
000190  00000000          DCB      0x00,0x00,0x00,0x00
000194  00000000          DCB      0x00,0x00,0x00,0x00
000198  00000008          DCB      0x00,0x00,0x00,0x08
00019c  08080484          DCB      0x08,0x08,0x04,0x84
0001a0  24f43f8c          DCB      0x24,0xf4,0x3f,0x8c
0001a4  24827f52          DCB      0x24,0x82,0x7f,0x52
0001a8  245e2448          DCB      0x24,0x5e,0x24,0x48
0001ac  3fc81508          DCB      0x3f,0xc8,0x15,0x08
0001b0  25183fac          DCB      0x25,0x18,0x3f,0xac
0001b4  04a804c8          DCB      0x04,0xa8,0x04,0xc8
0001b8  7fc804b8          DCB      0x7f,0xc8,0x04,0xb8
0001bc  04d80448          DCB      0x04,0xd8,0x04,0x48
0001c0  05207e10          DCB      0x05,0x20,0x7e,0x10
0001c4  30000000          DCB      0x30,0x00,0x00,0x00
0001c8  00000000          DCB      0x00,0x00,0x00,0x00
0001cc  000000e0          DCB      0x00,0x00,0x00,0xe0
0001d0  00e000e0          DCB      0x00,0xe0,0x00,0xe0
0001d4  00e000e0          DCB      0x00,0xe0,0x00,0xe0
0001d8  00400040          DCB      0x00,0x40,0x00,0x40
0001dc  00400040          DCB      0x00,0x40,0x00,0x40
0001e0  00400040          DCB      0x00,0x40,0x00,0x40
0001e4  00000000          DCB      0x00,0x00,0x00,0x00
0001e8  000000e0          DCB      0x00,0x00,0x00,0xe0
0001ec  00e000e0          DCB      0x00,0xe0,0x00,0xe0
0001f0  00000000          DCB      0x00,0x00,0x00,0x00
0001f4  00000000          DCB      0x00,0x00,0x00,0x00
0001f8  00000000          DCB      0x00,0x00,0x00,0x00
0001fc  00000000          DCB      0x00,0x00,0x00,0x00
000200  000010f8          DCB      0x00,0x00,0x10,0xf8
000204  3f000000          DCB      0x3f,0x00,0x00,0x00
000208  00000000          DCB      0x00,0x00,0x00,0x00
00020c  00000000          DCB      0x00,0x00,0x00,0x00
000210  00000000          DCB      0x00,0x00,0x00,0x00
000214  00000000          DCB      0x00,0x00,0x00,0x00
000218  00000000          DCB      0x00,0x00,0x00,0x00
00021c  20fe7f00          DCB      0x20,0xfe,0x7f,0x00
000220  00000000          DCB      0x00,0x00,0x00,0x00
000224  00000000          DCB      0x00,0x00,0x00,0x00
000228  00000080          DCB      0x00,0x00,0x00,0x80
00022c  01800080          DCB      0x01,0x80,0x00,0x80
000230  01400140          DCB      0x01,0x40,0x01,0x40
000234  02200430          DCB      0x02,0x20,0x04,0x30
000238  08101808          DCB      0x08,0x10,0x18,0x08
00023c  74f42b02          DCB      0x74,0xf4,0x2b,0x02
000240  00000000          DCB      0x00,0x00,0x00,0x00
000244  08f00f10          DCB      0x08,0xf0,0x0f,0x10
000248  08100810          DCB      0x08,0x10,0x08,0x10
00024c  08100810          DCB      0x08,0x10,0x08,0x10
000250  08f00f10          DCB      0x08,0xf0,0x0f,0x10
000254  08000000          DCB      0x08,0x00,0x00,0x00
000258  00000000          DCB      0x00,0x00,0x00,0x00
00025c  00000000          DCB      0x00,0x00,0x00,0x00
000260  00000000          DCB      0x00,0x00,0x00,0x00
000264  00000000          DCB      0x00,0x00,0x00,0x00
000268  00000000          DCB      0x00,0x00,0x00,0x00
00026c  40fe7f00          DCB      0x40,0xfe,0x7f,0x00
000270  00000000          DCB      0x00,0x00,0x00,0x00
000274  00000000          DCB      0x00,0x00,0x00,0x00
000278  00000000          DCB      0x00,0x00,0x00,0x00
00027c  00000000          DCB      0x00,0x00,0x00,0x00
000280  00000000          DCB      0x00,0x00,0x00,0x00
000284  00000000          DCB      0x00,0x00,0x00,0x00
000288  00000000          DCB      0x00,0x00,0x00,0x00
00028c  00000000          DCB      0x00,0x00,0x00,0x00
000290  00000000          DCB      0x00,0x00,0x00,0x00
000294  00000000          DCB      0x00,0x00,0x00,0x00
000298  00000000          DCB      0x00,0x00,0x00,0x00
00029c  00000000          DCB      0x00,0x00,0x00,0x00
0002a0  00000000          DCB      0x00,0x00,0x00,0x00
0002a4  00000000          DCB      0x00,0x00,0x00,0x00
0002a8  00000000          DCB      0x00,0x00,0x00,0x00
0002ac  00000000          DCB      0x00,0x00,0x00,0x00
0002b0  00000000          DCB      0x00,0x00,0x00,0x00
0002b4  00000000          DCB      0x00,0x00,0x00,0x00
0002b8  00000000          DCB      0x00,0x00,0x00,0x00
0002bc  00000000          DCB      0x00,0x00,0x00,0x00
0002c0  003ef818          DCB      0x00,0x3e,0xf8,0x18
0002c4  20182038          DCB      0x20,0x18,0x20,0x38
0002c8  10301030          DCB      0x10,0x30,0x10,0x30
0002cc  10600860          DCB      0x10,0x60,0x08,0x60
0002d0  086008c0          DCB      0x08,0x60,0x08,0xc0
0002d4  04c004c0          DCB      0x04,0xc0,0x04,0xc0
0002d8  05800380          DCB      0x05,0x80,0x03,0x80
0002dc  03800300          DCB      0x03,0x80,0x03,0x00
0002e0  01000000          DCB      0x01,0x00,0x00,0x00
0002e4  00000000          DCB      0x00,0x00,0x00,0x00
0002e8  00000000          DCB      0x00,0x00,0x00,0x00
0002ec  00000000          DCB      0x00,0x00,0x00,0x00
0002f0  00c03f30          DCB      0x00,0xc0,0x3f,0x30
0002f4  3018200c          DCB      0x30,0x18,0x20,0x0c
0002f8  400c0006          DCB      0x40,0x0c,0x00,0x06
0002fc  00060006          DCB      0x00,0x06,0x00,0x06
000300  00060006          DCB      0x00,0x06,0x00,0x06
000304  00060006          DCB      0x00,0x06,0x00,0x06
000308  400c4018          DCB      0x40,0x0c,0x40,0x18
00030c  203018e0          DCB      0x20,0x30,0x18,0xe0
000310  07000000          DCB      0x07,0x00,0x00,0x00
000314  00000000          DCB      0x00,0x00,0x00,0x00
000318  00000000          DCB      0x00,0x00,0x00,0x00
00031c  00000000          DCB      0x00,0x00,0x00,0x00
000320  00e00730          DCB      0x00,0xe0,0x07,0x30
000324  0c18100c          DCB      0x0c,0x18,0x10,0x0c
000328  30042006          DCB      0x30,0x04,0x20,0x06
00032c  60066006          DCB      0x60,0x06,0x60,0x06
000330  60066006          DCB      0x60,0x06,0x60,0x06
000334  60066004          DCB      0x60,0x06,0x60,0x04
000338  200c3018          DCB      0x20,0x0c,0x30,0x18
00033c  10300ce0          DCB      0x10,0x30,0x0c,0xe0
000340  07000000          DCB      0x07,0x00,0x00,0x00
000344  00000000          DCB      0x00,0x00,0x00,0x00
000348  00000000          DCB      0x00,0x00,0x00,0x00
00034c  00000000          DCB      0x00,0x00,0x00,0x00
000350  001ff81c          DCB      0x00,0x1f,0xf8,0x1c
000354  381c381c          DCB      0x38,0x1c,0x38,0x1c
000358  3c343434          DCB      0x3c,0x34,0x34,0x34
00035c  34343464          DCB      0x34,0x34,0x34,0x64
000360  32643264          DCB      0x32,0x64,0x32,0x64
000364  326431c4          DCB      0x32,0x64,0x31,0xc4
000368  31c431c4          DCB      0x31,0xc4,0x31,0xc4
00036c  3084309f          DCB      0x30,0x84,0x30,0x9f
000370  fc000000          DCB      0xfc,0x00,0x00,0x00
000374  00000000          DCB      0x00,0x00,0x00,0x00
000378  00000000          DCB      0x00,0x00,0x00,0x00
00037c  000000f8          DCB      0x00,0x00,0x00,0xf8
000380  1f001000          DCB      0x1f,0x00,0x10,0x00
000384  10001000          DCB      0x10,0x00,0x10,0x00
000388  10081008          DCB      0x10,0x08,0x10,0x08
00038c  10f81f08          DCB      0x10,0xf8,0x1f,0x08
000390  00080008          DCB      0x00,0x08,0x00,0x08
000394  00080008          DCB      0x00,0x08,0x00,0x08
000398  00082008          DCB      0x00,0x08,0x20,0x08
00039c  20082008          DCB      0x20,0x08,0x20,0x08
0003a0  60f83f00          DCB      0x60,0xf8,0x3f,0x00
0003a4  00000000          DCB      0x00,0x00,0x00,0x00
0003a8  00800080          DCB      0x00,0x80,0x00,0x80
0003ac  01800080          DCB      0x01,0x80,0x00,0x80
0003b0  008010f8          DCB      0x00,0x80,0x10,0xf8
0003b4  0f800080          DCB      0x0f,0x80,0x00,0x80
0003b8  00800080          DCB      0x00,0x80,0x00,0x80
0003bc  20fc7f80          DCB      0x20,0xfc,0x7f,0x80
0003c0  01c002c0          DCB      0x01,0xc0,0x02,0xc0
0003c4  02a004a0          DCB      0x02,0xa0,0x04,0xa0
0003c8  04900888          DCB      0x04,0x90,0x08,0x88
0003cc  30847082          DCB      0x30,0x84,0x70,0x82
0003d0  00800080          DCB      0x00,0x80,0x00,0x80
0003d4  00000000          DCB      0x00,0x00,0x00,0x00
0003d8  00000008          DCB      0x00,0x00,0x00,0x08
0003dc  01080108          DCB      0x01,0x08,0x01,0x08
0003e0  210831a8          DCB      0x21,0x08,0x31,0xa8
0003e4  0f681218          DCB      0x0f,0x68,0x12,0x18
0003e8  5a0a4e0a          DCB      0x5a,0x0a,0x4e,0x0a
0003ec  460a4f88          DCB      0x46,0x0a,0x4f,0x88
0003f0  70480008          DCB      0x70,0x48,0x00,0x08
0003f4  10c80f98          DCB      0x10,0xc8,0x0f,0x98
0003f8  04a404a4          DCB      0x04,0xa4,0x04,0xa4
0003fc  44a44444          DCB      0x44,0xa4,0x44,0x44
000400  44627c31          DCB      0x44,0x62,0x7c,0x31
000404  38000000          DCB      0x38,0x00,0x00,0x00
000408  00000020          DCB      0x00,0x00,0x00,0x20
00040c  00600080          DCB      0x00,0x60,0x00,0x80
000410  00800080          DCB      0x00,0x80,0x00,0x80
000414  00800180          DCB      0x00,0x80,0x01,0x80
000418  01800140          DCB      0x01,0x80,0x01,0x40
00041c  01400240          DCB      0x01,0x40,0x02,0x40
000420  02200220          DCB      0x02,0x20,0x02,0x20
000424  04200410          DCB      0x04,0x20,0x04,0x10
000428  08080808          DCB      0x08,0x08,0x08,0x08
00042c  10047002          DCB      0x10,0x04,0x70,0x02
000430  60000000          DCB      0x60,0x00,0x00,0x00
000434  000000            DCB      0x00,0x00,0x00
                  SC7789_A_BA
000437  ba                DCB      0xba
000438  31004425          DCB      0x31,0x00,0x44,0x25
00043c  910a0000          DCB      0x91,0x0a,0x00,0x00
000440  c2340000          DCB      0xc2,0x34,0x00,0x00
000444  04021db9          DCB      0x04,0x02,0x1d,0xb9
000448  ee40              DCB      0xee,0x40
                  SC7789_A_B3
00044a  b301              DCB      0xb3,0x01
00044c  00060610          DCB      0x00,0x06,0x06,0x10
000450  0a4540            DCB      0x0a,0x45,0x40
                  SC7789_A_E9
000453  e9                DCB      0xe9
000454  00000803          DCB      0x00,0x00,0x08,0x03
000458  2f896a12          DCB      0x2f,0x89,0x6a,0x12
00045c  3123480c          DCB      0x31,0x23,0x48,0x0c
000460  896a4702          DCB      0x89,0x6a,0x47,0x02
000464  04000000          DCB      0x04,0x00,0x00,0x00
000468  00208888          DCB      0x00,0x20,0x88,0x88
00046c  40286948          DCB      0x40,0x28,0x69,0x48
000470  88888088          DCB      0x88,0x88,0x80,0x88
000474  88513879          DCB      0x88,0x51,0x38,0x79
000478  58888881          DCB      0x58,0x88,0x88,0x81
00047c  00000000          DCB      0x00,0x00,0x00,0x00
000480  00000000          DCB      0x00,0x00,0x00,0x00
000484  000000            DCB      0x00,0x00,0x00
                  SC7789_A_EA
000487  ea                DCB      0xea
000488  88883759          DCB      0x88,0x88,0x37,0x59
00048c  18188888          DCB      0x18,0x18,0x88,0x88
000490  85888826          DCB      0x85,0x88,0x88,0x26
000494  49080888          DCB      0x49,0x08,0x08,0x88
000498  88843000          DCB      0x88,0x84,0x30,0x00
00049c  00ff0050          DCB      0x00,0xff,0x00,0x50
0004a0  00000000          DCB      0x00,0x00,0x00,0x00
0004a4  00000000          DCB      0x00,0x00,0x00,0x00
0004a8  00000000          DCB      0x00,0x00,0x00,0x00
                  SC7789_A_E0
0004ac  e0000000          DCB      0xe0,0x00,0x00,0x00
0004b0  04040a18          DCB      0x04,0x04,0x0a,0x18
0004b4  2b050c11          DCB      0x2b,0x05,0x0c,0x11
0004b8  16181616          DCB      0x16,0x18,0x16,0x16
0004bc  15190000          DCB      0x15,0x19,0x00,0x00
0004c0  0004040a          DCB      0x00,0x04,0x04,0x0a
0004c4  182c050c          DCB      0x18,0x2c,0x05,0x0c
0004c8  12161816          DCB      0x12,0x16,0x18,0x16
0004cc  171619            DCB      0x17,0x16,0x19
                  SC7789_A_C1
0004cf  c1                DCB      0xc1
0004d0  0100030b          DCB      0x01,0x00,0x03,0x0b
0004d4  17202630          DCB      0x17,0x20,0x26,0x30
0004d8  363f4850          DCB      0x36,0x3f,0x48,0x50
0004dc  585f6871          DCB      0x58,0x5f,0x68,0x71
0004e0  79828991          DCB      0x79,0x82,0x89,0x91
0004e4  99a1a9b0          DCB      0x99,0xa1,0xa9,0xb0
0004e8  b8c0c8d0          DCB      0xb8,0xc0,0xc8,0xd0
0004ec  d6dce4ed          DCB      0xd6,0xdc,0xe4,0xed
0004f0  f7ff0000          DCB      0xf7,0xff,0x00,0x00
0004f4  00c00a80          DCB      0x00,0xc0,0x0a,0x80
0004f8  30e80000          DCB      0x30,0xe8,0x00,0x00
0004fc  030b1720          DCB      0x03,0x0b,0x17,0x20
000500  27303740          DCB      0x27,0x30,0x37,0x40
000504  4850585f          DCB      0x48,0x50,0x58,0x5f
000508  67707880          DCB      0x67,0x70,0x78,0x80
00050c  889098a0          DCB      0x88,0x90,0x98,0xa0
000510  a8afb7bf          DCB      0xa8,0xaf,0xb7,0xbf
000514  c7cfd5dc          DCB      0xc7,0xcf,0xd5,0xdc
000518  e4edf7ff          DCB      0xe4,0xed,0xf7,0xff
00051c  000000c0          DCB      0x00,0x00,0x00,0xc0
000520  0a8030e8          DCB      0x0a,0x80,0x30,0xe8
000524  0000030d          DCB      0x00,0x00,0x03,0x0d
000528  19232931          DCB      0x19,0x23,0x29,0x31
00052c  3841484f          DCB      0x38,0x41,0x48,0x4f
000530  575d656c          DCB      0x57,0x5d,0x65,0x6c
000534  747b848b          DCB      0x74,0x7b,0x84,0x8b
000538  949ba4aa          DCB      0x94,0x9b,0xa4,0xaa
00053c  b4b9c3cc          DCB      0xb4,0xb9,0xc3,0xcc
000540  d6dce4ed          DCB      0xd6,0xdc,0xe4,0xed
000544  f7ff0000          DCB      0xf7,0xff,0x00,0x00
000548  00c00a80          DCB      0x00,0xc0,0x0a,0x80
00054c  30e800            DCB      0x30,0xe8,0x00

                          AREA ||area_number.65||, DATA, ALIGN=1

                          EXPORTAS ||area_number.65||, ||.data||
                  DeviceCode
000000  0000              DCB      0x00,0x00
