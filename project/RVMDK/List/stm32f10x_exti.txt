; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_exti.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -Otime --diag_suppress=9931 -I..\..\project -I..\..\library\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=523 -DVECT_TAB_FLASH --omf_browse=.\obj\stm32f10x_exti.crf ..\..\library\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;163    *******************************************************************************/
;;;164    void EXTI_ClearFlag(u32 EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;165    {
;;;166      /* Check the parameters */
;;;167      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;168      
;;;169      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;170    }
000004  4770              BX       lr
;;;171    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;210    *******************************************************************************/
;;;211    void EXTI_ClearITPendingBit(u32 EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;212    {
;;;213      /* Check the parameters */
;;;214      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;215      
;;;216      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;217    }
000004  4770              BX       lr
;;;218    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;35     *******************************************************************************/
;;;36     void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;37     {
;;;38       EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;39       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;40       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;41       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;42       EXTI->PR = 0x0007FFFF;
000012  4904              LDR      r1,|L3.36|
000014  4802              LDR      r0,|L3.32|
000016  6008              STR      r0,[r1,#0]
;;;43     }
000018  4770              BX       lr
;;;44     
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      0x40010400
                  |L3.32|
                          DCD      0x0007ffff
                  |L3.36|
                          DCD      0x40010414

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;119    *******************************************************************************/
;;;120    void EXTI_GenerateSWInterrupt(u32 EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;121    {
;;;122      /* Check the parameters */
;;;123      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;124      
;;;125      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4310              ORRS     r0,r0,r2
000006  6008              STR      r0,[r1,#0]
;;;126    }
000008  4770              BX       lr
;;;127    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;136    *******************************************************************************/
;;;137    FlagStatus EXTI_GetFlagStatus(u32 EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;138    {
000002  4601              MOV      r1,r0
;;;139      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;140    
;;;141      /* Check the parameters */
;;;142      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;143      
;;;144      if ((EXTI->PR & EXTI_Line) != (u32)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
;;;145      {
;;;146        bitstatus = SET;
00000a  bf18              IT       NE
00000c  2001              MOVNE    r0,#1
;;;147      }
;;;148      else
;;;149      {
;;;150        bitstatus = RESET;
;;;151      }
;;;152      return bitstatus;
;;;153    }
00000e  4770              BX       lr
;;;154    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;180    *******************************************************************************/
;;;181    ITStatus EXTI_GetITStatus(u32 EXTI_Line)
000000  4a05              LDR      r2,|L6.24|
;;;182    {
;;;183      ITStatus bitstatus = RESET;
000002  2100              MOVS     r1,#0
;;;184      u32 enablestatus = 0;
;;;185    
;;;186      /* Check the parameters */
;;;187      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;188      
;;;189      enablestatus =  EXTI->IMR & EXTI_Line;
000004  6812              LDR      r2,[r2,#0]
;;;190    
;;;191      if (((EXTI->PR & EXTI_Line) != (u32)RESET) && (enablestatus != (u32)RESET))
000006  4b05              LDR      r3,|L6.28|
000008  4002              ANDS     r2,r2,r0              ;189
00000a  681b              LDR      r3,[r3,#0]
00000c  4203              TST      r3,r0
00000e  bf1c              ITT      NE
000010  2a00              CMPNE    r2,#0
;;;192      {
;;;193        bitstatus = SET;
000012  2101              MOVNE    r1,#1
;;;194      }
;;;195      else
;;;196      {
;;;197        bitstatus = RESET;
;;;198      }
;;;199      return bitstatus;
000014  4608              MOV      r0,r1
;;;200    }
000016  4770              BX       lr
;;;201    
                          ENDP

                  |L6.24|
                          DCD      0x40010400
                  |L6.28|
                          DCD      0x40010414

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;54     *******************************************************************************/
;;;55     void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  7982              LDRB     r2,[r0,#6]
;;;56     {
;;;57       /* Check the parameters */
;;;58       assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;59       assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;60       assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;61       assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;62          
;;;63       if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000002  6801              LDR      r1,[r0,#0]
000004  2a00              CMP      r2,#0
000006  d039              BEQ      |L7.124|
;;;64       {
;;;65         /* Clear EXTI line configuration */
;;;66         EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000008  4a22              LDR      r2,|L7.148|
00000a  6813              LDR      r3,[r2,#0]
00000c  ea230101          BIC      r1,r3,r1
000010  6011              STR      r1,[r2,#0]
;;;67         EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000012  1d11              ADDS     r1,r2,#4
000014  680a              LDR      r2,[r1,#0]
000016  6803              LDR      r3,[r0,#0]
000018  439a              BICS     r2,r2,r3
00001a  600a              STR      r2,[r1,#0]
;;;68         
;;;69         *(vu32 *)(EXTI_BASE + (u32)EXTI_InitStruct->EXTI_Mode)|= EXTI_InitStruct->EXTI_Line;
00001c  7901              LDRB     r1,[r0,#4]
00001e  f1014180          ADD      r1,r1,#0x40000000
000022  f5013180          ADD      r1,r1,#0x10000
000026  f8d12400          LDR      r2,[r1,#0x400]
00002a  6803              LDR      r3,[r0,#0]
00002c  431a              ORRS     r2,r2,r3
00002e  f8c12400          STR      r2,[r1,#0x400]
;;;70     
;;;71         /* Clear Rising Falling edge configuration */
;;;72         EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  4a19              LDR      r2,|L7.152|
000034  6811              LDR      r1,[r2,#0]
000036  6803              LDR      r3,[r0,#0]
000038  4399              BICS     r1,r1,r3
00003a  6011              STR      r1,[r2,#0]
;;;73         EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003c  1d13              ADDS     r3,r2,#4
00003e  6819              LDR      r1,[r3,#0]
000040  f8d0c000          LDR      r12,[r0,#0]
000044  ea21010c          BIC      r1,r1,r12
000048  6019              STR      r1,[r3,#0]
;;;74         
;;;75         /* Select the trigger for the selected external interrupts */
;;;76         if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00004a  7941              LDRB     r1,[r0,#5]
00004c  2910              CMP      r1,#0x10
00004e  d00a              BEQ      |L7.102|
000050  f1014180          ADD      r1,r1,#0x40000000
000054  f5013180          ADD      r1,r1,#0x10000
;;;77         {
;;;78           /* Rising Falling edge */
;;;79           EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;80           EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;81         }
;;;82         else
;;;83         {
;;;84           *(vu32 *)(EXTI_BASE + (u32)EXTI_InitStruct->EXTI_Trigger)|= EXTI_InitStruct->EXTI_Line;
000058  f8d12400          LDR      r2,[r1,#0x400]
00005c  6800              LDR      r0,[r0,#0]
00005e  4310              ORRS     r0,r0,r2
000060  f8c10400          STR      r0,[r1,#0x400]
;;;85         }
;;;86       }
;;;87       else
;;;88       {
;;;89         /* Disable the selected external lines */
;;;90         *(vu32 *)(EXTI_BASE + (u32)EXTI_InitStruct->EXTI_Mode)&= ~EXTI_InitStruct->EXTI_Line;
;;;91       }
;;;92     }
000064  4770              BX       lr
                  |L7.102|
000066  6811              LDR      r1,[r2,#0]            ;79
000068  f8d0c000          LDR      r12,[r0,#0]           ;79
00006c  ea41010c          ORR      r1,r1,r12             ;79
000070  6011              STR      r1,[r2,#0]            ;79
000072  6819              LDR      r1,[r3,#0]            ;80
000074  6800              LDR      r0,[r0,#0]            ;80
000076  4308              ORRS     r0,r0,r1              ;80
000078  6018              STR      r0,[r3,#0]            ;80
00007a  4770              BX       lr
                  |L7.124|
00007c  7900              LDRB     r0,[r0,#4]            ;90
00007e  f1004080          ADD      r0,r0,#0x40000000     ;90
000082  f5003080          ADD      r0,r0,#0x10000        ;90
000086  f8d02400          LDR      r2,[r0,#0x400]        ;90
00008a  ea220101          BIC      r1,r2,r1              ;90
00008e  f8c01400          STR      r1,[r0,#0x400]        ;90
000092  4770              BX       lr
;;;93     
                          ENDP

                  |L7.148|
                          DCD      0x40010400
                  |L7.152|
                          DCD      0x40010408

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;101    *******************************************************************************/
;;;102    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;103    {
;;;104      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
;;;105      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;106      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;107      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;108    }
00000c  4770              BX       lr
;;;109    
                          ENDP

